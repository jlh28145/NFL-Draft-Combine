2023-08-22 12:46:43,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-22 12:46:43,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-22 12:46:43,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-22 12:46:43,894:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-22 12:46:44,238:INFO:PyCaret ClassificationExperiment
2023-08-22 12:46:44,238:INFO:Logging name: clf-default-name
2023-08-22 12:46:44,250:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-08-22 12:46:44,250:INFO:version 3.0.4
2023-08-22 12:46:44,250:INFO:Initializing setup()
2023-08-22 12:46:44,250:INFO:self.USI: 16e7
2023-08-22 12:46:44,250:INFO:self._variable_keys: {'exp_name_log', 'log_plots_param', 'idx', 'logging_param', 'data', 'fold_shuffle_param', 'y_test', 'gpu_n_jobs_param', 'pipeline', 'fold_groups_param', 'target_param', 'exp_id', 'gpu_param', '_available_plots', 'X_train', 'fix_imbalance', 'USI', 'fold_generator', 'html_param', '_ml_usecase', 'X_test', 'n_jobs_param', 'memory', 'y', 'y_train', 'X', 'is_multiclass', 'seed'}
2023-08-22 12:46:44,250:INFO:Checking environment
2023-08-22 12:46:44,250:INFO:python_version: 3.10.11
2023-08-22 12:46:44,251:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2023-08-22 12:46:44,251:INFO:machine: AMD64
2023-08-22 12:46:44,251:INFO:platform: Windows-10-10.0.22621-SP0
2023-08-22 12:46:44,256:INFO:Memory: svmem(total=34014814208, available=14441410560, percent=57.5, used=19573403648, free=14441410560)
2023-08-22 12:46:44,256:INFO:Physical Core: 14
2023-08-22 12:46:44,256:INFO:Logical Core: 20
2023-08-22 12:46:44,257:INFO:Checking libraries
2023-08-22 12:46:44,257:INFO:System:
2023-08-22 12:46:44,257:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2023-08-22 12:46:44,257:INFO:executable: c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\python.exe
2023-08-22 12:46:44,257:INFO:   machine: Windows-10-10.0.22621-SP0
2023-08-22 12:46:44,257:INFO:PyCaret required dependencies:
2023-08-22 12:46:44,276:INFO:                 pip: 23.2.1
2023-08-22 12:46:44,276:INFO:          setuptools: 65.5.0
2023-08-22 12:46:44,276:INFO:             pycaret: 3.0.4
2023-08-22 12:46:44,276:INFO:             IPython: 8.14.0
2023-08-22 12:46:44,276:INFO:          ipywidgets: 8.1.0
2023-08-22 12:46:44,276:INFO:                tqdm: 4.66.1
2023-08-22 12:46:44,276:INFO:               numpy: 1.23.5
2023-08-22 12:46:44,276:INFO:              pandas: 1.5.3
2023-08-22 12:46:44,276:INFO:              jinja2: 3.1.2
2023-08-22 12:46:44,276:INFO:               scipy: 1.11.2
2023-08-22 12:46:44,276:INFO:              joblib: 1.3.2
2023-08-22 12:46:44,276:INFO:             sklearn: 1.2.2
2023-08-22 12:46:44,276:INFO:                pyod: 1.1.0
2023-08-22 12:46:44,276:INFO:            imblearn: 0.11.0
2023-08-22 12:46:44,276:INFO:   category_encoders: 2.6.2
2023-08-22 12:46:44,276:INFO:            lightgbm: 4.0.0
2023-08-22 12:46:44,276:INFO:               numba: 0.57.1
2023-08-22 12:46:44,276:INFO:            requests: 2.31.0
2023-08-22 12:46:44,276:INFO:          matplotlib: 3.7.2
2023-08-22 12:46:44,276:INFO:          scikitplot: 0.3.7
2023-08-22 12:46:44,276:INFO:         yellowbrick: 1.5
2023-08-22 12:46:44,276:INFO:              plotly: 5.16.1
2023-08-22 12:46:44,276:INFO:    plotly-resampler: Not installed
2023-08-22 12:46:44,276:INFO:             kaleido: 0.2.1
2023-08-22 12:46:44,277:INFO:           schemdraw: 0.15
2023-08-22 12:46:44,277:INFO:         statsmodels: 0.14.0
2023-08-22 12:46:44,277:INFO:              sktime: 0.22.0
2023-08-22 12:46:44,277:INFO:               tbats: 1.1.3
2023-08-22 12:46:44,277:INFO:            pmdarima: 2.0.3
2023-08-22 12:46:44,277:INFO:              psutil: 5.9.5
2023-08-22 12:46:44,277:INFO:          markupsafe: 2.1.3
2023-08-22 12:46:44,277:INFO:             pickle5: Not installed
2023-08-22 12:46:44,277:INFO:         cloudpickle: 2.2.1
2023-08-22 12:46:44,277:INFO:         deprecation: 2.1.0
2023-08-22 12:46:44,277:INFO:              xxhash: 3.3.0
2023-08-22 12:46:44,277:INFO:           wurlitzer: Not installed
2023-08-22 12:46:44,277:INFO:PyCaret optional dependencies:
2023-08-22 12:46:44,283:INFO:                shap: Not installed
2023-08-22 12:46:44,284:INFO:           interpret: Not installed
2023-08-22 12:46:44,284:INFO:                umap: Not installed
2023-08-22 12:46:44,284:INFO:    pandas_profiling: 4.5.1
2023-08-22 12:46:44,284:INFO:  explainerdashboard: Not installed
2023-08-22 12:46:44,284:INFO:             autoviz: Not installed
2023-08-22 12:46:44,284:INFO:           fairlearn: Not installed
2023-08-22 12:46:44,284:INFO:          deepchecks: Not installed
2023-08-22 12:46:44,284:INFO:             xgboost: 1.7.6
2023-08-22 12:46:44,284:INFO:            catboost: Not installed
2023-08-22 12:46:44,284:INFO:              kmodes: Not installed
2023-08-22 12:46:44,284:INFO:             mlxtend: Not installed
2023-08-22 12:46:44,284:INFO:       statsforecast: Not installed
2023-08-22 12:46:44,284:INFO:        tune_sklearn: Not installed
2023-08-22 12:46:44,284:INFO:                 ray: Not installed
2023-08-22 12:46:44,284:INFO:            hyperopt: Not installed
2023-08-22 12:46:44,284:INFO:              optuna: Not installed
2023-08-22 12:46:44,284:INFO:               skopt: Not installed
2023-08-22 12:46:44,284:INFO:              mlflow: Not installed
2023-08-22 12:46:44,284:INFO:              gradio: Not installed
2023-08-22 12:46:44,284:INFO:             fastapi: Not installed
2023-08-22 12:46:44,284:INFO:             uvicorn: Not installed
2023-08-22 12:46:44,284:INFO:              m2cgen: Not installed
2023-08-22 12:46:44,284:INFO:           evidently: Not installed
2023-08-22 12:46:44,284:INFO:               fugue: Not installed
2023-08-22 12:46:44,284:INFO:           streamlit: Not installed
2023-08-22 12:46:44,284:INFO:             prophet: Not installed
2023-08-22 12:46:44,284:INFO:None
2023-08-22 12:46:44,284:INFO:Set up data.
2023-08-22 12:46:44,291:INFO:Set up train/test split.
2023-08-22 12:46:44,299:INFO:Set up index.
2023-08-22 12:46:44,299:INFO:Set up folding strategy.
2023-08-22 12:46:44,299:INFO:Assigning column types.
2023-08-22 12:46:44,301:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-22 12:46:44,327:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 12:46:44,328:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-22 12:46:44,349:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:46:44,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:46:44,395:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 12:46:44,396:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-22 12:46:44,418:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:46:44,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:46:44,420:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-22 12:46:44,446:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-22 12:46:44,461:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:46:44,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:46:44,490:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-22 12:46:44,505:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:46:44,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:46:44,507:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-08-22 12:46:44,549:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:46:44,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:46:44,593:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:46:44,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:46:44,595:INFO:Preparing preprocessing pipeline...
2023-08-22 12:46:44,607:INFO:Set up label encoding.
2023-08-22 12:46:44,607:INFO:Set up simple imputation.
2023-08-22 12:46:44,610:INFO:Set up encoding of categorical features.
2023-08-22 12:46:44,610:INFO:Set up feature normalization.
2023-08-22 12:46:44,702:INFO:Finished creating preprocessing pipeline.
2023-08-22 12:46:44,708:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\VONHIN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['draft_ovr', 'wt', 'forty',
                                             'bench', 'vertical', 'broad_jump',
                                             'cone', 'shuttle', 'school_reg',
                                             'school_cl...
                                    include=['player_name', 'school'],
                                    transformer=TargetEncoder(cols=['player_name',
                                                                    'school'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-08-22 12:46:44,708:INFO:Creating final display dataframe.
2023-08-22 12:46:44,937:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16                    Normalize   
17             Normalize method   
18               Fold Generator   
19                  Fold Number   
20                     CPU Jobs   
21                      Use GPU   
22               Log Experiment   
23              Experiment Name   
24                          USI   

                                                Value  
0                                                6395  
1                                         draft_round  
2                                          Multiclass  
3   1.0: 0, 2.0: 1, 3.0: 2, 4.0: 3, 5.0: 4, 6.0: 5...  
4                                          (2110, 18)  
5                                          (2110, 54)  
6                                          (1477, 54)  
7                                           (633, 54)  
8                                                  13  
9                                                   4  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16                                               True  
17                                             zscore  
18                                    StratifiedKFold  
19                                                 10  
20                                                 -1  
21                                              False  
22                                              False  
23                                   clf-default-name  
24                                               16e7  
2023-08-22 12:46:44,986:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:46:44,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:46:45,030:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:46:45,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:46:45,031:INFO:setup() successfully completed in 0.81s...............
2023-08-22 12:47:07,426:INFO:Initializing compare_models()
2023-08-22 12:47:07,426:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-08-22 12:47:07,426:INFO:Checking exceptions
2023-08-22 12:47:07,431:INFO:Preparing display monitor
2023-08-22 12:47:07,453:INFO:Initializing Logistic Regression
2023-08-22 12:47:07,453:INFO:Total runtime is 0.0 minutes
2023-08-22 12:47:07,455:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:07,456:INFO:Initializing create_model()
2023-08-22 12:47:07,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:07,456:INFO:Checking exceptions
2023-08-22 12:47:07,456:INFO:Importing libraries
2023-08-22 12:47:07,456:INFO:Copying training dataset
2023-08-22 12:47:07,459:INFO:Defining folds
2023-08-22 12:47:07,460:INFO:Declaring metric variables
2023-08-22 12:47:07,462:INFO:Importing untrained model
2023-08-22 12:47:07,464:INFO:Logistic Regression Imported successfully
2023-08-22 12:47:07,470:INFO:Starting cross validation
2023-08-22 12:47:07,472:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:10,142:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,143:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,144:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:10,145:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,164:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,165:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,166:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:10,166:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,181:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,183:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,183:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:10,184:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,193:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,194:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,195:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:10,195:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,205:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,207:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,207:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,207:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:10,208:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,208:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,209:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:10,209:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,270:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,271:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,272:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:10,273:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,283:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,285:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,286:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:10,287:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,302:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,303:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,304:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:10,304:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,336:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,337:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,338:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:10,338:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:10,409:INFO:Calculating mean and std
2023-08-22 12:47:10,410:INFO:Creating metrics dataframe
2023-08-22 12:47:10,436:INFO:Uploading results into container
2023-08-22 12:47:10,437:INFO:Uploading model into container now
2023-08-22 12:47:10,437:INFO:_master_model_container: 1
2023-08-22 12:47:10,437:INFO:_display_container: 2
2023-08-22 12:47:10,437:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6395, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-08-22 12:47:10,438:INFO:create_model() successfully completed......................................
2023-08-22 12:47:10,495:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:10,495:INFO:Creating metrics dataframe
2023-08-22 12:47:10,502:INFO:Initializing K Neighbors Classifier
2023-08-22 12:47:10,502:INFO:Total runtime is 0.05083173116048177 minutes
2023-08-22 12:47:10,505:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:10,505:INFO:Initializing create_model()
2023-08-22 12:47:10,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:10,505:INFO:Checking exceptions
2023-08-22 12:47:10,505:INFO:Importing libraries
2023-08-22 12:47:10,505:INFO:Copying training dataset
2023-08-22 12:47:10,508:INFO:Defining folds
2023-08-22 12:47:10,508:INFO:Declaring metric variables
2023-08-22 12:47:10,510:INFO:Importing untrained model
2023-08-22 12:47:10,513:INFO:K Neighbors Classifier Imported successfully
2023-08-22 12:47:10,518:INFO:Starting cross validation
2023-08-22 12:47:10,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:12,701:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,703:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,704:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,729:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,730:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,731:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,760:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,762:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,763:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,782:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,784:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,784:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,785:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,786:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,787:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,790:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,791:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,792:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,792:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,792:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,793:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,806:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,807:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,808:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,815:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,816:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,817:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,824:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,825:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,826:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:12,979:INFO:Calculating mean and std
2023-08-22 12:47:12,979:INFO:Creating metrics dataframe
2023-08-22 12:47:13,012:INFO:Uploading results into container
2023-08-22 12:47:13,012:INFO:Uploading model into container now
2023-08-22 12:47:13,012:INFO:_master_model_container: 2
2023-08-22 12:47:13,012:INFO:_display_container: 2
2023-08-22 12:47:13,013:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-08-22 12:47:13,013:INFO:create_model() successfully completed......................................
2023-08-22 12:47:13,064:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:13,064:INFO:Creating metrics dataframe
2023-08-22 12:47:13,071:INFO:Initializing Naive Bayes
2023-08-22 12:47:13,071:INFO:Total runtime is 0.0936447819073995 minutes
2023-08-22 12:47:13,074:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:13,074:INFO:Initializing create_model()
2023-08-22 12:47:13,074:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:13,074:INFO:Checking exceptions
2023-08-22 12:47:13,074:INFO:Importing libraries
2023-08-22 12:47:13,074:INFO:Copying training dataset
2023-08-22 12:47:13,077:INFO:Defining folds
2023-08-22 12:47:13,077:INFO:Declaring metric variables
2023-08-22 12:47:13,079:INFO:Importing untrained model
2023-08-22 12:47:13,081:INFO:Naive Bayes Imported successfully
2023-08-22 12:47:13,085:INFO:Starting cross validation
2023-08-22 12:47:13,086:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:13,319:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,320:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,320:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:13,321:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,332:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,334:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,335:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:13,336:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,362:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,363:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,364:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:13,364:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,374:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,375:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,375:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,376:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:13,376:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,376:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,377:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:13,377:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,378:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,379:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,379:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:13,380:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,385:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,386:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,386:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:13,387:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,395:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,395:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,396:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:13,396:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,403:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,404:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,405:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:13,405:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,405:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,406:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,407:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:13,407:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:13,559:INFO:Calculating mean and std
2023-08-22 12:47:13,560:INFO:Creating metrics dataframe
2023-08-22 12:47:13,593:INFO:Uploading results into container
2023-08-22 12:47:13,593:INFO:Uploading model into container now
2023-08-22 12:47:13,593:INFO:_master_model_container: 3
2023-08-22 12:47:13,593:INFO:_display_container: 2
2023-08-22 12:47:13,593:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-08-22 12:47:13,594:INFO:create_model() successfully completed......................................
2023-08-22 12:47:13,649:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:13,649:INFO:Creating metrics dataframe
2023-08-22 12:47:13,661:INFO:Initializing Decision Tree Classifier
2023-08-22 12:47:13,661:INFO:Total runtime is 0.10346833070119223 minutes
2023-08-22 12:47:13,664:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:13,665:INFO:Initializing create_model()
2023-08-22 12:47:13,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:13,665:INFO:Checking exceptions
2023-08-22 12:47:13,665:INFO:Importing libraries
2023-08-22 12:47:13,665:INFO:Copying training dataset
2023-08-22 12:47:13,670:INFO:Defining folds
2023-08-22 12:47:13,670:INFO:Declaring metric variables
2023-08-22 12:47:13,674:INFO:Importing untrained model
2023-08-22 12:47:13,679:INFO:Decision Tree Classifier Imported successfully
2023-08-22 12:47:13,691:INFO:Starting cross validation
2023-08-22 12:47:13,693:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:14,137:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,138:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,139:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:14,140:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,235:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,236:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,237:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:14,239:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,240:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,241:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,242:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,242:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,243:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:14,244:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,244:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:14,245:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,246:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,248:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,249:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:14,250:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,269:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,271:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,272:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:14,273:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,277:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,279:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,279:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,281:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,281:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:14,281:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:14,282:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,282:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,292:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,293:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,294:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:14,295:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,300:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,302:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,302:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:14,303:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:14,589:INFO:Calculating mean and std
2023-08-22 12:47:14,591:INFO:Creating metrics dataframe
2023-08-22 12:47:14,664:INFO:Uploading results into container
2023-08-22 12:47:14,665:INFO:Uploading model into container now
2023-08-22 12:47:14,665:INFO:_master_model_container: 4
2023-08-22 12:47:14,666:INFO:_display_container: 2
2023-08-22 12:47:14,666:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6395, splitter='best')
2023-08-22 12:47:14,666:INFO:create_model() successfully completed......................................
2023-08-22 12:47:14,739:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:14,740:INFO:Creating metrics dataframe
2023-08-22 12:47:14,750:INFO:Initializing SVM - Linear Kernel
2023-08-22 12:47:14,750:INFO:Total runtime is 0.1216212272644043 minutes
2023-08-22 12:47:14,753:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:14,753:INFO:Initializing create_model()
2023-08-22 12:47:14,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:14,753:INFO:Checking exceptions
2023-08-22 12:47:14,754:INFO:Importing libraries
2023-08-22 12:47:14,754:INFO:Copying training dataset
2023-08-22 12:47:14,758:INFO:Defining folds
2023-08-22 12:47:14,759:INFO:Declaring metric variables
2023-08-22 12:47:14,765:INFO:Importing untrained model
2023-08-22 12:47:14,769:INFO:SVM - Linear Kernel Imported successfully
2023-08-22 12:47:14,777:INFO:Starting cross validation
2023-08-22 12:47:14,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:15,222:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 12:47:15,224:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,233:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,236:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:15,238:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,246:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 12:47:15,246:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,250:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,253:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:15,254:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,264:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 12:47:15,269:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,274:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,276:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:15,278:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,294:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 12:47:15,297:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,300:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,303:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:15,306:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,326:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 12:47:15,327:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,328:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,329:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:15,330:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,342:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 12:47:15,344:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,346:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 12:47:15,347:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,349:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,349:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,349:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:15,351:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 12:47:15,351:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:15,351:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,351:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,352:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,353:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,354:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:15,355:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,365:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 12:47:15,366:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,367:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,368:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:15,369:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,385:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 12:47:15,386:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,388:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,390:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:15,391:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:15,591:INFO:Calculating mean and std
2023-08-22 12:47:15,592:INFO:Creating metrics dataframe
2023-08-22 12:47:15,659:INFO:Uploading results into container
2023-08-22 12:47:15,660:INFO:Uploading model into container now
2023-08-22 12:47:15,660:INFO:_master_model_container: 5
2023-08-22 12:47:15,660:INFO:_display_container: 2
2023-08-22 12:47:15,661:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6395, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-08-22 12:47:15,661:INFO:create_model() successfully completed......................................
2023-08-22 12:47:15,734:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:15,734:INFO:Creating metrics dataframe
2023-08-22 12:47:15,744:INFO:Initializing Ridge Classifier
2023-08-22 12:47:15,744:INFO:Total runtime is 0.13819618225097657 minutes
2023-08-22 12:47:15,748:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:15,748:INFO:Initializing create_model()
2023-08-22 12:47:15,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:15,749:INFO:Checking exceptions
2023-08-22 12:47:15,749:INFO:Importing libraries
2023-08-22 12:47:15,749:INFO:Copying training dataset
2023-08-22 12:47:15,754:INFO:Defining folds
2023-08-22 12:47:15,754:INFO:Declaring metric variables
2023-08-22 12:47:15,759:INFO:Importing untrained model
2023-08-22 12:47:15,764:INFO:Ridge Classifier Imported successfully
2023-08-22 12:47:15,777:INFO:Starting cross validation
2023-08-22 12:47:15,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:16,160:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 12:47:16,161:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,163:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,163:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:16,164:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,165:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 12:47:16,165:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,168:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,169:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,200:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 12:47:16,201:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,205:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,207:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 12:47:16,208:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,208:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,209:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,210:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:16,211:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,242:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 12:47:16,243:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,244:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,247:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:16,250:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,272:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 12:47:16,273:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,274:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,275:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:16,276:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,283:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 12:47:16,284:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,285:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,286:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:16,288:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,298:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 12:47:16,298:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,299:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 12:47:16,300:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,300:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,301:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:16,301:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,302:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,305:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:16,307:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,346:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 12:47:16,347:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,348:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,349:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:16,350:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:16,496:INFO:Calculating mean and std
2023-08-22 12:47:16,497:INFO:Creating metrics dataframe
2023-08-22 12:47:16,548:INFO:Uploading results into container
2023-08-22 12:47:16,548:INFO:Uploading model into container now
2023-08-22 12:47:16,549:INFO:_master_model_container: 6
2023-08-22 12:47:16,549:INFO:_display_container: 2
2023-08-22 12:47:16,549:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6395, solver='auto',
                tol=0.0001)
2023-08-22 12:47:16,549:INFO:create_model() successfully completed......................................
2023-08-22 12:47:16,627:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:16,670:INFO:Creating metrics dataframe
2023-08-22 12:47:16,682:INFO:Initializing Random Forest Classifier
2023-08-22 12:47:16,682:INFO:Total runtime is 0.15382992029190065 minutes
2023-08-22 12:47:16,686:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:16,687:INFO:Initializing create_model()
2023-08-22 12:47:16,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:16,687:INFO:Checking exceptions
2023-08-22 12:47:16,687:INFO:Importing libraries
2023-08-22 12:47:16,687:INFO:Copying training dataset
2023-08-22 12:47:16,701:INFO:Defining folds
2023-08-22 12:47:16,701:INFO:Declaring metric variables
2023-08-22 12:47:16,706:INFO:Importing untrained model
2023-08-22 12:47:16,710:INFO:Random Forest Classifier Imported successfully
2023-08-22 12:47:16,718:INFO:Starting cross validation
2023-08-22 12:47:16,719:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:17,980:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:17,981:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:17,983:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:17,995:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:17,996:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:17,997:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:17,998:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,044:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,045:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,046:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:18,047:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,107:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,107:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,107:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,108:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,108:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,109:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,109:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:18,110:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,110:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,110:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,135:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,136:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,138:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,197:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,198:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,199:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,200:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,200:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,200:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:18,201:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,214:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,215:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,216:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:18,217:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:18,393:INFO:Calculating mean and std
2023-08-22 12:47:18,394:INFO:Creating metrics dataframe
2023-08-22 12:47:18,451:INFO:Uploading results into container
2023-08-22 12:47:18,451:INFO:Uploading model into container now
2023-08-22 12:47:18,452:INFO:_master_model_container: 7
2023-08-22 12:47:18,452:INFO:_display_container: 2
2023-08-22 12:47:18,452:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6395, verbose=0, warm_start=False)
2023-08-22 12:47:18,452:INFO:create_model() successfully completed......................................
2023-08-22 12:47:18,523:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:18,523:INFO:Creating metrics dataframe
2023-08-22 12:47:18,536:INFO:Initializing Quadratic Discriminant Analysis
2023-08-22 12:47:18,536:INFO:Total runtime is 0.18472294410069784 minutes
2023-08-22 12:47:18,542:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:18,543:INFO:Initializing create_model()
2023-08-22 12:47:18,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:18,543:INFO:Checking exceptions
2023-08-22 12:47:18,543:INFO:Importing libraries
2023-08-22 12:47:18,543:INFO:Copying training dataset
2023-08-22 12:47:18,548:INFO:Defining folds
2023-08-22 12:47:18,548:INFO:Declaring metric variables
2023-08-22 12:47:18,552:INFO:Importing untrained model
2023-08-22 12:47:18,560:INFO:Quadratic Discriminant Analysis Imported successfully
2023-08-22 12:47:18,570:INFO:Starting cross validation
2023-08-22 12:47:18,574:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:18,869:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 12:47:18,869:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 12:47:18,875:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 12:47:18,884:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 12:47:18,897:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 12:47:18,898:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 12:47:18,907:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 12:47:18,910:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 12:47:18,917:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 12:47:18,943:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 12:47:19,052:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,053:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,054:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:19,055:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,071:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,072:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,073:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:19,074:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,084:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,085:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,086:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:19,087:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,115:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,117:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,118:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:19,119:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,137:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,139:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,141:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:19,144:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,145:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,146:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,147:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:19,148:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,157:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,158:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,158:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,159:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:19,159:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,160:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,160:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:19,161:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,176:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,178:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,179:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:19,179:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,206:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,208:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,208:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:19,209:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:19,528:INFO:Calculating mean and std
2023-08-22 12:47:19,529:INFO:Creating metrics dataframe
2023-08-22 12:47:19,595:INFO:Uploading results into container
2023-08-22 12:47:19,595:INFO:Uploading model into container now
2023-08-22 12:47:19,596:INFO:_master_model_container: 8
2023-08-22 12:47:19,596:INFO:_display_container: 2
2023-08-22 12:47:19,596:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-08-22 12:47:19,596:INFO:create_model() successfully completed......................................
2023-08-22 12:47:19,668:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:19,668:INFO:Creating metrics dataframe
2023-08-22 12:47:19,680:INFO:Initializing Ada Boost Classifier
2023-08-22 12:47:19,680:INFO:Total runtime is 0.2037875016530355 minutes
2023-08-22 12:47:19,683:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:19,684:INFO:Initializing create_model()
2023-08-22 12:47:19,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:19,684:INFO:Checking exceptions
2023-08-22 12:47:19,685:INFO:Importing libraries
2023-08-22 12:47:19,685:INFO:Copying training dataset
2023-08-22 12:47:19,690:INFO:Defining folds
2023-08-22 12:47:19,690:INFO:Declaring metric variables
2023-08-22 12:47:19,695:INFO:Importing untrained model
2023-08-22 12:47:19,699:INFO:Ada Boost Classifier Imported successfully
2023-08-22 12:47:19,711:INFO:Starting cross validation
2023-08-22 12:47:19,713:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:20,553:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,554:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,557:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:20,558:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,570:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,574:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,575:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:20,575:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,578:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,580:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,580:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:20,581:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,602:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,603:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,604:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:20,605:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,617:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,618:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,620:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:20,622:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,639:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,641:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,642:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:20,643:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,646:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,648:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,649:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:20,649:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,681:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,683:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,684:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:20,684:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,719:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,720:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,721:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:20,722:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,723:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,725:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:20,726:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:20,726:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:21,042:INFO:Calculating mean and std
2023-08-22 12:47:21,043:INFO:Creating metrics dataframe
2023-08-22 12:47:21,114:INFO:Uploading results into container
2023-08-22 12:47:21,115:INFO:Uploading model into container now
2023-08-22 12:47:21,116:INFO:_master_model_container: 9
2023-08-22 12:47:21,116:INFO:_display_container: 2
2023-08-22 12:47:21,116:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=6395)
2023-08-22 12:47:21,116:INFO:create_model() successfully completed......................................
2023-08-22 12:47:21,183:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:21,183:INFO:Creating metrics dataframe
2023-08-22 12:47:21,196:INFO:Initializing Gradient Boosting Classifier
2023-08-22 12:47:21,196:INFO:Total runtime is 0.2290498733520508 minutes
2023-08-22 12:47:21,199:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:21,199:INFO:Initializing create_model()
2023-08-22 12:47:21,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:21,200:INFO:Checking exceptions
2023-08-22 12:47:21,200:INFO:Importing libraries
2023-08-22 12:47:21,200:INFO:Copying training dataset
2023-08-22 12:47:21,207:INFO:Defining folds
2023-08-22 12:47:21,207:INFO:Declaring metric variables
2023-08-22 12:47:21,212:INFO:Importing untrained model
2023-08-22 12:47:21,216:INFO:Gradient Boosting Classifier Imported successfully
2023-08-22 12:47:21,224:INFO:Starting cross validation
2023-08-22 12:47:21,226:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:24,686:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:24,688:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:24,688:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:24,689:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:24,746:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:24,747:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:24,748:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:24,749:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:24,780:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:24,782:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:24,782:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:24,783:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:24,784:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:24,784:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:24,785:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:24,786:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,079:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,080:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,082:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:25,083:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,133:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,136:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,138:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:25,140:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,240:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,242:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,242:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:25,244:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,260:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,262:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,264:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:25,265:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,326:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,328:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,329:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:25,330:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,403:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,405:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,406:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:25,407:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:25,437:INFO:Calculating mean and std
2023-08-22 12:47:25,438:INFO:Creating metrics dataframe
2023-08-22 12:47:25,519:INFO:Uploading results into container
2023-08-22 12:47:25,519:INFO:Uploading model into container now
2023-08-22 12:47:25,521:INFO:_master_model_container: 10
2023-08-22 12:47:25,521:INFO:_display_container: 2
2023-08-22 12:47:25,521:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6395, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-08-22 12:47:25,521:INFO:create_model() successfully completed......................................
2023-08-22 12:47:25,584:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:25,584:INFO:Creating metrics dataframe
2023-08-22 12:47:25,596:INFO:Initializing Linear Discriminant Analysis
2023-08-22 12:47:25,596:INFO:Total runtime is 0.3023875236511231 minutes
2023-08-22 12:47:25,601:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:25,601:INFO:Initializing create_model()
2023-08-22 12:47:25,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:25,602:INFO:Checking exceptions
2023-08-22 12:47:25,602:INFO:Importing libraries
2023-08-22 12:47:25,602:INFO:Copying training dataset
2023-08-22 12:47:25,606:INFO:Defining folds
2023-08-22 12:47:25,606:INFO:Declaring metric variables
2023-08-22 12:47:25,610:INFO:Importing untrained model
2023-08-22 12:47:25,616:INFO:Linear Discriminant Analysis Imported successfully
2023-08-22 12:47:25,625:INFO:Starting cross validation
2023-08-22 12:47:25,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:26,150:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,152:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,153:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:26,155:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,167:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,168:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,169:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:26,170:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,174:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,175:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,176:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:26,177:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,197:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,199:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,199:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:26,200:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,205:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,207:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,208:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:26,208:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,215:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,216:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,217:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:26,218:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,229:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,230:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,231:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,231:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,232:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:26,232:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:26,232:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,233:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,247:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,248:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,249:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:26,250:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,259:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,260:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,262:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:26,262:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:26,808:INFO:Calculating mean and std
2023-08-22 12:47:26,811:INFO:Creating metrics dataframe
2023-08-22 12:47:26,905:INFO:Uploading results into container
2023-08-22 12:47:26,906:INFO:Uploading model into container now
2023-08-22 12:47:26,906:INFO:_master_model_container: 11
2023-08-22 12:47:26,907:INFO:_display_container: 2
2023-08-22 12:47:26,907:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-08-22 12:47:26,907:INFO:create_model() successfully completed......................................
2023-08-22 12:47:26,978:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:26,978:INFO:Creating metrics dataframe
2023-08-22 12:47:26,994:INFO:Initializing Extra Trees Classifier
2023-08-22 12:47:26,995:INFO:Total runtime is 0.32571193774541224 minutes
2023-08-22 12:47:26,999:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:26,999:INFO:Initializing create_model()
2023-08-22 12:47:26,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:27,000:INFO:Checking exceptions
2023-08-22 12:47:27,000:INFO:Importing libraries
2023-08-22 12:47:27,000:INFO:Copying training dataset
2023-08-22 12:47:27,007:INFO:Defining folds
2023-08-22 12:47:27,007:INFO:Declaring metric variables
2023-08-22 12:47:27,012:INFO:Importing untrained model
2023-08-22 12:47:27,020:INFO:Extra Trees Classifier Imported successfully
2023-08-22 12:47:27,035:INFO:Starting cross validation
2023-08-22 12:47:27,037:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:28,106:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,107:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,108:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:28,108:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,153:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,154:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,155:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,156:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,156:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:28,157:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,158:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,168:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,170:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,171:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:28,172:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,200:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,200:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,202:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,203:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,204:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:28,204:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,204:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,217:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,219:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,220:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,262:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,264:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,265:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,294:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,294:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,295:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,295:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:28,296:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,296:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,297:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:28,297:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:28,506:INFO:Calculating mean and std
2023-08-22 12:47:28,507:INFO:Creating metrics dataframe
2023-08-22 12:47:28,574:INFO:Uploading results into container
2023-08-22 12:47:28,574:INFO:Uploading model into container now
2023-08-22 12:47:28,575:INFO:_master_model_container: 12
2023-08-22 12:47:28,575:INFO:_display_container: 2
2023-08-22 12:47:28,575:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=6395, verbose=0, warm_start=False)
2023-08-22 12:47:28,575:INFO:create_model() successfully completed......................................
2023-08-22 12:47:28,630:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:28,630:INFO:Creating metrics dataframe
2023-08-22 12:47:28,640:INFO:Initializing Extreme Gradient Boosting
2023-08-22 12:47:28,640:INFO:Total runtime is 0.3531270821889242 minutes
2023-08-22 12:47:28,644:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:28,644:INFO:Initializing create_model()
2023-08-22 12:47:28,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:28,644:INFO:Checking exceptions
2023-08-22 12:47:28,644:INFO:Importing libraries
2023-08-22 12:47:28,645:INFO:Copying training dataset
2023-08-22 12:47:28,648:INFO:Defining folds
2023-08-22 12:47:28,648:INFO:Declaring metric variables
2023-08-22 12:47:28,651:INFO:Importing untrained model
2023-08-22 12:47:28,654:INFO:Extreme Gradient Boosting Imported successfully
2023-08-22 12:47:28,661:INFO:Starting cross validation
2023-08-22 12:47:28,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:30,802:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,804:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,805:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:30,805:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,808:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,809:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,809:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:30,810:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,820:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,822:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,823:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:30,824:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,841:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,842:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,842:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:30,843:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,855:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,856:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,857:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:30,857:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,868:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,870:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,872:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:30,873:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,876:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,877:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,877:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:30,878:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,897:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,898:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,899:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:30,899:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,911:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,913:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,913:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:30,914:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,945:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,946:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:30,947:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:30,947:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:31,331:INFO:Calculating mean and std
2023-08-22 12:47:31,332:INFO:Creating metrics dataframe
2023-08-22 12:47:31,453:INFO:Uploading results into container
2023-08-22 12:47:31,454:INFO:Uploading model into container now
2023-08-22 12:47:31,455:INFO:_master_model_container: 13
2023-08-22 12:47:31,455:INFO:_display_container: 2
2023-08-22 12:47:31,456:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-08-22 12:47:31,457:INFO:create_model() successfully completed......................................
2023-08-22 12:47:31,524:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:31,524:INFO:Creating metrics dataframe
2023-08-22 12:47:31,543:INFO:Initializing Light Gradient Boosting Machine
2023-08-22 12:47:31,543:INFO:Total runtime is 0.401512622833252 minutes
2023-08-22 12:47:31,549:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:31,550:INFO:Initializing create_model()
2023-08-22 12:47:31,550:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:31,550:INFO:Checking exceptions
2023-08-22 12:47:31,550:INFO:Importing libraries
2023-08-22 12:47:31,550:INFO:Copying training dataset
2023-08-22 12:47:31,556:INFO:Defining folds
2023-08-22 12:47:31,556:INFO:Declaring metric variables
2023-08-22 12:47:31,559:INFO:Importing untrained model
2023-08-22 12:47:31,564:INFO:Light Gradient Boosting Machine Imported successfully
2023-08-22 12:47:31,572:INFO:Starting cross validation
2023-08-22 12:47:31,573:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:35,177:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:35,179:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:35,180:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:35,180:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:37,723:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:37,724:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:37,725:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:37,725:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:37,732:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:37,733:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:37,734:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:37,735:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:37,759:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:37,761:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:37,761:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:37,762:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,529:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,530:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,532:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:38,533:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,722:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,738:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,739:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:38,739:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,777:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,778:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,779:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:38,780:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,912:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,913:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,913:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,914:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:38,915:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,916:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:38,917:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:38,918:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,272:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,273:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,275:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:39,275:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,280:INFO:Calculating mean and std
2023-08-22 12:47:39,282:INFO:Creating metrics dataframe
2023-08-22 12:47:39,383:INFO:Uploading results into container
2023-08-22 12:47:39,383:INFO:Uploading model into container now
2023-08-22 12:47:39,384:INFO:_master_model_container: 14
2023-08-22 12:47:39,384:INFO:_display_container: 2
2023-08-22 12:47:39,385:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6395, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-08-22 12:47:39,385:INFO:create_model() successfully completed......................................
2023-08-22 12:47:39,453:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:39,453:INFO:Creating metrics dataframe
2023-08-22 12:47:39,465:INFO:Initializing Dummy Classifier
2023-08-22 12:47:39,465:INFO:Total runtime is 0.5335342288017273 minutes
2023-08-22 12:47:39,469:INFO:SubProcess create_model() called ==================================
2023-08-22 12:47:39,469:INFO:Initializing create_model()
2023-08-22 12:47:39,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF39BED10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:39,469:INFO:Checking exceptions
2023-08-22 12:47:39,469:INFO:Importing libraries
2023-08-22 12:47:39,469:INFO:Copying training dataset
2023-08-22 12:47:39,472:INFO:Defining folds
2023-08-22 12:47:39,472:INFO:Declaring metric variables
2023-08-22 12:47:39,476:INFO:Importing untrained model
2023-08-22 12:47:39,480:INFO:Dummy Classifier Imported successfully
2023-08-22 12:47:39,490:INFO:Starting cross validation
2023-08-22 12:47:39,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:47:39,892:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,894:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,895:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:39,896:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,942:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,945:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,947:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:39,949:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,973:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,975:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,976:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:39,978:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,978:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,980:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,980:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:39,981:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,988:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,991:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:39,992:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:39,993:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,001:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,003:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,004:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:40,005:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,018:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,019:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,020:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:40,020:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,036:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,037:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,038:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:40,039:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,044:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,045:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,046:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:40,047:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,058:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,059:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,060:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 12:47:40,061:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 12:47:40,587:INFO:Calculating mean and std
2023-08-22 12:47:40,589:INFO:Creating metrics dataframe
2023-08-22 12:47:40,681:INFO:Uploading results into container
2023-08-22 12:47:40,682:INFO:Uploading model into container now
2023-08-22 12:47:40,682:INFO:_master_model_container: 15
2023-08-22 12:47:40,682:INFO:_display_container: 2
2023-08-22 12:47:40,682:INFO:DummyClassifier(constant=None, random_state=6395, strategy='prior')
2023-08-22 12:47:40,682:INFO:create_model() successfully completed......................................
2023-08-22 12:47:40,752:INFO:SubProcess create_model() end ==================================
2023-08-22 12:47:40,752:INFO:Creating metrics dataframe
2023-08-22 12:47:40,778:INFO:Initializing create_model()
2023-08-22 12:47:40,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAC7DD9330>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6395, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:47:40,778:INFO:Checking exceptions
2023-08-22 12:47:40,780:INFO:Importing libraries
2023-08-22 12:47:40,780:INFO:Copying training dataset
2023-08-22 12:47:40,784:INFO:Defining folds
2023-08-22 12:47:40,784:INFO:Declaring metric variables
2023-08-22 12:47:40,785:INFO:Importing untrained model
2023-08-22 12:47:40,785:INFO:Declaring custom model
2023-08-22 12:47:40,786:INFO:Random Forest Classifier Imported successfully
2023-08-22 12:47:40,789:INFO:Cross validation set to False
2023-08-22 12:47:40,789:INFO:Fitting Model
2023-08-22 12:47:41,370:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6395, verbose=0, warm_start=False)
2023-08-22 12:47:41,370:INFO:create_model() successfully completed......................................
2023-08-22 12:47:41,478:INFO:_master_model_container: 15
2023-08-22 12:47:41,479:INFO:_display_container: 2
2023-08-22 12:47:41,480:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6395, verbose=0, warm_start=False)
2023-08-22 12:47:41,480:INFO:compare_models() successfully completed......................................
2023-08-22 12:48:08,503:INFO:PyCaret ClassificationExperiment
2023-08-22 12:48:08,503:INFO:Logging name: clf-default-name
2023-08-22 12:48:08,503:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-08-22 12:48:08,503:INFO:version 3.0.4
2023-08-22 12:48:08,503:INFO:Initializing setup()
2023-08-22 12:48:08,503:INFO:self.USI: ae41
2023-08-22 12:48:08,503:INFO:self._variable_keys: {'exp_name_log', 'log_plots_param', 'idx', 'logging_param', 'data', 'fold_shuffle_param', 'y_test', 'gpu_n_jobs_param', 'pipeline', 'fold_groups_param', 'target_param', 'exp_id', 'gpu_param', '_available_plots', 'X_train', 'fix_imbalance', 'USI', 'fold_generator', 'html_param', '_ml_usecase', 'X_test', 'n_jobs_param', 'memory', 'y', 'y_train', 'X', 'is_multiclass', 'seed'}
2023-08-22 12:48:08,503:INFO:Checking environment
2023-08-22 12:48:08,504:INFO:python_version: 3.10.11
2023-08-22 12:48:08,504:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2023-08-22 12:48:08,504:INFO:machine: AMD64
2023-08-22 12:48:08,504:INFO:platform: Windows-10-10.0.22621-SP0
2023-08-22 12:48:08,510:INFO:Memory: svmem(total=34014814208, available=11863965696, percent=65.1, used=22150848512, free=11863965696)
2023-08-22 12:48:08,510:INFO:Physical Core: 14
2023-08-22 12:48:08,510:INFO:Logical Core: 20
2023-08-22 12:48:08,510:INFO:Checking libraries
2023-08-22 12:48:08,510:INFO:System:
2023-08-22 12:48:08,510:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2023-08-22 12:48:08,510:INFO:executable: c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\python.exe
2023-08-22 12:48:08,510:INFO:   machine: Windows-10-10.0.22621-SP0
2023-08-22 12:48:08,510:INFO:PyCaret required dependencies:
2023-08-22 12:48:08,510:INFO:                 pip: 23.2.1
2023-08-22 12:48:08,510:INFO:          setuptools: 65.5.0
2023-08-22 12:48:08,510:INFO:             pycaret: 3.0.4
2023-08-22 12:48:08,510:INFO:             IPython: 8.14.0
2023-08-22 12:48:08,510:INFO:          ipywidgets: 8.1.0
2023-08-22 12:48:08,510:INFO:                tqdm: 4.66.1
2023-08-22 12:48:08,510:INFO:               numpy: 1.23.5
2023-08-22 12:48:08,510:INFO:              pandas: 1.5.3
2023-08-22 12:48:08,510:INFO:              jinja2: 3.1.2
2023-08-22 12:48:08,510:INFO:               scipy: 1.11.2
2023-08-22 12:48:08,510:INFO:              joblib: 1.3.2
2023-08-22 12:48:08,510:INFO:             sklearn: 1.2.2
2023-08-22 12:48:08,510:INFO:                pyod: 1.1.0
2023-08-22 12:48:08,510:INFO:            imblearn: 0.11.0
2023-08-22 12:48:08,510:INFO:   category_encoders: 2.6.2
2023-08-22 12:48:08,510:INFO:            lightgbm: 4.0.0
2023-08-22 12:48:08,510:INFO:               numba: 0.57.1
2023-08-22 12:48:08,510:INFO:            requests: 2.31.0
2023-08-22 12:48:08,510:INFO:          matplotlib: 3.7.2
2023-08-22 12:48:08,510:INFO:          scikitplot: 0.3.7
2023-08-22 12:48:08,510:INFO:         yellowbrick: 1.5
2023-08-22 12:48:08,510:INFO:              plotly: 5.16.1
2023-08-22 12:48:08,510:INFO:    plotly-resampler: Not installed
2023-08-22 12:48:08,510:INFO:             kaleido: 0.2.1
2023-08-22 12:48:08,510:INFO:           schemdraw: 0.15
2023-08-22 12:48:08,510:INFO:         statsmodels: 0.14.0
2023-08-22 12:48:08,510:INFO:              sktime: 0.22.0
2023-08-22 12:48:08,511:INFO:               tbats: 1.1.3
2023-08-22 12:48:08,511:INFO:            pmdarima: 2.0.3
2023-08-22 12:48:08,511:INFO:              psutil: 5.9.5
2023-08-22 12:48:08,511:INFO:          markupsafe: 2.1.3
2023-08-22 12:48:08,511:INFO:             pickle5: Not installed
2023-08-22 12:48:08,511:INFO:         cloudpickle: 2.2.1
2023-08-22 12:48:08,511:INFO:         deprecation: 2.1.0
2023-08-22 12:48:08,511:INFO:              xxhash: 3.3.0
2023-08-22 12:48:08,511:INFO:           wurlitzer: Not installed
2023-08-22 12:48:08,511:INFO:PyCaret optional dependencies:
2023-08-22 12:48:08,511:INFO:                shap: Not installed
2023-08-22 12:48:08,511:INFO:           interpret: Not installed
2023-08-22 12:48:08,511:INFO:                umap: Not installed
2023-08-22 12:48:08,511:INFO:    pandas_profiling: 4.5.1
2023-08-22 12:48:08,511:INFO:  explainerdashboard: Not installed
2023-08-22 12:48:08,511:INFO:             autoviz: Not installed
2023-08-22 12:48:08,511:INFO:           fairlearn: Not installed
2023-08-22 12:48:08,511:INFO:          deepchecks: Not installed
2023-08-22 12:48:08,511:INFO:             xgboost: 1.7.6
2023-08-22 12:48:08,511:INFO:            catboost: Not installed
2023-08-22 12:48:08,511:INFO:              kmodes: Not installed
2023-08-22 12:48:08,511:INFO:             mlxtend: Not installed
2023-08-22 12:48:08,511:INFO:       statsforecast: Not installed
2023-08-22 12:48:08,511:INFO:        tune_sklearn: Not installed
2023-08-22 12:48:08,511:INFO:                 ray: Not installed
2023-08-22 12:48:08,511:INFO:            hyperopt: Not installed
2023-08-22 12:48:08,511:INFO:              optuna: Not installed
2023-08-22 12:48:08,511:INFO:               skopt: Not installed
2023-08-22 12:48:08,511:INFO:              mlflow: Not installed
2023-08-22 12:48:08,511:INFO:              gradio: Not installed
2023-08-22 12:48:08,511:INFO:             fastapi: Not installed
2023-08-22 12:48:08,511:INFO:             uvicorn: Not installed
2023-08-22 12:48:08,511:INFO:              m2cgen: Not installed
2023-08-22 12:48:08,511:INFO:           evidently: Not installed
2023-08-22 12:48:08,511:INFO:               fugue: Not installed
2023-08-22 12:48:08,511:INFO:           streamlit: Not installed
2023-08-22 12:48:08,511:INFO:             prophet: Not installed
2023-08-22 12:48:08,511:INFO:None
2023-08-22 12:48:08,511:INFO:Set up data.
2023-08-22 12:48:08,518:INFO:Set up train/test split.
2023-08-22 12:48:49,485:INFO:PyCaret RegressionExperiment
2023-08-22 12:48:49,485:INFO:Logging name: reg-default-name
2023-08-22 12:48:49,485:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-22 12:48:49,485:INFO:version 3.0.4
2023-08-22 12:48:49,485:INFO:Initializing setup()
2023-08-22 12:48:49,485:INFO:self.USI: 9039
2023-08-22 12:48:49,485:INFO:self._variable_keys: {'exp_name_log', 'log_plots_param', 'idx', 'logging_param', 'data', 'fold_shuffle_param', 'y_test', 'gpu_n_jobs_param', 'pipeline', 'fold_groups_param', 'transform_target_param', 'target_param', 'exp_id', 'gpu_param', '_available_plots', 'X_train', 'USI', 'fold_generator', 'html_param', '_ml_usecase', 'X_test', 'n_jobs_param', 'memory', 'y', 'y_train', 'X', 'seed'}
2023-08-22 12:48:49,486:INFO:Checking environment
2023-08-22 12:48:49,486:INFO:python_version: 3.10.11
2023-08-22 12:48:49,486:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2023-08-22 12:48:49,486:INFO:machine: AMD64
2023-08-22 12:48:49,486:INFO:platform: Windows-10-10.0.22621-SP0
2023-08-22 12:48:49,491:INFO:Memory: svmem(total=34014814208, available=11797348352, percent=65.3, used=22217465856, free=11797348352)
2023-08-22 12:48:49,491:INFO:Physical Core: 14
2023-08-22 12:48:49,491:INFO:Logical Core: 20
2023-08-22 12:48:49,491:INFO:Checking libraries
2023-08-22 12:48:49,491:INFO:System:
2023-08-22 12:48:49,491:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2023-08-22 12:48:49,491:INFO:executable: c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\python.exe
2023-08-22 12:48:49,492:INFO:   machine: Windows-10-10.0.22621-SP0
2023-08-22 12:48:49,492:INFO:PyCaret required dependencies:
2023-08-22 12:48:49,492:INFO:                 pip: 23.2.1
2023-08-22 12:48:49,492:INFO:          setuptools: 65.5.0
2023-08-22 12:48:49,492:INFO:             pycaret: 3.0.4
2023-08-22 12:48:49,492:INFO:             IPython: 8.14.0
2023-08-22 12:48:49,492:INFO:          ipywidgets: 8.1.0
2023-08-22 12:48:49,492:INFO:                tqdm: 4.66.1
2023-08-22 12:48:49,492:INFO:               numpy: 1.23.5
2023-08-22 12:48:49,492:INFO:              pandas: 1.5.3
2023-08-22 12:48:49,492:INFO:              jinja2: 3.1.2
2023-08-22 12:48:49,492:INFO:               scipy: 1.11.2
2023-08-22 12:48:49,492:INFO:              joblib: 1.3.2
2023-08-22 12:48:49,492:INFO:             sklearn: 1.2.2
2023-08-22 12:48:49,492:INFO:                pyod: 1.1.0
2023-08-22 12:48:49,492:INFO:            imblearn: 0.11.0
2023-08-22 12:48:49,492:INFO:   category_encoders: 2.6.2
2023-08-22 12:48:49,492:INFO:            lightgbm: 4.0.0
2023-08-22 12:48:49,492:INFO:               numba: 0.57.1
2023-08-22 12:48:49,492:INFO:            requests: 2.31.0
2023-08-22 12:48:49,492:INFO:          matplotlib: 3.7.2
2023-08-22 12:48:49,492:INFO:          scikitplot: 0.3.7
2023-08-22 12:48:49,492:INFO:         yellowbrick: 1.5
2023-08-22 12:48:49,492:INFO:              plotly: 5.16.1
2023-08-22 12:48:49,492:INFO:    plotly-resampler: Not installed
2023-08-22 12:48:49,492:INFO:             kaleido: 0.2.1
2023-08-22 12:48:49,492:INFO:           schemdraw: 0.15
2023-08-22 12:48:49,492:INFO:         statsmodels: 0.14.0
2023-08-22 12:48:49,492:INFO:              sktime: 0.22.0
2023-08-22 12:48:49,492:INFO:               tbats: 1.1.3
2023-08-22 12:48:49,492:INFO:            pmdarima: 2.0.3
2023-08-22 12:48:49,492:INFO:              psutil: 5.9.5
2023-08-22 12:48:49,492:INFO:          markupsafe: 2.1.3
2023-08-22 12:48:49,492:INFO:             pickle5: Not installed
2023-08-22 12:48:49,492:INFO:         cloudpickle: 2.2.1
2023-08-22 12:48:49,492:INFO:         deprecation: 2.1.0
2023-08-22 12:48:49,492:INFO:              xxhash: 3.3.0
2023-08-22 12:48:49,492:INFO:           wurlitzer: Not installed
2023-08-22 12:48:49,492:INFO:PyCaret optional dependencies:
2023-08-22 12:48:49,492:INFO:                shap: Not installed
2023-08-22 12:48:49,492:INFO:           interpret: Not installed
2023-08-22 12:48:49,492:INFO:                umap: Not installed
2023-08-22 12:48:49,492:INFO:    pandas_profiling: 4.5.1
2023-08-22 12:48:49,492:INFO:  explainerdashboard: Not installed
2023-08-22 12:48:49,492:INFO:             autoviz: Not installed
2023-08-22 12:48:49,493:INFO:           fairlearn: Not installed
2023-08-22 12:48:49,493:INFO:          deepchecks: Not installed
2023-08-22 12:48:49,493:INFO:             xgboost: 1.7.6
2023-08-22 12:48:49,493:INFO:            catboost: Not installed
2023-08-22 12:48:49,493:INFO:              kmodes: Not installed
2023-08-22 12:48:49,493:INFO:             mlxtend: Not installed
2023-08-22 12:48:49,493:INFO:       statsforecast: Not installed
2023-08-22 12:48:49,493:INFO:        tune_sklearn: Not installed
2023-08-22 12:48:49,493:INFO:                 ray: Not installed
2023-08-22 12:48:49,493:INFO:            hyperopt: Not installed
2023-08-22 12:48:49,493:INFO:              optuna: Not installed
2023-08-22 12:48:49,493:INFO:               skopt: Not installed
2023-08-22 12:48:49,493:INFO:              mlflow: Not installed
2023-08-22 12:48:49,493:INFO:              gradio: Not installed
2023-08-22 12:48:49,493:INFO:             fastapi: Not installed
2023-08-22 12:48:49,493:INFO:             uvicorn: Not installed
2023-08-22 12:48:49,493:INFO:              m2cgen: Not installed
2023-08-22 12:48:49,493:INFO:           evidently: Not installed
2023-08-22 12:48:49,493:INFO:               fugue: Not installed
2023-08-22 12:48:49,493:INFO:           streamlit: Not installed
2023-08-22 12:48:49,493:INFO:             prophet: Not installed
2023-08-22 12:48:49,493:INFO:None
2023-08-22 12:48:49,493:INFO:Set up data.
2023-08-22 12:48:49,500:INFO:Set up train/test split.
2023-08-22 12:48:49,503:INFO:Set up index.
2023-08-22 12:48:49,503:INFO:Set up folding strategy.
2023-08-22 12:48:49,503:INFO:Assigning column types.
2023-08-22 12:48:49,506:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-22 12:48:49,506:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,510:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,513:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,559:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,585:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:49,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:49,587:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,590:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,592:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,626:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,651:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,652:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:49,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:49,653:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-22 12:48:49,656:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,659:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,692:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,719:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,719:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:49,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:49,723:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,725:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,758:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,784:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,784:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:49,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:49,786:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-22 12:48:49,792:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,825:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,851:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,851:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:49,853:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:49,858:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,891:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,917:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,917:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:49,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:49,919:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-22 12:48:49,958:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 12:48:49,984:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:49,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:50,025:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 12:48:50,051:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 12:48:50,051:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:50,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:50,052:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-22 12:48:50,091:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 12:48:50,117:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:50,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:50,157:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 12:48:50,183:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:50,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:50,185:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-22 12:48:50,249:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:50,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:50,318:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:50,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:50,320:INFO:Preparing preprocessing pipeline...
2023-08-22 12:48:50,320:INFO:Set up simple imputation.
2023-08-22 12:48:50,322:INFO:Set up encoding of categorical features.
2023-08-22 12:48:50,322:INFO:Set up feature normalization.
2023-08-22 12:48:50,416:INFO:Finished creating preprocessing pipeline.
2023-08-22 12:48:50,420:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\VONHIN~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['draft_round', 'wt', 'forty',
                                             'bench', 'vertical', 'broad_jump',
                                             'cone', 'shuttle', 'school_reg',
                                             'school_class', 'pos_class',
                                             'pos_reg', 'height'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_val...
                                    include=['player_name', 'school'],
                                    transformer=TargetEncoder(cols=['player_name',
                                                                    'school'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-08-22 12:48:50,421:INFO:Creating final display dataframe.
2023-08-22 12:48:50,629:INFO:Setup _display_container:                     Description             Value
0                    Session id               233
1                        Target         draft_ovr
2                   Target type        Regression
3           Original data shape        (2110, 18)
4        Transformed data shape        (2110, 53)
5   Transformed train set shape        (1477, 53)
6    Transformed test set shape         (633, 53)
7              Numeric features                13
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              9039
2023-08-22 12:48:50,707:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:50,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:50,774:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 12:48:50,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 12:48:50,776:INFO:setup() successfully completed in 1.33s...............
2023-08-22 12:49:01,959:INFO:Initializing compare_models()
2023-08-22 12:49:01,960:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-08-22 12:49:01,960:INFO:Checking exceptions
2023-08-22 12:49:01,961:INFO:Preparing display monitor
2023-08-22 12:49:01,978:INFO:Initializing Linear Regression
2023-08-22 12:49:01,978:INFO:Total runtime is 0.0 minutes
2023-08-22 12:49:01,981:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:01,981:INFO:Initializing create_model()
2023-08-22 12:49:01,982:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:01,982:INFO:Checking exceptions
2023-08-22 12:49:01,982:INFO:Importing libraries
2023-08-22 12:49:01,982:INFO:Copying training dataset
2023-08-22 12:49:01,985:INFO:Defining folds
2023-08-22 12:49:01,985:INFO:Declaring metric variables
2023-08-22 12:49:01,987:INFO:Importing untrained model
2023-08-22 12:49:01,989:INFO:Linear Regression Imported successfully
2023-08-22 12:49:01,994:INFO:Starting cross validation
2023-08-22 12:49:01,995:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:02,690:INFO:Calculating mean and std
2023-08-22 12:49:02,690:INFO:Creating metrics dataframe
2023-08-22 12:49:02,744:INFO:Uploading results into container
2023-08-22 12:49:02,745:INFO:Uploading model into container now
2023-08-22 12:49:02,745:INFO:_master_model_container: 1
2023-08-22 12:49:02,745:INFO:_display_container: 2
2023-08-22 12:49:02,745:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-08-22 12:49:02,745:INFO:create_model() successfully completed......................................
2023-08-22 12:49:02,810:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:02,810:INFO:Creating metrics dataframe
2023-08-22 12:49:02,816:INFO:Initializing Lasso Regression
2023-08-22 12:49:02,816:INFO:Total runtime is 0.013960146903991699 minutes
2023-08-22 12:49:02,819:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:02,819:INFO:Initializing create_model()
2023-08-22 12:49:02,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:02,820:INFO:Checking exceptions
2023-08-22 12:49:02,820:INFO:Importing libraries
2023-08-22 12:49:02,820:INFO:Copying training dataset
2023-08-22 12:49:02,823:INFO:Defining folds
2023-08-22 12:49:02,823:INFO:Declaring metric variables
2023-08-22 12:49:02,825:INFO:Importing untrained model
2023-08-22 12:49:02,827:INFO:Lasso Regression Imported successfully
2023-08-22 12:49:02,832:INFO:Starting cross validation
2023-08-22 12:49:02,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:03,472:INFO:Calculating mean and std
2023-08-22 12:49:03,473:INFO:Creating metrics dataframe
2023-08-22 12:49:03,529:INFO:Uploading results into container
2023-08-22 12:49:03,530:INFO:Uploading model into container now
2023-08-22 12:49:03,530:INFO:_master_model_container: 2
2023-08-22 12:49:03,530:INFO:_display_container: 2
2023-08-22 12:49:03,530:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=233, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-08-22 12:49:03,530:INFO:create_model() successfully completed......................................
2023-08-22 12:49:03,588:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:03,588:INFO:Creating metrics dataframe
2023-08-22 12:49:03,593:INFO:Initializing Ridge Regression
2023-08-22 12:49:03,594:INFO:Total runtime is 0.026930669943491616 minutes
2023-08-22 12:49:03,596:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:03,596:INFO:Initializing create_model()
2023-08-22 12:49:03,596:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:03,596:INFO:Checking exceptions
2023-08-22 12:49:03,596:INFO:Importing libraries
2023-08-22 12:49:03,596:INFO:Copying training dataset
2023-08-22 12:49:03,600:INFO:Defining folds
2023-08-22 12:49:03,600:INFO:Declaring metric variables
2023-08-22 12:49:03,603:INFO:Importing untrained model
2023-08-22 12:49:03,605:INFO:Ridge Regression Imported successfully
2023-08-22 12:49:03,609:INFO:Starting cross validation
2023-08-22 12:49:03,610:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:04,268:INFO:Calculating mean and std
2023-08-22 12:49:04,269:INFO:Creating metrics dataframe
2023-08-22 12:49:04,321:INFO:Uploading results into container
2023-08-22 12:49:04,322:INFO:Uploading model into container now
2023-08-22 12:49:04,322:INFO:_master_model_container: 3
2023-08-22 12:49:04,322:INFO:_display_container: 2
2023-08-22 12:49:04,322:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=233, solver='auto', tol=0.0001)
2023-08-22 12:49:04,322:INFO:create_model() successfully completed......................................
2023-08-22 12:49:04,381:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:04,381:INFO:Creating metrics dataframe
2023-08-22 12:49:04,388:INFO:Initializing Elastic Net
2023-08-22 12:49:04,388:INFO:Total runtime is 0.04016389449437459 minutes
2023-08-22 12:49:04,391:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:04,392:INFO:Initializing create_model()
2023-08-22 12:49:04,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:04,392:INFO:Checking exceptions
2023-08-22 12:49:04,392:INFO:Importing libraries
2023-08-22 12:49:04,392:INFO:Copying training dataset
2023-08-22 12:49:04,395:INFO:Defining folds
2023-08-22 12:49:04,395:INFO:Declaring metric variables
2023-08-22 12:49:04,398:INFO:Importing untrained model
2023-08-22 12:49:04,400:INFO:Elastic Net Imported successfully
2023-08-22 12:49:04,404:INFO:Starting cross validation
2023-08-22 12:49:04,406:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:05,029:INFO:Calculating mean and std
2023-08-22 12:49:05,030:INFO:Creating metrics dataframe
2023-08-22 12:49:05,084:INFO:Uploading results into container
2023-08-22 12:49:05,085:INFO:Uploading model into container now
2023-08-22 12:49:05,085:INFO:_master_model_container: 4
2023-08-22 12:49:05,085:INFO:_display_container: 2
2023-08-22 12:49:05,085:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=233,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-08-22 12:49:05,085:INFO:create_model() successfully completed......................................
2023-08-22 12:49:05,141:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:05,141:INFO:Creating metrics dataframe
2023-08-22 12:49:05,148:INFO:Initializing Least Angle Regression
2023-08-22 12:49:05,148:INFO:Total runtime is 0.052826619148254386 minutes
2023-08-22 12:49:05,150:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:05,150:INFO:Initializing create_model()
2023-08-22 12:49:05,150:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:05,150:INFO:Checking exceptions
2023-08-22 12:49:05,150:INFO:Importing libraries
2023-08-22 12:49:05,150:INFO:Copying training dataset
2023-08-22 12:49:05,154:INFO:Defining folds
2023-08-22 12:49:05,154:INFO:Declaring metric variables
2023-08-22 12:49:05,156:INFO:Importing untrained model
2023-08-22 12:49:05,160:INFO:Least Angle Regression Imported successfully
2023-08-22 12:49:05,165:INFO:Starting cross validation
2023-08-22 12:49:05,166:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:05,392:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 57 iterations, i.e. alpha=1.083e-03, with an active set of 51 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-08-22 12:49:05,825:INFO:Calculating mean and std
2023-08-22 12:49:05,826:INFO:Creating metrics dataframe
2023-08-22 12:49:05,878:INFO:Uploading results into container
2023-08-22 12:49:05,880:INFO:Uploading model into container now
2023-08-22 12:49:05,880:INFO:_master_model_container: 5
2023-08-22 12:49:05,880:INFO:_display_container: 2
2023-08-22 12:49:05,880:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=233, verbose=False)
2023-08-22 12:49:05,880:INFO:create_model() successfully completed......................................
2023-08-22 12:49:05,941:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:05,941:INFO:Creating metrics dataframe
2023-08-22 12:49:05,949:INFO:Initializing Lasso Least Angle Regression
2023-08-22 12:49:05,949:INFO:Total runtime is 0.06617864767710367 minutes
2023-08-22 12:49:05,952:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:05,952:INFO:Initializing create_model()
2023-08-22 12:49:05,952:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:05,952:INFO:Checking exceptions
2023-08-22 12:49:05,952:INFO:Importing libraries
2023-08-22 12:49:05,952:INFO:Copying training dataset
2023-08-22 12:49:05,955:INFO:Defining folds
2023-08-22 12:49:05,955:INFO:Declaring metric variables
2023-08-22 12:49:05,958:INFO:Importing untrained model
2023-08-22 12:49:05,961:INFO:Lasso Least Angle Regression Imported successfully
2023-08-22 12:49:05,965:INFO:Starting cross validation
2023-08-22 12:49:05,967:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:06,587:INFO:Calculating mean and std
2023-08-22 12:49:06,588:INFO:Creating metrics dataframe
2023-08-22 12:49:06,639:INFO:Uploading results into container
2023-08-22 12:49:06,639:INFO:Uploading model into container now
2023-08-22 12:49:06,639:INFO:_master_model_container: 6
2023-08-22 12:49:06,639:INFO:_display_container: 2
2023-08-22 12:49:06,640:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=233, verbose=False)
2023-08-22 12:49:06,640:INFO:create_model() successfully completed......................................
2023-08-22 12:49:06,701:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:06,701:INFO:Creating metrics dataframe
2023-08-22 12:49:06,709:INFO:Initializing Orthogonal Matching Pursuit
2023-08-22 12:49:06,709:INFO:Total runtime is 0.07884147961934407 minutes
2023-08-22 12:49:06,711:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:06,711:INFO:Initializing create_model()
2023-08-22 12:49:06,711:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:06,712:INFO:Checking exceptions
2023-08-22 12:49:06,712:INFO:Importing libraries
2023-08-22 12:49:06,712:INFO:Copying training dataset
2023-08-22 12:49:06,715:INFO:Defining folds
2023-08-22 12:49:06,715:INFO:Declaring metric variables
2023-08-22 12:49:06,717:INFO:Importing untrained model
2023-08-22 12:49:06,720:INFO:Orthogonal Matching Pursuit Imported successfully
2023-08-22 12:49:06,724:INFO:Starting cross validation
2023-08-22 12:49:06,725:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:07,384:INFO:Calculating mean and std
2023-08-22 12:49:07,385:INFO:Creating metrics dataframe
2023-08-22 12:49:07,446:INFO:Uploading results into container
2023-08-22 12:49:07,446:INFO:Uploading model into container now
2023-08-22 12:49:07,446:INFO:_master_model_container: 7
2023-08-22 12:49:07,447:INFO:_display_container: 2
2023-08-22 12:49:07,447:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-08-22 12:49:07,447:INFO:create_model() successfully completed......................................
2023-08-22 12:49:07,507:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:07,507:INFO:Creating metrics dataframe
2023-08-22 12:49:07,515:INFO:Initializing Bayesian Ridge
2023-08-22 12:49:07,515:INFO:Total runtime is 0.09227352142333983 minutes
2023-08-22 12:49:07,518:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:07,518:INFO:Initializing create_model()
2023-08-22 12:49:07,518:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:07,518:INFO:Checking exceptions
2023-08-22 12:49:07,518:INFO:Importing libraries
2023-08-22 12:49:07,518:INFO:Copying training dataset
2023-08-22 12:49:07,521:INFO:Defining folds
2023-08-22 12:49:07,521:INFO:Declaring metric variables
2023-08-22 12:49:07,523:INFO:Importing untrained model
2023-08-22 12:49:07,526:INFO:Bayesian Ridge Imported successfully
2023-08-22 12:49:07,530:INFO:Starting cross validation
2023-08-22 12:49:07,531:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:08,166:INFO:Calculating mean and std
2023-08-22 12:49:08,167:INFO:Creating metrics dataframe
2023-08-22 12:49:08,220:INFO:Uploading results into container
2023-08-22 12:49:08,220:INFO:Uploading model into container now
2023-08-22 12:49:08,221:INFO:_master_model_container: 8
2023-08-22 12:49:08,221:INFO:_display_container: 2
2023-08-22 12:49:08,221:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-08-22 12:49:08,221:INFO:create_model() successfully completed......................................
2023-08-22 12:49:08,276:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:08,276:INFO:Creating metrics dataframe
2023-08-22 12:49:08,283:INFO:Initializing Passive Aggressive Regressor
2023-08-22 12:49:08,283:INFO:Total runtime is 0.10507810115814208 minutes
2023-08-22 12:49:08,286:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:08,286:INFO:Initializing create_model()
2023-08-22 12:49:08,286:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:08,286:INFO:Checking exceptions
2023-08-22 12:49:08,286:INFO:Importing libraries
2023-08-22 12:49:08,286:INFO:Copying training dataset
2023-08-22 12:49:08,289:INFO:Defining folds
2023-08-22 12:49:08,290:INFO:Declaring metric variables
2023-08-22 12:49:08,292:INFO:Importing untrained model
2023-08-22 12:49:08,295:INFO:Passive Aggressive Regressor Imported successfully
2023-08-22 12:49:08,298:INFO:Starting cross validation
2023-08-22 12:49:08,301:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:08,931:INFO:Calculating mean and std
2023-08-22 12:49:08,942:INFO:Creating metrics dataframe
2023-08-22 12:49:08,996:INFO:Uploading results into container
2023-08-22 12:49:08,997:INFO:Uploading model into container now
2023-08-22 12:49:08,997:INFO:_master_model_container: 9
2023-08-22 12:49:08,997:INFO:_display_container: 2
2023-08-22 12:49:08,997:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=233, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-08-22 12:49:08,997:INFO:create_model() successfully completed......................................
2023-08-22 12:49:09,059:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:09,059:INFO:Creating metrics dataframe
2023-08-22 12:49:09,066:INFO:Initializing Huber Regressor
2023-08-22 12:49:09,066:INFO:Total runtime is 0.11813812255859374 minutes
2023-08-22 12:49:09,068:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:09,070:INFO:Initializing create_model()
2023-08-22 12:49:09,070:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:09,070:INFO:Checking exceptions
2023-08-22 12:49:09,070:INFO:Importing libraries
2023-08-22 12:49:09,070:INFO:Copying training dataset
2023-08-22 12:49:09,073:INFO:Defining folds
2023-08-22 12:49:09,074:INFO:Declaring metric variables
2023-08-22 12:49:09,076:INFO:Importing untrained model
2023-08-22 12:49:09,078:INFO:Huber Regressor Imported successfully
2023-08-22 12:49:09,083:INFO:Starting cross validation
2023-08-22 12:49:09,085:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:09,254:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 12:49:09,254:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 12:49:09,254:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 12:49:09,254:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 12:49:09,255:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 12:49:09,264:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 12:49:09,275:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 12:49:09,284:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 12:49:09,304:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 12:49:09,772:INFO:Calculating mean and std
2023-08-22 12:49:09,772:INFO:Creating metrics dataframe
2023-08-22 12:49:09,825:INFO:Uploading results into container
2023-08-22 12:49:09,825:INFO:Uploading model into container now
2023-08-22 12:49:09,825:INFO:_master_model_container: 10
2023-08-22 12:49:09,825:INFO:_display_container: 2
2023-08-22 12:49:09,826:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-08-22 12:49:09,826:INFO:create_model() successfully completed......................................
2023-08-22 12:49:09,886:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:09,886:INFO:Creating metrics dataframe
2023-08-22 12:49:09,895:INFO:Initializing K Neighbors Regressor
2023-08-22 12:49:09,895:INFO:Total runtime is 0.13194734255472818 minutes
2023-08-22 12:49:09,897:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:09,898:INFO:Initializing create_model()
2023-08-22 12:49:09,898:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:09,898:INFO:Checking exceptions
2023-08-22 12:49:09,898:INFO:Importing libraries
2023-08-22 12:49:09,898:INFO:Copying training dataset
2023-08-22 12:49:09,901:INFO:Defining folds
2023-08-22 12:49:09,901:INFO:Declaring metric variables
2023-08-22 12:49:09,904:INFO:Importing untrained model
2023-08-22 12:49:09,907:INFO:K Neighbors Regressor Imported successfully
2023-08-22 12:49:09,910:INFO:Starting cross validation
2023-08-22 12:49:09,911:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:10,508:INFO:Calculating mean and std
2023-08-22 12:49:10,508:INFO:Creating metrics dataframe
2023-08-22 12:49:10,560:INFO:Uploading results into container
2023-08-22 12:49:10,560:INFO:Uploading model into container now
2023-08-22 12:49:10,560:INFO:_master_model_container: 11
2023-08-22 12:49:10,560:INFO:_display_container: 2
2023-08-22 12:49:10,560:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-08-22 12:49:10,560:INFO:create_model() successfully completed......................................
2023-08-22 12:49:10,619:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:10,620:INFO:Creating metrics dataframe
2023-08-22 12:49:10,628:INFO:Initializing Decision Tree Regressor
2023-08-22 12:49:10,628:INFO:Total runtime is 0.14415601889292398 minutes
2023-08-22 12:49:10,630:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:10,630:INFO:Initializing create_model()
2023-08-22 12:49:10,630:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:10,630:INFO:Checking exceptions
2023-08-22 12:49:10,630:INFO:Importing libraries
2023-08-22 12:49:10,631:INFO:Copying training dataset
2023-08-22 12:49:10,634:INFO:Defining folds
2023-08-22 12:49:10,634:INFO:Declaring metric variables
2023-08-22 12:49:10,637:INFO:Importing untrained model
2023-08-22 12:49:10,639:INFO:Decision Tree Regressor Imported successfully
2023-08-22 12:49:10,644:INFO:Starting cross validation
2023-08-22 12:49:10,645:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:11,423:INFO:Calculating mean and std
2023-08-22 12:49:11,425:INFO:Creating metrics dataframe
2023-08-22 12:49:11,538:INFO:Uploading results into container
2023-08-22 12:49:11,539:INFO:Uploading model into container now
2023-08-22 12:49:11,539:INFO:_master_model_container: 12
2023-08-22 12:49:11,539:INFO:_display_container: 2
2023-08-22 12:49:11,539:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=233, splitter='best')
2023-08-22 12:49:11,540:INFO:create_model() successfully completed......................................
2023-08-22 12:49:11,612:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:11,613:INFO:Creating metrics dataframe
2023-08-22 12:49:11,625:INFO:Initializing Random Forest Regressor
2023-08-22 12:49:11,626:INFO:Total runtime is 0.1607959469159444 minutes
2023-08-22 12:49:11,630:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:11,630:INFO:Initializing create_model()
2023-08-22 12:49:11,631:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:11,631:INFO:Checking exceptions
2023-08-22 12:49:11,631:INFO:Importing libraries
2023-08-22 12:49:11,631:INFO:Copying training dataset
2023-08-22 12:49:11,634:INFO:Defining folds
2023-08-22 12:49:11,634:INFO:Declaring metric variables
2023-08-22 12:49:11,638:INFO:Importing untrained model
2023-08-22 12:49:11,642:INFO:Random Forest Regressor Imported successfully
2023-08-22 12:49:11,655:INFO:Starting cross validation
2023-08-22 12:49:11,658:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:13,347:INFO:Calculating mean and std
2023-08-22 12:49:13,348:INFO:Creating metrics dataframe
2023-08-22 12:49:13,436:INFO:Uploading results into container
2023-08-22 12:49:13,437:INFO:Uploading model into container now
2023-08-22 12:49:13,438:INFO:_master_model_container: 13
2023-08-22 12:49:13,438:INFO:_display_container: 2
2023-08-22 12:49:13,438:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=233, verbose=0,
                      warm_start=False)
2023-08-22 12:49:13,438:INFO:create_model() successfully completed......................................
2023-08-22 12:49:13,520:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:13,520:INFO:Creating metrics dataframe
2023-08-22 12:49:13,532:INFO:Initializing Extra Trees Regressor
2023-08-22 12:49:13,532:INFO:Total runtime is 0.1925683816274007 minutes
2023-08-22 12:49:13,537:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:13,537:INFO:Initializing create_model()
2023-08-22 12:49:13,537:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:13,538:INFO:Checking exceptions
2023-08-22 12:49:13,538:INFO:Importing libraries
2023-08-22 12:49:13,538:INFO:Copying training dataset
2023-08-22 12:49:13,543:INFO:Defining folds
2023-08-22 12:49:13,543:INFO:Declaring metric variables
2023-08-22 12:49:13,547:INFO:Importing untrained model
2023-08-22 12:49:13,553:INFO:Extra Trees Regressor Imported successfully
2023-08-22 12:49:13,562:INFO:Starting cross validation
2023-08-22 12:49:13,565:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:14,601:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.55s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_estimator = self._memory_fit(

2023-08-22 12:49:15,401:INFO:Calculating mean and std
2023-08-22 12:49:15,402:INFO:Creating metrics dataframe
2023-08-22 12:49:15,465:INFO:Uploading results into container
2023-08-22 12:49:15,465:INFO:Uploading model into container now
2023-08-22 12:49:15,466:INFO:_master_model_container: 14
2023-08-22 12:49:15,466:INFO:_display_container: 2
2023-08-22 12:49:15,466:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=233, verbose=0,
                    warm_start=False)
2023-08-22 12:49:15,466:INFO:create_model() successfully completed......................................
2023-08-22 12:49:15,525:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:15,525:INFO:Creating metrics dataframe
2023-08-22 12:49:15,534:INFO:Initializing AdaBoost Regressor
2023-08-22 12:49:15,534:INFO:Total runtime is 0.22592876752217608 minutes
2023-08-22 12:49:15,536:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:15,536:INFO:Initializing create_model()
2023-08-22 12:49:15,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:15,537:INFO:Checking exceptions
2023-08-22 12:49:15,537:INFO:Importing libraries
2023-08-22 12:49:15,537:INFO:Copying training dataset
2023-08-22 12:49:15,540:INFO:Defining folds
2023-08-22 12:49:15,540:INFO:Declaring metric variables
2023-08-22 12:49:15,543:INFO:Importing untrained model
2023-08-22 12:49:15,545:INFO:AdaBoost Regressor Imported successfully
2023-08-22 12:49:15,550:INFO:Starting cross validation
2023-08-22 12:49:15,551:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:16,432:INFO:Calculating mean and std
2023-08-22 12:49:16,433:INFO:Creating metrics dataframe
2023-08-22 12:49:16,498:INFO:Uploading results into container
2023-08-22 12:49:16,499:INFO:Uploading model into container now
2023-08-22 12:49:16,499:INFO:_master_model_container: 15
2023-08-22 12:49:16,499:INFO:_display_container: 2
2023-08-22 12:49:16,499:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=233)
2023-08-22 12:49:16,499:INFO:create_model() successfully completed......................................
2023-08-22 12:49:16,560:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:16,560:INFO:Creating metrics dataframe
2023-08-22 12:49:16,568:INFO:Initializing Gradient Boosting Regressor
2023-08-22 12:49:16,568:INFO:Total runtime is 0.24316718180974323 minutes
2023-08-22 12:49:16,571:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:16,571:INFO:Initializing create_model()
2023-08-22 12:49:16,572:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:16,572:INFO:Checking exceptions
2023-08-22 12:49:16,572:INFO:Importing libraries
2023-08-22 12:49:16,572:INFO:Copying training dataset
2023-08-22 12:49:16,575:INFO:Defining folds
2023-08-22 12:49:16,575:INFO:Declaring metric variables
2023-08-22 12:49:16,578:INFO:Importing untrained model
2023-08-22 12:49:16,581:INFO:Gradient Boosting Regressor Imported successfully
2023-08-22 12:49:16,586:INFO:Starting cross validation
2023-08-22 12:49:16,587:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:18,124:INFO:Calculating mean and std
2023-08-22 12:49:18,125:INFO:Creating metrics dataframe
2023-08-22 12:49:18,191:INFO:Uploading results into container
2023-08-22 12:49:18,191:INFO:Uploading model into container now
2023-08-22 12:49:18,192:INFO:_master_model_container: 16
2023-08-22 12:49:18,192:INFO:_display_container: 2
2023-08-22 12:49:18,192:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=233, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-08-22 12:49:18,192:INFO:create_model() successfully completed......................................
2023-08-22 12:49:18,252:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:18,253:INFO:Creating metrics dataframe
2023-08-22 12:49:18,262:INFO:Initializing Extreme Gradient Boosting
2023-08-22 12:49:18,262:INFO:Total runtime is 0.27139885028203325 minutes
2023-08-22 12:49:18,264:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:18,265:INFO:Initializing create_model()
2023-08-22 12:49:18,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:18,265:INFO:Checking exceptions
2023-08-22 12:49:18,265:INFO:Importing libraries
2023-08-22 12:49:18,265:INFO:Copying training dataset
2023-08-22 12:49:18,268:INFO:Defining folds
2023-08-22 12:49:18,268:INFO:Declaring metric variables
2023-08-22 12:49:18,271:INFO:Importing untrained model
2023-08-22 12:49:18,274:INFO:Extreme Gradient Boosting Imported successfully
2023-08-22 12:49:18,278:INFO:Starting cross validation
2023-08-22 12:49:18,280:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:19,839:INFO:Calculating mean and std
2023-08-22 12:49:19,840:INFO:Creating metrics dataframe
2023-08-22 12:49:19,960:INFO:Uploading results into container
2023-08-22 12:49:19,961:INFO:Uploading model into container now
2023-08-22 12:49:19,961:INFO:_master_model_container: 17
2023-08-22 12:49:19,962:INFO:_display_container: 2
2023-08-22 12:49:19,963:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             objective='reg:squarederror', predictor=None, ...)
2023-08-22 12:49:19,963:INFO:create_model() successfully completed......................................
2023-08-22 12:49:20,038:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:20,038:INFO:Creating metrics dataframe
2023-08-22 12:49:20,051:INFO:Initializing Light Gradient Boosting Machine
2023-08-22 12:49:20,051:INFO:Total runtime is 0.30122030576070147 minutes
2023-08-22 12:49:20,054:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:20,055:INFO:Initializing create_model()
2023-08-22 12:49:20,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:20,055:INFO:Checking exceptions
2023-08-22 12:49:20,055:INFO:Importing libraries
2023-08-22 12:49:20,055:INFO:Copying training dataset
2023-08-22 12:49:20,060:INFO:Defining folds
2023-08-22 12:49:20,061:INFO:Declaring metric variables
2023-08-22 12:49:20,064:INFO:Importing untrained model
2023-08-22 12:49:20,068:INFO:Light Gradient Boosting Machine Imported successfully
2023-08-22 12:49:20,076:INFO:Starting cross validation
2023-08-22 12:49:20,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:22,376:INFO:Calculating mean and std
2023-08-22 12:49:22,377:INFO:Creating metrics dataframe
2023-08-22 12:49:22,456:INFO:Uploading results into container
2023-08-22 12:49:22,457:INFO:Uploading model into container now
2023-08-22 12:49:22,457:INFO:_master_model_container: 18
2023-08-22 12:49:22,457:INFO:_display_container: 2
2023-08-22 12:49:22,457:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=233, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-08-22 12:49:22,457:INFO:create_model() successfully completed......................................
2023-08-22 12:49:22,512:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:22,513:INFO:Creating metrics dataframe
2023-08-22 12:49:22,521:INFO:Initializing Dummy Regressor
2023-08-22 12:49:22,521:INFO:Total runtime is 0.34238146543502807 minutes
2023-08-22 12:49:22,524:INFO:SubProcess create_model() called ==================================
2023-08-22 12:49:22,524:INFO:Initializing create_model()
2023-08-22 12:49:22,524:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAC7DDB190>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:22,524:INFO:Checking exceptions
2023-08-22 12:49:22,524:INFO:Importing libraries
2023-08-22 12:49:22,524:INFO:Copying training dataset
2023-08-22 12:49:22,527:INFO:Defining folds
2023-08-22 12:49:22,527:INFO:Declaring metric variables
2023-08-22 12:49:22,530:INFO:Importing untrained model
2023-08-22 12:49:22,532:INFO:Dummy Regressor Imported successfully
2023-08-22 12:49:22,537:INFO:Starting cross validation
2023-08-22 12:49:22,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 12:49:23,481:INFO:Calculating mean and std
2023-08-22 12:49:23,483:INFO:Creating metrics dataframe
2023-08-22 12:49:23,620:INFO:Uploading results into container
2023-08-22 12:49:23,621:INFO:Uploading model into container now
2023-08-22 12:49:23,621:INFO:_master_model_container: 19
2023-08-22 12:49:23,621:INFO:_display_container: 2
2023-08-22 12:49:23,622:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-08-22 12:49:23,622:INFO:create_model() successfully completed......................................
2023-08-22 12:49:23,728:INFO:SubProcess create_model() end ==================================
2023-08-22 12:49:23,728:INFO:Creating metrics dataframe
2023-08-22 12:49:23,759:INFO:Initializing create_model()
2023-08-22 12:49:23,759:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAF37E3B50>, estimator=ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=233, verbose=0,
                    warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-22 12:49:23,759:INFO:Checking exceptions
2023-08-22 12:49:23,761:INFO:Importing libraries
2023-08-22 12:49:23,761:INFO:Copying training dataset
2023-08-22 12:49:23,765:INFO:Defining folds
2023-08-22 12:49:23,765:INFO:Declaring metric variables
2023-08-22 12:49:23,765:INFO:Importing untrained model
2023-08-22 12:49:23,765:INFO:Declaring custom model
2023-08-22 12:49:23,765:INFO:Extra Trees Regressor Imported successfully
2023-08-22 12:49:23,767:INFO:Cross validation set to False
2023-08-22 12:49:23,767:INFO:Fitting Model
2023-08-22 12:49:24,228:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=233, verbose=0,
                    warm_start=False)
2023-08-22 12:49:24,228:INFO:create_model() successfully completed......................................
2023-08-22 12:49:24,310:INFO:_master_model_container: 19
2023-08-22 12:49:24,310:INFO:_display_container: 2
2023-08-22 12:49:24,310:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=233, verbose=0,
                    warm_start=False)
2023-08-22 12:49:24,310:INFO:compare_models() successfully completed......................................
2023-08-22 13:03:24,243:INFO:PyCaret ClassificationExperiment
2023-08-22 13:03:24,243:INFO:Logging name: clf-default-name
2023-08-22 13:03:24,243:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-08-22 13:03:24,243:INFO:version 3.0.4
2023-08-22 13:03:24,243:INFO:Initializing setup()
2023-08-22 13:03:24,243:INFO:self.USI: eb6c
2023-08-22 13:03:24,243:INFO:self._variable_keys: {'exp_name_log', 'log_plots_param', 'idx', 'logging_param', 'data', 'fold_shuffle_param', 'y_test', 'gpu_n_jobs_param', 'pipeline', 'fold_groups_param', 'target_param', 'exp_id', 'gpu_param', '_available_plots', 'X_train', 'fix_imbalance', 'USI', 'fold_generator', 'html_param', '_ml_usecase', 'X_test', 'n_jobs_param', 'memory', 'y', 'y_train', 'X', 'is_multiclass', 'seed'}
2023-08-22 13:03:24,243:INFO:Checking environment
2023-08-22 13:03:24,243:INFO:python_version: 3.10.11
2023-08-22 13:03:24,243:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2023-08-22 13:03:24,244:INFO:machine: AMD64
2023-08-22 13:03:24,244:INFO:platform: Windows-10-10.0.22621-SP0
2023-08-22 13:03:24,250:INFO:Memory: svmem(total=34014814208, available=13571022848, percent=60.1, used=20443791360, free=13571022848)
2023-08-22 13:03:24,250:INFO:Physical Core: 14
2023-08-22 13:03:24,250:INFO:Logical Core: 20
2023-08-22 13:03:24,250:INFO:Checking libraries
2023-08-22 13:03:24,250:INFO:System:
2023-08-22 13:03:24,250:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2023-08-22 13:03:24,250:INFO:executable: c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\python.exe
2023-08-22 13:03:24,250:INFO:   machine: Windows-10-10.0.22621-SP0
2023-08-22 13:03:24,250:INFO:PyCaret required dependencies:
2023-08-22 13:03:24,250:INFO:                 pip: 23.2.1
2023-08-22 13:03:24,250:INFO:          setuptools: 65.5.0
2023-08-22 13:03:24,250:INFO:             pycaret: 3.0.4
2023-08-22 13:03:24,250:INFO:             IPython: 8.14.0
2023-08-22 13:03:24,250:INFO:          ipywidgets: 8.1.0
2023-08-22 13:03:24,250:INFO:                tqdm: 4.66.1
2023-08-22 13:03:24,250:INFO:               numpy: 1.23.5
2023-08-22 13:03:24,250:INFO:              pandas: 1.5.3
2023-08-22 13:03:24,250:INFO:              jinja2: 3.1.2
2023-08-22 13:03:24,250:INFO:               scipy: 1.11.2
2023-08-22 13:03:24,250:INFO:              joblib: 1.3.2
2023-08-22 13:03:24,250:INFO:             sklearn: 1.2.2
2023-08-22 13:03:24,250:INFO:                pyod: 1.1.0
2023-08-22 13:03:24,250:INFO:            imblearn: 0.11.0
2023-08-22 13:03:24,250:INFO:   category_encoders: 2.6.2
2023-08-22 13:03:24,250:INFO:            lightgbm: 4.0.0
2023-08-22 13:03:24,250:INFO:               numba: 0.57.1
2023-08-22 13:03:24,250:INFO:            requests: 2.31.0
2023-08-22 13:03:24,250:INFO:          matplotlib: 3.7.2
2023-08-22 13:03:24,250:INFO:          scikitplot: 0.3.7
2023-08-22 13:03:24,251:INFO:         yellowbrick: 1.5
2023-08-22 13:03:24,251:INFO:              plotly: 5.16.1
2023-08-22 13:03:24,251:INFO:    plotly-resampler: Not installed
2023-08-22 13:03:24,251:INFO:             kaleido: 0.2.1
2023-08-22 13:03:24,251:INFO:           schemdraw: 0.15
2023-08-22 13:03:24,251:INFO:         statsmodels: 0.14.0
2023-08-22 13:03:24,251:INFO:              sktime: 0.22.0
2023-08-22 13:03:24,251:INFO:               tbats: 1.1.3
2023-08-22 13:03:24,251:INFO:            pmdarima: 2.0.3
2023-08-22 13:03:24,251:INFO:              psutil: 5.9.5
2023-08-22 13:03:24,251:INFO:          markupsafe: 2.1.3
2023-08-22 13:03:24,251:INFO:             pickle5: Not installed
2023-08-22 13:03:24,251:INFO:         cloudpickle: 2.2.1
2023-08-22 13:03:24,251:INFO:         deprecation: 2.1.0
2023-08-22 13:03:24,251:INFO:              xxhash: 3.3.0
2023-08-22 13:03:24,251:INFO:           wurlitzer: Not installed
2023-08-22 13:03:24,251:INFO:PyCaret optional dependencies:
2023-08-22 13:03:24,251:INFO:                shap: Not installed
2023-08-22 13:03:24,251:INFO:           interpret: Not installed
2023-08-22 13:03:24,251:INFO:                umap: Not installed
2023-08-22 13:03:24,251:INFO:    pandas_profiling: 4.5.1
2023-08-22 13:03:24,251:INFO:  explainerdashboard: Not installed
2023-08-22 13:03:24,251:INFO:             autoviz: Not installed
2023-08-22 13:03:24,251:INFO:           fairlearn: Not installed
2023-08-22 13:03:24,251:INFO:          deepchecks: Not installed
2023-08-22 13:03:24,251:INFO:             xgboost: 1.7.6
2023-08-22 13:03:24,251:INFO:            catboost: Not installed
2023-08-22 13:03:24,251:INFO:              kmodes: Not installed
2023-08-22 13:03:24,251:INFO:             mlxtend: Not installed
2023-08-22 13:03:24,251:INFO:       statsforecast: Not installed
2023-08-22 13:03:24,251:INFO:        tune_sklearn: Not installed
2023-08-22 13:03:24,251:INFO:                 ray: Not installed
2023-08-22 13:03:24,251:INFO:            hyperopt: Not installed
2023-08-22 13:03:24,251:INFO:              optuna: Not installed
2023-08-22 13:03:24,251:INFO:               skopt: Not installed
2023-08-22 13:03:24,251:INFO:              mlflow: Not installed
2023-08-22 13:03:24,251:INFO:              gradio: Not installed
2023-08-22 13:03:24,251:INFO:             fastapi: Not installed
2023-08-22 13:03:24,251:INFO:             uvicorn: Not installed
2023-08-22 13:03:24,251:INFO:              m2cgen: Not installed
2023-08-22 13:03:24,251:INFO:           evidently: Not installed
2023-08-22 13:03:24,251:INFO:               fugue: Not installed
2023-08-22 13:03:24,251:INFO:           streamlit: Not installed
2023-08-22 13:03:24,251:INFO:             prophet: Not installed
2023-08-22 13:03:24,251:INFO:None
2023-08-22 13:03:24,251:INFO:Set up data.
2023-08-22 13:03:24,255:INFO:Set up train/test split.
2023-08-22 13:03:24,258:INFO:Set up index.
2023-08-22 13:03:24,258:INFO:Set up folding strategy.
2023-08-22 13:03:24,258:INFO:Assigning column types.
2023-08-22 13:03:24,260:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-22 13:03:24,286:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 13:03:24,287:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-22 13:03:24,303:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:03:24,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:03:24,331:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 13:03:24,331:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-22 13:03:24,348:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:03:24,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:03:24,349:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-22 13:03:24,375:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-22 13:03:24,392:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:03:24,393:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:03:24,419:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-22 13:03:24,435:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:03:24,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:03:24,436:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-08-22 13:03:24,479:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:03:24,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:03:24,522:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:03:24,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:03:24,525:INFO:Preparing preprocessing pipeline...
2023-08-22 13:03:24,526:INFO:Set up label encoding.
2023-08-22 13:03:24,526:INFO:Set up simple imputation.
2023-08-22 13:03:24,526:INFO:Set up feature normalization.
2023-08-22 13:03:24,542:INFO:Finished creating preprocessing pipeline.
2023-08-22 13:03:24,544:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\VONHIN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['wt', 'forty', 'bench', 'vertical',
                                             'broad_jump', 'cone', 'shuttle',
                                             'school_reg', 'school_class',
                                             'pos_cl...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-08-22 13:03:24,544:INFO:Creating final display dataframe.
2023-08-22 13:03:24,596:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                2512  
1                                         draft_round  
2                                          Multiclass  
3   1.0: 0, 2.0: 1, 3.0: 2, 4.0: 3, 5.0: 4, 6.0: 5...  
4                                          (2110, 13)  
5                                          (2110, 13)  
6                                          (1477, 13)  
7                                           (633, 13)  
8                                                  12  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               eb6c  
2023-08-22 13:03:24,644:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:03:24,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:03:24,688:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:03:24,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:03:24,690:INFO:setup() successfully completed in 0.5s...............
2023-08-22 13:03:29,133:INFO:Initializing compare_models()
2023-08-22 13:03:29,133:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-08-22 13:03:29,133:INFO:Checking exceptions
2023-08-22 13:03:29,136:INFO:Preparing display monitor
2023-08-22 13:03:29,163:INFO:Initializing Logistic Regression
2023-08-22 13:03:29,163:INFO:Total runtime is 0.0 minutes
2023-08-22 13:03:29,168:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:29,168:INFO:Initializing create_model()
2023-08-22 13:03:29,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:29,169:INFO:Checking exceptions
2023-08-22 13:03:29,169:INFO:Importing libraries
2023-08-22 13:03:29,169:INFO:Copying training dataset
2023-08-22 13:03:29,172:INFO:Defining folds
2023-08-22 13:03:29,172:INFO:Declaring metric variables
2023-08-22 13:03:29,175:INFO:Importing untrained model
2023-08-22 13:03:29,178:INFO:Logistic Regression Imported successfully
2023-08-22 13:03:29,184:INFO:Starting cross validation
2023-08-22 13:03:29,185:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:31,438:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,439:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,439:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:31,440:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,449:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,450:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,451:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:31,451:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,467:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,468:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,468:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,469:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,469:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,469:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:31,470:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,470:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,471:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,472:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,475:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,476:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,477:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,483:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,484:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,485:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,490:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,491:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,492:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,494:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,495:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,495:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,496:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,496:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:31,497:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:32,098:INFO:Calculating mean and std
2023-08-22 13:03:32,099:INFO:Creating metrics dataframe
2023-08-22 13:03:32,172:INFO:Uploading results into container
2023-08-22 13:03:32,173:INFO:Uploading model into container now
2023-08-22 13:03:32,173:INFO:_master_model_container: 1
2023-08-22 13:03:32,173:INFO:_display_container: 2
2023-08-22 13:03:32,173:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2512, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-08-22 13:03:32,173:INFO:create_model() successfully completed......................................
2023-08-22 13:03:32,243:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:32,243:INFO:Creating metrics dataframe
2023-08-22 13:03:32,250:INFO:Initializing K Neighbors Classifier
2023-08-22 13:03:32,250:INFO:Total runtime is 0.051450113455454506 minutes
2023-08-22 13:03:32,253:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:32,253:INFO:Initializing create_model()
2023-08-22 13:03:32,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:32,254:INFO:Checking exceptions
2023-08-22 13:03:32,254:INFO:Importing libraries
2023-08-22 13:03:32,254:INFO:Copying training dataset
2023-08-22 13:03:32,257:INFO:Defining folds
2023-08-22 13:03:32,257:INFO:Declaring metric variables
2023-08-22 13:03:32,259:INFO:Importing untrained model
2023-08-22 13:03:32,263:INFO:K Neighbors Classifier Imported successfully
2023-08-22 13:03:32,267:INFO:Starting cross validation
2023-08-22 13:03:32,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:34,063:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,065:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,067:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,123:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,123:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,124:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,124:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,125:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,125:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,139:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,140:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,141:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,155:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,155:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,156:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,156:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,157:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,157:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,173:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,174:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,174:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,174:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,175:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,175:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,176:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,176:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,177:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,186:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,188:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,188:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,695:INFO:Calculating mean and std
2023-08-22 13:03:34,696:INFO:Creating metrics dataframe
2023-08-22 13:03:34,769:INFO:Uploading results into container
2023-08-22 13:03:34,769:INFO:Uploading model into container now
2023-08-22 13:03:34,770:INFO:_master_model_container: 2
2023-08-22 13:03:34,770:INFO:_display_container: 2
2023-08-22 13:03:34,770:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-08-22 13:03:34,770:INFO:create_model() successfully completed......................................
2023-08-22 13:03:34,829:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:34,829:INFO:Creating metrics dataframe
2023-08-22 13:03:34,836:INFO:Initializing Naive Bayes
2023-08-22 13:03:34,836:INFO:Total runtime is 0.09454275767008463 minutes
2023-08-22 13:03:34,838:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:34,838:INFO:Initializing create_model()
2023-08-22 13:03:34,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:34,838:INFO:Checking exceptions
2023-08-22 13:03:34,838:INFO:Importing libraries
2023-08-22 13:03:34,838:INFO:Copying training dataset
2023-08-22 13:03:34,841:INFO:Defining folds
2023-08-22 13:03:34,841:INFO:Declaring metric variables
2023-08-22 13:03:34,843:INFO:Importing untrained model
2023-08-22 13:03:34,847:INFO:Naive Bayes Imported successfully
2023-08-22 13:03:34,853:INFO:Starting cross validation
2023-08-22 13:03:34,854:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:34,929:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,929:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,930:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,930:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,931:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,931:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,938:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,939:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,939:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,940:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,940:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,941:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,942:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,943:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,943:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,944:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,945:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,946:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,947:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,947:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,947:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,947:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,949:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,956:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,957:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,958:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,960:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,961:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:34,962:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,595:INFO:Calculating mean and std
2023-08-22 13:03:35,596:INFO:Creating metrics dataframe
2023-08-22 13:03:35,671:INFO:Uploading results into container
2023-08-22 13:03:35,673:INFO:Uploading model into container now
2023-08-22 13:03:35,673:INFO:_master_model_container: 3
2023-08-22 13:03:35,673:INFO:_display_container: 2
2023-08-22 13:03:35,673:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-08-22 13:03:35,673:INFO:create_model() successfully completed......................................
2023-08-22 13:03:35,745:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:35,745:INFO:Creating metrics dataframe
2023-08-22 13:03:35,756:INFO:Initializing Decision Tree Classifier
2023-08-22 13:03:35,756:INFO:Total runtime is 0.10988445281982422 minutes
2023-08-22 13:03:35,759:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:35,760:INFO:Initializing create_model()
2023-08-22 13:03:35,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:35,760:INFO:Checking exceptions
2023-08-22 13:03:35,760:INFO:Importing libraries
2023-08-22 13:03:35,760:INFO:Copying training dataset
2023-08-22 13:03:35,765:INFO:Defining folds
2023-08-22 13:03:35,765:INFO:Declaring metric variables
2023-08-22 13:03:35,769:INFO:Importing untrained model
2023-08-22 13:03:35,775:INFO:Decision Tree Classifier Imported successfully
2023-08-22 13:03:35,782:INFO:Starting cross validation
2023-08-22 13:03:35,783:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:35,908:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,909:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,911:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,918:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,920:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,921:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,924:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,926:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,927:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,973:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,973:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,975:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,976:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,976:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,979:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,980:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,980:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,981:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,981:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,983:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:35,983:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:36,018:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:36,019:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:36,021:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:36,021:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:36,022:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:36,022:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:36,023:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:36,023:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:36,024:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:36,796:INFO:Calculating mean and std
2023-08-22 13:03:36,797:INFO:Creating metrics dataframe
2023-08-22 13:03:36,876:INFO:Uploading results into container
2023-08-22 13:03:36,877:INFO:Uploading model into container now
2023-08-22 13:03:36,877:INFO:_master_model_container: 4
2023-08-22 13:03:36,877:INFO:_display_container: 2
2023-08-22 13:03:36,877:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2512, splitter='best')
2023-08-22 13:03:36,877:INFO:create_model() successfully completed......................................
2023-08-22 13:03:36,940:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:36,940:INFO:Creating metrics dataframe
2023-08-22 13:03:36,948:INFO:Initializing SVM - Linear Kernel
2023-08-22 13:03:36,948:INFO:Total runtime is 0.1297404925028483 minutes
2023-08-22 13:03:36,950:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:36,951:INFO:Initializing create_model()
2023-08-22 13:03:36,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:36,951:INFO:Checking exceptions
2023-08-22 13:03:36,951:INFO:Importing libraries
2023-08-22 13:03:36,951:INFO:Copying training dataset
2023-08-22 13:03:36,954:INFO:Defining folds
2023-08-22 13:03:36,954:INFO:Declaring metric variables
2023-08-22 13:03:36,957:INFO:Importing untrained model
2023-08-22 13:03:36,959:INFO:SVM - Linear Kernel Imported successfully
2023-08-22 13:03:36,964:INFO:Starting cross validation
2023-08-22 13:03:36,964:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:37,066:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:03:37,066:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:03:37,066:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,066:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,067:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:03:37,067:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:03:37,067:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,067:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,067:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,067:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,068:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:37,068:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,068:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,069:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,069:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,069:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,070:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:37,070:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,080:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:03:37,080:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,081:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:03:37,081:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:03:37,081:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:03:37,081:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:03:37,081:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,081:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,081:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,081:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,081:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,082:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,082:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,082:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,082:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,082:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,083:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custo2023-08-22 13:03:37,083:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

f the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:03:37,083:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,083:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,084:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,086:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,087:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,695:INFO:Calculating mean and std
2023-08-22 13:03:37,696:INFO:Creating metrics dataframe
2023-08-22 13:03:37,777:INFO:Uploading results into container
2023-08-22 13:03:37,777:INFO:Uploading model into container now
2023-08-22 13:03:37,778:INFO:_master_model_container: 5
2023-08-22 13:03:37,778:INFO:_display_container: 2
2023-08-22 13:03:37,778:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2512, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-08-22 13:03:37,778:INFO:create_model() successfully completed......................................
2023-08-22 13:03:37,839:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:37,839:INFO:Creating metrics dataframe
2023-08-22 13:03:37,847:INFO:Initializing Ridge Classifier
2023-08-22 13:03:37,847:INFO:Total runtime is 0.1447318434715271 minutes
2023-08-22 13:03:37,850:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:37,850:INFO:Initializing create_model()
2023-08-22 13:03:37,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:37,850:INFO:Checking exceptions
2023-08-22 13:03:37,850:INFO:Importing libraries
2023-08-22 13:03:37,850:INFO:Copying training dataset
2023-08-22 13:03:37,853:INFO:Defining folds
2023-08-22 13:03:37,853:INFO:Declaring metric variables
2023-08-22 13:03:37,856:INFO:Importing untrained model
2023-08-22 13:03:37,859:INFO:Ridge Classifier Imported successfully
2023-08-22 13:03:37,864:INFO:Starting cross validation
2023-08-22 13:03:37,865:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:37,934:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:03:37,934:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:03:37,935:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:03:37,935:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,935:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,935:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:03:37,936:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,936:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,936:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,936:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,936:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:03:37,936:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:37,937:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,937:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,937:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:37,937:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:37,938:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,938:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,938:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:03:37,938:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,938:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,938:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:37,938:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,939:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,939:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:03:37,939:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:03:37,940:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,940:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,940:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,940:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,941:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:03:37,941:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,941:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,941:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,941:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:37,941:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,941:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:37,942:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,942:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,942:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,942:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:03:37,943:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:37,943:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,943:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,943:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:37,944:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:37,944:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:38,581:INFO:Calculating mean and std
2023-08-22 13:03:38,581:INFO:Creating metrics dataframe
2023-08-22 13:03:38,655:INFO:Uploading results into container
2023-08-22 13:03:38,655:INFO:Uploading model into container now
2023-08-22 13:03:38,656:INFO:_master_model_container: 6
2023-08-22 13:03:38,656:INFO:_display_container: 2
2023-08-22 13:03:38,656:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2512, solver='auto',
                tol=0.0001)
2023-08-22 13:03:38,656:INFO:create_model() successfully completed......................................
2023-08-22 13:03:38,717:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:38,717:INFO:Creating metrics dataframe
2023-08-22 13:03:38,725:INFO:Initializing Random Forest Classifier
2023-08-22 13:03:38,725:INFO:Total runtime is 0.15936015844345092 minutes
2023-08-22 13:03:38,728:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:38,728:INFO:Initializing create_model()
2023-08-22 13:03:38,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:38,728:INFO:Checking exceptions
2023-08-22 13:03:38,728:INFO:Importing libraries
2023-08-22 13:03:38,728:INFO:Copying training dataset
2023-08-22 13:03:38,731:INFO:Defining folds
2023-08-22 13:03:38,731:INFO:Declaring metric variables
2023-08-22 13:03:38,733:INFO:Importing untrained model
2023-08-22 13:03:38,735:INFO:Random Forest Classifier Imported successfully
2023-08-22 13:03:38,740:INFO:Starting cross validation
2023-08-22 13:03:38,741:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:39,289:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,290:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,291:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,321:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,321:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,322:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,322:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,322:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,323:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,323:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,324:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,325:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,326:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,328:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,336:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,337:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,338:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,352:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,352:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,353:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,353:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,354:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,354:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,445:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,446:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,447:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,478:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,479:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,480:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:39,999:INFO:Calculating mean and std
2023-08-22 13:03:40,000:INFO:Creating metrics dataframe
2023-08-22 13:03:40,147:INFO:Uploading results into container
2023-08-22 13:03:40,148:INFO:Uploading model into container now
2023-08-22 13:03:40,149:INFO:_master_model_container: 7
2023-08-22 13:03:40,149:INFO:_display_container: 2
2023-08-22 13:03:40,149:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2512, verbose=0, warm_start=False)
2023-08-22 13:03:40,149:INFO:create_model() successfully completed......................................
2023-08-22 13:03:40,219:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:40,219:INFO:Creating metrics dataframe
2023-08-22 13:03:40,233:INFO:Initializing Quadratic Discriminant Analysis
2023-08-22 13:03:40,233:INFO:Total runtime is 0.18449556430180866 minutes
2023-08-22 13:03:40,239:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:40,240:INFO:Initializing create_model()
2023-08-22 13:03:40,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:40,240:INFO:Checking exceptions
2023-08-22 13:03:40,241:INFO:Importing libraries
2023-08-22 13:03:40,241:INFO:Copying training dataset
2023-08-22 13:03:40,245:INFO:Defining folds
2023-08-22 13:03:40,245:INFO:Declaring metric variables
2023-08-22 13:03:40,249:INFO:Importing untrained model
2023-08-22 13:03:40,274:INFO:Quadratic Discriminant Analysis Imported successfully
2023-08-22 13:03:40,298:INFO:Starting cross validation
2023-08-22 13:03:40,299:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:40,415:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,417:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,418:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,418:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,420:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,421:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,421:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,422:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,424:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,459:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,460:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,461:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,463:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,466:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,466:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,466:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,467:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,469:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,471:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,473:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,474:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,474:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,476:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,477:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,481:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,484:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,487:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,497:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,501:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:40,505:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:41,465:INFO:Calculating mean and std
2023-08-22 13:03:41,466:INFO:Creating metrics dataframe
2023-08-22 13:03:41,624:INFO:Uploading results into container
2023-08-22 13:03:41,625:INFO:Uploading model into container now
2023-08-22 13:03:41,626:INFO:_master_model_container: 8
2023-08-22 13:03:41,626:INFO:_display_container: 2
2023-08-22 13:03:41,626:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-08-22 13:03:41,626:INFO:create_model() successfully completed......................................
2023-08-22 13:03:41,703:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:41,703:INFO:Creating metrics dataframe
2023-08-22 13:03:41,715:INFO:Initializing Ada Boost Classifier
2023-08-22 13:03:41,715:INFO:Total runtime is 0.20919346412022907 minutes
2023-08-22 13:03:41,719:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:41,719:INFO:Initializing create_model()
2023-08-22 13:03:41,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:41,720:INFO:Checking exceptions
2023-08-22 13:03:41,720:INFO:Importing libraries
2023-08-22 13:03:41,720:INFO:Copying training dataset
2023-08-22 13:03:41,723:INFO:Defining folds
2023-08-22 13:03:41,723:INFO:Declaring metric variables
2023-08-22 13:03:41,725:INFO:Importing untrained model
2023-08-22 13:03:41,729:INFO:Ada Boost Classifier Imported successfully
2023-08-22 13:03:41,740:INFO:Starting cross validation
2023-08-22 13:03:41,743:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:42,168:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,169:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,170:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,203:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,207:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,208:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,209:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,211:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,211:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,221:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,222:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,223:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,240:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,241:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,241:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,243:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,244:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,245:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,267:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,267:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,268:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,270:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,270:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,274:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,298:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,299:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,300:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,302:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,304:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:42,305:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:43,104:INFO:Calculating mean and std
2023-08-22 13:03:43,104:INFO:Creating metrics dataframe
2023-08-22 13:03:43,186:INFO:Uploading results into container
2023-08-22 13:03:43,187:INFO:Uploading model into container now
2023-08-22 13:03:43,188:INFO:_master_model_container: 9
2023-08-22 13:03:43,188:INFO:_display_container: 2
2023-08-22 13:03:43,188:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2512)
2023-08-22 13:03:43,188:INFO:create_model() successfully completed......................................
2023-08-22 13:03:43,245:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:43,245:INFO:Creating metrics dataframe
2023-08-22 13:03:43,253:INFO:Initializing Gradient Boosting Classifier
2023-08-22 13:03:43,253:INFO:Total runtime is 0.23482701381047566 minutes
2023-08-22 13:03:43,255:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:43,255:INFO:Initializing create_model()
2023-08-22 13:03:43,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:43,255:INFO:Checking exceptions
2023-08-22 13:03:43,256:INFO:Importing libraries
2023-08-22 13:03:43,256:INFO:Copying training dataset
2023-08-22 13:03:43,258:INFO:Defining folds
2023-08-22 13:03:43,258:INFO:Declaring metric variables
2023-08-22 13:03:43,260:INFO:Importing untrained model
2023-08-22 13:03:43,263:INFO:Gradient Boosting Classifier Imported successfully
2023-08-22 13:03:43,268:INFO:Starting cross validation
2023-08-22 13:03:43,268:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:45,599:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,601:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,604:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,637:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,638:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,639:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,749:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,751:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,753:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,779:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,780:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,783:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,869:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,870:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,872:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,881:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,884:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,885:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,891:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,893:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,893:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,894:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,895:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,896:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,908:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,910:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,911:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,962:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,963:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:45,964:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:46,572:INFO:Calculating mean and std
2023-08-22 13:03:46,574:INFO:Creating metrics dataframe
2023-08-22 13:03:46,731:INFO:Uploading results into container
2023-08-22 13:03:46,732:INFO:Uploading model into container now
2023-08-22 13:03:46,733:INFO:_master_model_container: 10
2023-08-22 13:03:46,733:INFO:_display_container: 2
2023-08-22 13:03:46,733:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2512, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-08-22 13:03:46,733:INFO:create_model() successfully completed......................................
2023-08-22 13:03:46,810:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:46,810:INFO:Creating metrics dataframe
2023-08-22 13:03:46,821:INFO:Initializing Linear Discriminant Analysis
2023-08-22 13:03:46,822:INFO:Total runtime is 0.29432087739308677 minutes
2023-08-22 13:03:46,826:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:46,826:INFO:Initializing create_model()
2023-08-22 13:03:46,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:46,826:INFO:Checking exceptions
2023-08-22 13:03:46,826:INFO:Importing libraries
2023-08-22 13:03:46,827:INFO:Copying training dataset
2023-08-22 13:03:46,832:INFO:Defining folds
2023-08-22 13:03:46,832:INFO:Declaring metric variables
2023-08-22 13:03:46,841:INFO:Importing untrained model
2023-08-22 13:03:46,846:INFO:Linear Discriminant Analysis Imported successfully
2023-08-22 13:03:46,855:INFO:Starting cross validation
2023-08-22 13:03:46,855:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:46,971:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:46,975:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:46,977:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:46,979:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:46,991:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:46,995:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:46,996:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,001:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,002:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,004:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:47,005:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,007:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,008:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,010:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,014:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,015:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,017:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,034:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,037:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,040:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,043:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,044:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,045:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:47,046:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,051:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,053:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,055:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,055:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,056:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,057:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:03:47,059:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,059:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,061:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:47,061:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:48,023:INFO:Calculating mean and std
2023-08-22 13:03:48,024:INFO:Creating metrics dataframe
2023-08-22 13:03:48,178:INFO:Uploading results into container
2023-08-22 13:03:48,179:INFO:Uploading model into container now
2023-08-22 13:03:48,179:INFO:_master_model_container: 11
2023-08-22 13:03:48,179:INFO:_display_container: 2
2023-08-22 13:03:48,180:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-08-22 13:03:48,180:INFO:create_model() successfully completed......................................
2023-08-22 13:03:48,299:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:48,299:INFO:Creating metrics dataframe
2023-08-22 13:03:48,311:INFO:Initializing Extra Trees Classifier
2023-08-22 13:03:48,311:INFO:Total runtime is 0.3191399653752645 minutes
2023-08-22 13:03:48,315:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:48,316:INFO:Initializing create_model()
2023-08-22 13:03:48,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:48,316:INFO:Checking exceptions
2023-08-22 13:03:48,316:INFO:Importing libraries
2023-08-22 13:03:48,316:INFO:Copying training dataset
2023-08-22 13:03:48,320:INFO:Defining folds
2023-08-22 13:03:48,320:INFO:Declaring metric variables
2023-08-22 13:03:48,324:INFO:Importing untrained model
2023-08-22 13:03:48,328:INFO:Extra Trees Classifier Imported successfully
2023-08-22 13:03:48,334:INFO:Starting cross validation
2023-08-22 13:03:48,335:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:49,099:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,100:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,102:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,113:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,114:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,115:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,115:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,115:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,116:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,129:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,130:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,130:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,144:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,145:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,146:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,159:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,159:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,160:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,160:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,161:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,161:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,175:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,176:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,177:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,191:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,192:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,193:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,268:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,269:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,270:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:49,810:INFO:Calculating mean and std
2023-08-22 13:03:49,811:INFO:Creating metrics dataframe
2023-08-22 13:03:49,900:INFO:Uploading results into container
2023-08-22 13:03:49,901:INFO:Uploading model into container now
2023-08-22 13:03:49,901:INFO:_master_model_container: 12
2023-08-22 13:03:49,901:INFO:_display_container: 2
2023-08-22 13:03:49,901:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2512, verbose=0, warm_start=False)
2023-08-22 13:03:49,901:INFO:create_model() successfully completed......................................
2023-08-22 13:03:49,963:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:49,963:INFO:Creating metrics dataframe
2023-08-22 13:03:49,973:INFO:Initializing Extreme Gradient Boosting
2023-08-22 13:03:49,973:INFO:Total runtime is 0.3468250711758932 minutes
2023-08-22 13:03:49,975:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:49,975:INFO:Initializing create_model()
2023-08-22 13:03:49,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:49,975:INFO:Checking exceptions
2023-08-22 13:03:49,975:INFO:Importing libraries
2023-08-22 13:03:49,975:INFO:Copying training dataset
2023-08-22 13:03:49,979:INFO:Defining folds
2023-08-22 13:03:49,979:INFO:Declaring metric variables
2023-08-22 13:03:49,982:INFO:Importing untrained model
2023-08-22 13:03:49,984:INFO:Extreme Gradient Boosting Imported successfully
2023-08-22 13:03:49,990:INFO:Starting cross validation
2023-08-22 13:03:49,990:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:03:52,123:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,125:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,127:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,149:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,150:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,150:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,151:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,151:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,151:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,152:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,153:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,153:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,167:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,168:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,169:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,196:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,197:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,198:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,205:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,206:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,206:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,207:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,207:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,208:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,220:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,221:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,222:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,227:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,228:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,229:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:03:52,918:INFO:Calculating mean and std
2023-08-22 13:03:52,919:INFO:Creating metrics dataframe
2023-08-22 13:03:53,005:INFO:Uploading results into container
2023-08-22 13:03:53,006:INFO:Uploading model into container now
2023-08-22 13:03:53,006:INFO:_master_model_container: 13
2023-08-22 13:03:53,006:INFO:_display_container: 2
2023-08-22 13:03:53,007:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-08-22 13:03:53,007:INFO:create_model() successfully completed......................................
2023-08-22 13:03:53,062:INFO:SubProcess create_model() end ==================================
2023-08-22 13:03:53,062:INFO:Creating metrics dataframe
2023-08-22 13:03:53,071:INFO:Initializing Light Gradient Boosting Machine
2023-08-22 13:03:53,071:INFO:Total runtime is 0.3984660625457764 minutes
2023-08-22 13:03:53,074:INFO:SubProcess create_model() called ==================================
2023-08-22 13:03:53,075:INFO:Initializing create_model()
2023-08-22 13:03:53,075:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:03:53,075:INFO:Checking exceptions
2023-08-22 13:03:53,075:INFO:Importing libraries
2023-08-22 13:03:53,075:INFO:Copying training dataset
2023-08-22 13:03:53,077:INFO:Defining folds
2023-08-22 13:03:53,078:INFO:Declaring metric variables
2023-08-22 13:03:53,080:INFO:Importing untrained model
2023-08-22 13:03:53,083:INFO:Light Gradient Boosting Machine Imported successfully
2023-08-22 13:03:53,087:INFO:Starting cross validation
2023-08-22 13:03:53,087:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:04:00,273:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:00,276:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:00,279:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:00,330:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:00,332:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:00,338:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:00,368:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:00,371:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:00,373:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:00,639:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:00,642:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:00,645:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,021:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,024:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,026:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,241:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,244:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,254:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,319:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,321:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,323:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,438:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,440:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,442:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,851:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,853:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,855:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,955:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,957:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:01,959:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,052:INFO:Calculating mean and std
2023-08-22 13:04:02,053:INFO:Creating metrics dataframe
2023-08-22 13:04:02,203:INFO:Uploading results into container
2023-08-22 13:04:02,205:INFO:Uploading model into container now
2023-08-22 13:04:02,206:INFO:_master_model_container: 14
2023-08-22 13:04:02,206:INFO:_display_container: 2
2023-08-22 13:04:02,207:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2512, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-08-22 13:04:02,207:INFO:create_model() successfully completed......................................
2023-08-22 13:04:02,285:INFO:SubProcess create_model() end ==================================
2023-08-22 13:04:02,285:INFO:Creating metrics dataframe
2023-08-22 13:04:02,299:INFO:Initializing Dummy Classifier
2023-08-22 13:04:02,299:INFO:Total runtime is 0.5522622267405193 minutes
2023-08-22 13:04:02,304:INFO:SubProcess create_model() called ==================================
2023-08-22 13:04:02,304:INFO:Initializing create_model()
2023-08-22 13:04:02,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF3507F10>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:04:02,305:INFO:Checking exceptions
2023-08-22 13:04:02,305:INFO:Importing libraries
2023-08-22 13:04:02,305:INFO:Copying training dataset
2023-08-22 13:04:02,309:INFO:Defining folds
2023-08-22 13:04:02,310:INFO:Declaring metric variables
2023-08-22 13:04:02,317:INFO:Importing untrained model
2023-08-22 13:04:02,321:INFO:Dummy Classifier Imported successfully
2023-08-22 13:04:02,333:INFO:Starting cross validation
2023-08-22 13:04:02,334:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:04:02,456:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,457:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,458:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:04:02,459:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,468:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,470:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,470:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:04:02,471:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,473:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,477:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,479:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,480:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:04:02,480:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:04:02,480:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,482:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,485:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,486:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,488:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,489:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:04:02,489:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,491:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,493:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:04:02,493:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,499:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,501:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,501:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,502:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:04:02,503:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,504:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,505:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:04:02,505:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,506:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,507:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,508:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:04:02,509:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,515:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,516:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:02,517:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:04:02,518:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:04:03,483:INFO:Calculating mean and std
2023-08-22 13:04:03,483:INFO:Creating metrics dataframe
2023-08-22 13:04:03,579:INFO:Uploading results into container
2023-08-22 13:04:03,580:INFO:Uploading model into container now
2023-08-22 13:04:03,580:INFO:_master_model_container: 15
2023-08-22 13:04:03,580:INFO:_display_container: 2
2023-08-22 13:04:03,580:INFO:DummyClassifier(constant=None, random_state=2512, strategy='prior')
2023-08-22 13:04:03,580:INFO:create_model() successfully completed......................................
2023-08-22 13:04:03,643:INFO:SubProcess create_model() end ==================================
2023-08-22 13:04:03,643:INFO:Creating metrics dataframe
2023-08-22 13:04:03,658:INFO:Initializing create_model()
2023-08-22 13:04:03,658:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF2A371F0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2512), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:04:03,658:INFO:Checking exceptions
2023-08-22 13:04:03,660:INFO:Importing libraries
2023-08-22 13:04:03,660:INFO:Copying training dataset
2023-08-22 13:04:03,663:INFO:Defining folds
2023-08-22 13:04:03,663:INFO:Declaring metric variables
2023-08-22 13:04:03,664:INFO:Importing untrained model
2023-08-22 13:04:03,664:INFO:Declaring custom model
2023-08-22 13:04:03,664:INFO:Ada Boost Classifier Imported successfully
2023-08-22 13:04:03,665:INFO:Cross validation set to False
2023-08-22 13:04:03,665:INFO:Fitting Model
2023-08-22 13:04:03,836:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2512)
2023-08-22 13:04:03,836:INFO:create_model() successfully completed......................................
2023-08-22 13:04:03,922:INFO:_master_model_container: 15
2023-08-22 13:04:03,922:INFO:_display_container: 2
2023-08-22 13:04:03,922:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2512)
2023-08-22 13:04:03,922:INFO:compare_models() successfully completed......................................
2023-08-22 13:08:10,121:INFO:PyCaret ClassificationExperiment
2023-08-22 13:08:10,121:INFO:Logging name: clf-default-name
2023-08-22 13:08:10,121:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-08-22 13:08:10,121:INFO:version 3.0.4
2023-08-22 13:08:10,121:INFO:Initializing setup()
2023-08-22 13:08:10,121:INFO:self.USI: 3844
2023-08-22 13:08:10,121:INFO:self._variable_keys: {'exp_name_log', 'log_plots_param', 'idx', 'logging_param', 'data', 'fold_shuffle_param', 'y_test', 'gpu_n_jobs_param', 'pipeline', 'fold_groups_param', 'target_param', 'exp_id', 'gpu_param', '_available_plots', 'X_train', 'fix_imbalance', 'USI', 'fold_generator', 'html_param', '_ml_usecase', 'X_test', 'n_jobs_param', 'memory', 'y', 'y_train', 'X', 'is_multiclass', 'seed'}
2023-08-22 13:08:10,121:INFO:Checking environment
2023-08-22 13:08:10,121:INFO:python_version: 3.10.11
2023-08-22 13:08:10,121:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2023-08-22 13:08:10,121:INFO:machine: AMD64
2023-08-22 13:08:10,121:INFO:platform: Windows-10-10.0.22621-SP0
2023-08-22 13:08:10,126:INFO:Memory: svmem(total=34014814208, available=10615390208, percent=68.8, used=23399424000, free=10615390208)
2023-08-22 13:08:10,126:INFO:Physical Core: 14
2023-08-22 13:08:10,126:INFO:Logical Core: 20
2023-08-22 13:08:10,126:INFO:Checking libraries
2023-08-22 13:08:10,126:INFO:System:
2023-08-22 13:08:10,126:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2023-08-22 13:08:10,126:INFO:executable: c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\python.exe
2023-08-22 13:08:10,126:INFO:   machine: Windows-10-10.0.22621-SP0
2023-08-22 13:08:10,126:INFO:PyCaret required dependencies:
2023-08-22 13:08:10,126:INFO:                 pip: 23.2.1
2023-08-22 13:08:10,126:INFO:          setuptools: 65.5.0
2023-08-22 13:08:10,126:INFO:             pycaret: 3.0.4
2023-08-22 13:08:10,127:INFO:             IPython: 8.14.0
2023-08-22 13:08:10,127:INFO:          ipywidgets: 8.1.0
2023-08-22 13:08:10,127:INFO:                tqdm: 4.66.1
2023-08-22 13:08:10,127:INFO:               numpy: 1.23.5
2023-08-22 13:08:10,127:INFO:              pandas: 1.5.3
2023-08-22 13:08:10,127:INFO:              jinja2: 3.1.2
2023-08-22 13:08:10,127:INFO:               scipy: 1.11.2
2023-08-22 13:08:10,127:INFO:              joblib: 1.3.2
2023-08-22 13:08:10,127:INFO:             sklearn: 1.2.2
2023-08-22 13:08:10,127:INFO:                pyod: 1.1.0
2023-08-22 13:08:10,127:INFO:            imblearn: 0.11.0
2023-08-22 13:08:10,127:INFO:   category_encoders: 2.6.2
2023-08-22 13:08:10,127:INFO:            lightgbm: 4.0.0
2023-08-22 13:08:10,127:INFO:               numba: 0.57.1
2023-08-22 13:08:10,127:INFO:            requests: 2.31.0
2023-08-22 13:08:10,127:INFO:          matplotlib: 3.7.2
2023-08-22 13:08:10,127:INFO:          scikitplot: 0.3.7
2023-08-22 13:08:10,127:INFO:         yellowbrick: 1.5
2023-08-22 13:08:10,127:INFO:              plotly: 5.16.1
2023-08-22 13:08:10,127:INFO:    plotly-resampler: Not installed
2023-08-22 13:08:10,127:INFO:             kaleido: 0.2.1
2023-08-22 13:08:10,127:INFO:           schemdraw: 0.15
2023-08-22 13:08:10,127:INFO:         statsmodels: 0.14.0
2023-08-22 13:08:10,127:INFO:              sktime: 0.22.0
2023-08-22 13:08:10,127:INFO:               tbats: 1.1.3
2023-08-22 13:08:10,127:INFO:            pmdarima: 2.0.3
2023-08-22 13:08:10,127:INFO:              psutil: 5.9.5
2023-08-22 13:08:10,127:INFO:          markupsafe: 2.1.3
2023-08-22 13:08:10,127:INFO:             pickle5: Not installed
2023-08-22 13:08:10,127:INFO:         cloudpickle: 2.2.1
2023-08-22 13:08:10,127:INFO:         deprecation: 2.1.0
2023-08-22 13:08:10,127:INFO:              xxhash: 3.3.0
2023-08-22 13:08:10,127:INFO:           wurlitzer: Not installed
2023-08-22 13:08:10,127:INFO:PyCaret optional dependencies:
2023-08-22 13:08:10,127:INFO:                shap: Not installed
2023-08-22 13:08:10,127:INFO:           interpret: Not installed
2023-08-22 13:08:10,127:INFO:                umap: Not installed
2023-08-22 13:08:10,127:INFO:    pandas_profiling: 4.5.1
2023-08-22 13:08:10,127:INFO:  explainerdashboard: Not installed
2023-08-22 13:08:10,127:INFO:             autoviz: Not installed
2023-08-22 13:08:10,127:INFO:           fairlearn: Not installed
2023-08-22 13:08:10,127:INFO:          deepchecks: Not installed
2023-08-22 13:08:10,127:INFO:             xgboost: 1.7.6
2023-08-22 13:08:10,127:INFO:            catboost: Not installed
2023-08-22 13:08:10,127:INFO:              kmodes: Not installed
2023-08-22 13:08:10,127:INFO:             mlxtend: Not installed
2023-08-22 13:08:10,127:INFO:       statsforecast: Not installed
2023-08-22 13:08:10,127:INFO:        tune_sklearn: Not installed
2023-08-22 13:08:10,127:INFO:                 ray: Not installed
2023-08-22 13:08:10,127:INFO:            hyperopt: Not installed
2023-08-22 13:08:10,127:INFO:              optuna: Not installed
2023-08-22 13:08:10,128:INFO:               skopt: Not installed
2023-08-22 13:08:10,128:INFO:              mlflow: Not installed
2023-08-22 13:08:10,128:INFO:              gradio: Not installed
2023-08-22 13:08:10,128:INFO:             fastapi: Not installed
2023-08-22 13:08:10,128:INFO:             uvicorn: Not installed
2023-08-22 13:08:10,128:INFO:              m2cgen: Not installed
2023-08-22 13:08:10,128:INFO:           evidently: Not installed
2023-08-22 13:08:10,128:INFO:               fugue: Not installed
2023-08-22 13:08:10,128:INFO:           streamlit: Not installed
2023-08-22 13:08:10,128:INFO:             prophet: Not installed
2023-08-22 13:08:10,128:INFO:None
2023-08-22 13:08:10,128:INFO:Set up data.
2023-08-22 13:08:47,314:INFO:PyCaret ClassificationExperiment
2023-08-22 13:08:47,314:INFO:Logging name: clf-default-name
2023-08-22 13:08:47,314:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-08-22 13:08:47,315:INFO:version 3.0.4
2023-08-22 13:08:47,315:INFO:Initializing setup()
2023-08-22 13:08:47,315:INFO:self.USI: 05f2
2023-08-22 13:08:47,315:INFO:self._variable_keys: {'exp_name_log', 'log_plots_param', 'idx', 'logging_param', 'data', 'fold_shuffle_param', 'y_test', 'gpu_n_jobs_param', 'pipeline', 'fold_groups_param', 'target_param', 'exp_id', 'gpu_param', '_available_plots', 'X_train', 'fix_imbalance', 'USI', 'fold_generator', 'html_param', '_ml_usecase', 'X_test', 'n_jobs_param', 'memory', 'y', 'y_train', 'X', 'is_multiclass', 'seed'}
2023-08-22 13:08:47,315:INFO:Checking environment
2023-08-22 13:08:47,315:INFO:python_version: 3.10.11
2023-08-22 13:08:47,315:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2023-08-22 13:08:47,315:INFO:machine: AMD64
2023-08-22 13:08:47,315:INFO:platform: Windows-10-10.0.22621-SP0
2023-08-22 13:08:47,319:INFO:Memory: svmem(total=34014814208, available=10978516992, percent=67.7, used=23036297216, free=10978516992)
2023-08-22 13:08:47,320:INFO:Physical Core: 14
2023-08-22 13:08:47,320:INFO:Logical Core: 20
2023-08-22 13:08:47,320:INFO:Checking libraries
2023-08-22 13:08:47,320:INFO:System:
2023-08-22 13:08:47,320:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2023-08-22 13:08:47,320:INFO:executable: c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\python.exe
2023-08-22 13:08:47,320:INFO:   machine: Windows-10-10.0.22621-SP0
2023-08-22 13:08:47,320:INFO:PyCaret required dependencies:
2023-08-22 13:08:47,320:INFO:                 pip: 23.2.1
2023-08-22 13:08:47,320:INFO:          setuptools: 65.5.0
2023-08-22 13:08:47,320:INFO:             pycaret: 3.0.4
2023-08-22 13:08:47,320:INFO:             IPython: 8.14.0
2023-08-22 13:08:47,320:INFO:          ipywidgets: 8.1.0
2023-08-22 13:08:47,320:INFO:                tqdm: 4.66.1
2023-08-22 13:08:47,320:INFO:               numpy: 1.23.5
2023-08-22 13:08:47,320:INFO:              pandas: 1.5.3
2023-08-22 13:08:47,320:INFO:              jinja2: 3.1.2
2023-08-22 13:08:47,320:INFO:               scipy: 1.11.2
2023-08-22 13:08:47,320:INFO:              joblib: 1.3.2
2023-08-22 13:08:47,320:INFO:             sklearn: 1.2.2
2023-08-22 13:08:47,320:INFO:                pyod: 1.1.0
2023-08-22 13:08:47,320:INFO:            imblearn: 0.11.0
2023-08-22 13:08:47,320:INFO:   category_encoders: 2.6.2
2023-08-22 13:08:47,320:INFO:            lightgbm: 4.0.0
2023-08-22 13:08:47,320:INFO:               numba: 0.57.1
2023-08-22 13:08:47,320:INFO:            requests: 2.31.0
2023-08-22 13:08:47,320:INFO:          matplotlib: 3.7.2
2023-08-22 13:08:47,320:INFO:          scikitplot: 0.3.7
2023-08-22 13:08:47,320:INFO:         yellowbrick: 1.5
2023-08-22 13:08:47,320:INFO:              plotly: 5.16.1
2023-08-22 13:08:47,320:INFO:    plotly-resampler: Not installed
2023-08-22 13:08:47,320:INFO:             kaleido: 0.2.1
2023-08-22 13:08:47,320:INFO:           schemdraw: 0.15
2023-08-22 13:08:47,320:INFO:         statsmodels: 0.14.0
2023-08-22 13:08:47,320:INFO:              sktime: 0.22.0
2023-08-22 13:08:47,320:INFO:               tbats: 1.1.3
2023-08-22 13:08:47,320:INFO:            pmdarima: 2.0.3
2023-08-22 13:08:47,320:INFO:              psutil: 5.9.5
2023-08-22 13:08:47,320:INFO:          markupsafe: 2.1.3
2023-08-22 13:08:47,320:INFO:             pickle5: Not installed
2023-08-22 13:08:47,320:INFO:         cloudpickle: 2.2.1
2023-08-22 13:08:47,320:INFO:         deprecation: 2.1.0
2023-08-22 13:08:47,320:INFO:              xxhash: 3.3.0
2023-08-22 13:08:47,320:INFO:           wurlitzer: Not installed
2023-08-22 13:08:47,320:INFO:PyCaret optional dependencies:
2023-08-22 13:08:47,321:INFO:                shap: Not installed
2023-08-22 13:08:47,321:INFO:           interpret: Not installed
2023-08-22 13:08:47,321:INFO:                umap: Not installed
2023-08-22 13:08:47,321:INFO:    pandas_profiling: 4.5.1
2023-08-22 13:08:47,321:INFO:  explainerdashboard: Not installed
2023-08-22 13:08:47,321:INFO:             autoviz: Not installed
2023-08-22 13:08:47,321:INFO:           fairlearn: Not installed
2023-08-22 13:08:47,321:INFO:          deepchecks: Not installed
2023-08-22 13:08:47,321:INFO:             xgboost: 1.7.6
2023-08-22 13:08:47,321:INFO:            catboost: Not installed
2023-08-22 13:08:47,321:INFO:              kmodes: Not installed
2023-08-22 13:08:47,321:INFO:             mlxtend: Not installed
2023-08-22 13:08:47,321:INFO:       statsforecast: Not installed
2023-08-22 13:08:47,321:INFO:        tune_sklearn: Not installed
2023-08-22 13:08:47,321:INFO:                 ray: Not installed
2023-08-22 13:08:47,321:INFO:            hyperopt: Not installed
2023-08-22 13:08:47,321:INFO:              optuna: Not installed
2023-08-22 13:08:47,321:INFO:               skopt: Not installed
2023-08-22 13:08:47,321:INFO:              mlflow: Not installed
2023-08-22 13:08:47,321:INFO:              gradio: Not installed
2023-08-22 13:08:47,321:INFO:             fastapi: Not installed
2023-08-22 13:08:47,321:INFO:             uvicorn: Not installed
2023-08-22 13:08:47,321:INFO:              m2cgen: Not installed
2023-08-22 13:08:47,321:INFO:           evidently: Not installed
2023-08-22 13:08:47,321:INFO:               fugue: Not installed
2023-08-22 13:08:47,321:INFO:           streamlit: Not installed
2023-08-22 13:08:47,321:INFO:             prophet: Not installed
2023-08-22 13:08:47,321:INFO:None
2023-08-22 13:08:47,321:INFO:Set up data.
2023-08-22 13:08:47,327:INFO:Set up train/test split.
2023-08-22 13:08:47,331:INFO:Set up index.
2023-08-22 13:08:47,331:INFO:Set up folding strategy.
2023-08-22 13:08:47,331:INFO:Assigning column types.
2023-08-22 13:08:47,333:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-22 13:08:47,359:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 13:08:47,359:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-22 13:08:47,376:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:08:47,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:08:47,404:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 13:08:47,405:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-22 13:08:47,421:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:08:47,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:08:47,423:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-22 13:08:47,449:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-22 13:08:47,465:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:08:47,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:08:47,493:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-08-22 13:08:47,510:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:08:47,511:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:08:47,511:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-08-22 13:08:47,553:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:08:47,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:08:47,598:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:08:47,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:08:47,600:INFO:Preparing preprocessing pipeline...
2023-08-22 13:08:47,601:INFO:Set up label encoding.
2023-08-22 13:08:47,601:INFO:Set up simple imputation.
2023-08-22 13:08:47,603:INFO:Set up encoding of categorical features.
2023-08-22 13:08:47,603:INFO:Set up feature normalization.
2023-08-22 13:08:47,692:INFO:Finished creating preprocessing pipeline.
2023-08-22 13:08:47,696:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\VONHIN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['wt', 'forty', 'bench', 'vertical',
                                             'broad_jump', 'cone', 'shuttle'],
                                    transformer=SimpleImputer(add_indi...
                                    include=['player_name', 'school'],
                                    transformer=TargetEncoder(cols=['player_name',
                                                                    'school'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-08-22 13:08:47,696:INFO:Creating final display dataframe.
2023-08-22 13:08:47,915:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16                    Normalize   
17             Normalize method   
18               Fold Generator   
19                  Fold Number   
20                     CPU Jobs   
21                      Use GPU   
22               Log Experiment   
23              Experiment Name   
24                          USI   

                                                Value  
0                                                4918  
1                                         draft_round  
2                                          Multiclass  
3   1.0: 0, 2.0: 1, 3.0: 2, 4.0: 3, 5.0: 4, 6.0: 5...  
4                                          (2110, 12)  
5                                          (2110, 48)  
6                                          (1477, 48)  
7                                           (633, 48)  
8                                                   7  
9                                                   4  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16                                               True  
17                                             zscore  
18                                    StratifiedKFold  
19                                                 10  
20                                                 -1  
21                                              False  
22                                              False  
23                                   clf-default-name  
24                                               05f2  
2023-08-22 13:08:47,962:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:08:47,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:08:48,006:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:08:48,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:08:48,009:INFO:setup() successfully completed in 0.76s...............
2023-08-22 13:08:54,442:INFO:Initializing compare_models()
2023-08-22 13:08:54,442:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-08-22 13:08:54,442:INFO:Checking exceptions
2023-08-22 13:08:54,445:INFO:Preparing display monitor
2023-08-22 13:08:54,463:INFO:Initializing Logistic Regression
2023-08-22 13:08:54,464:INFO:Total runtime is 0.0 minutes
2023-08-22 13:08:54,467:INFO:SubProcess create_model() called ==================================
2023-08-22 13:08:54,467:INFO:Initializing create_model()
2023-08-22 13:08:54,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:08:54,467:INFO:Checking exceptions
2023-08-22 13:08:54,468:INFO:Importing libraries
2023-08-22 13:08:54,468:INFO:Copying training dataset
2023-08-22 13:08:54,472:INFO:Defining folds
2023-08-22 13:08:54,472:INFO:Declaring metric variables
2023-08-22 13:08:54,476:INFO:Importing untrained model
2023-08-22 13:08:54,479:INFO:Logistic Regression Imported successfully
2023-08-22 13:08:54,483:INFO:Starting cross validation
2023-08-22 13:08:54,484:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:08:54,904:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,905:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,906:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:54,906:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,911:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,912:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,913:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:54,914:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,914:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,914:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:54,915:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,953:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,954:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,955:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:54,955:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,959:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,960:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,960:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:54,961:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,961:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,962:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,963:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:54,963:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,974:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,975:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,976:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:54,976:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,978:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,979:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:54,980:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:54,980:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:55,006:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:55,007:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:55,007:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:55,008:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:55,016:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:55,018:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:55,018:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:55,019:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:55,687:INFO:Calculating mean and std
2023-08-22 13:08:55,688:INFO:Creating metrics dataframe
2023-08-22 13:08:55,787:INFO:Uploading results into container
2023-08-22 13:08:55,788:INFO:Uploading model into container now
2023-08-22 13:08:55,788:INFO:_master_model_container: 1
2023-08-22 13:08:55,788:INFO:_display_container: 2
2023-08-22 13:08:55,789:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4918, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-08-22 13:08:55,789:INFO:create_model() successfully completed......................................
2023-08-22 13:08:55,917:INFO:SubProcess create_model() end ==================================
2023-08-22 13:08:55,918:INFO:Creating metrics dataframe
2023-08-22 13:08:55,924:INFO:Initializing K Neighbors Classifier
2023-08-22 13:08:55,924:INFO:Total runtime is 0.024354978402455648 minutes
2023-08-22 13:08:55,926:INFO:SubProcess create_model() called ==================================
2023-08-22 13:08:55,926:INFO:Initializing create_model()
2023-08-22 13:08:55,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:08:55,926:INFO:Checking exceptions
2023-08-22 13:08:55,926:INFO:Importing libraries
2023-08-22 13:08:55,926:INFO:Copying training dataset
2023-08-22 13:08:55,930:INFO:Defining folds
2023-08-22 13:08:55,930:INFO:Declaring metric variables
2023-08-22 13:08:55,933:INFO:Importing untrained model
2023-08-22 13:08:55,935:INFO:K Neighbors Classifier Imported successfully
2023-08-22 13:08:55,939:INFO:Starting cross validation
2023-08-22 13:08:55,940:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:08:56,365:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,366:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,366:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,374:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,376:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,378:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,379:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,379:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,380:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,387:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,389:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,391:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,411:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,412:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,413:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,413:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,414:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,415:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,416:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,417:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,418:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:56,418:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,419:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,420:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,420:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,421:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,421:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,422:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,427:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,428:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:56,429:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,157:INFO:Calculating mean and std
2023-08-22 13:08:57,158:INFO:Creating metrics dataframe
2023-08-22 13:08:57,251:INFO:Uploading results into container
2023-08-22 13:08:57,252:INFO:Uploading model into container now
2023-08-22 13:08:57,252:INFO:_master_model_container: 2
2023-08-22 13:08:57,252:INFO:_display_container: 2
2023-08-22 13:08:57,252:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-08-22 13:08:57,252:INFO:create_model() successfully completed......................................
2023-08-22 13:08:57,316:INFO:SubProcess create_model() end ==================================
2023-08-22 13:08:57,316:INFO:Creating metrics dataframe
2023-08-22 13:08:57,324:INFO:Initializing Naive Bayes
2023-08-22 13:08:57,324:INFO:Total runtime is 0.047678760687510174 minutes
2023-08-22 13:08:57,326:INFO:SubProcess create_model() called ==================================
2023-08-22 13:08:57,327:INFO:Initializing create_model()
2023-08-22 13:08:57,327:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:08:57,327:INFO:Checking exceptions
2023-08-22 13:08:57,327:INFO:Importing libraries
2023-08-22 13:08:57,327:INFO:Copying training dataset
2023-08-22 13:08:57,329:INFO:Defining folds
2023-08-22 13:08:57,329:INFO:Declaring metric variables
2023-08-22 13:08:57,332:INFO:Importing untrained model
2023-08-22 13:08:57,334:INFO:Naive Bayes Imported successfully
2023-08-22 13:08:57,340:INFO:Starting cross validation
2023-08-22 13:08:57,341:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:08:57,580:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,581:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,582:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:57,582:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,589:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,590:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,591:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:57,591:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,609:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,610:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,610:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:57,611:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,622:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,624:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,624:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:57,625:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,628:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,630:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,631:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:57,631:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,635:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,636:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,636:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:57,637:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,637:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,638:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,639:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:57,639:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,643:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,644:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,645:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:57,645:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,666:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,667:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,667:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:57,667:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,675:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,676:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:57,676:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:57,677:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,391:INFO:Calculating mean and std
2023-08-22 13:08:58,392:INFO:Creating metrics dataframe
2023-08-22 13:08:58,489:INFO:Uploading results into container
2023-08-22 13:08:58,489:INFO:Uploading model into container now
2023-08-22 13:08:58,489:INFO:_master_model_container: 3
2023-08-22 13:08:58,489:INFO:_display_container: 2
2023-08-22 13:08:58,490:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-08-22 13:08:58,490:INFO:create_model() successfully completed......................................
2023-08-22 13:08:58,552:INFO:SubProcess create_model() end ==================================
2023-08-22 13:08:58,552:INFO:Creating metrics dataframe
2023-08-22 13:08:58,558:INFO:Initializing Decision Tree Classifier
2023-08-22 13:08:58,559:INFO:Total runtime is 0.06827402114868164 minutes
2023-08-22 13:08:58,561:INFO:SubProcess create_model() called ==================================
2023-08-22 13:08:58,562:INFO:Initializing create_model()
2023-08-22 13:08:58,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:08:58,562:INFO:Checking exceptions
2023-08-22 13:08:58,562:INFO:Importing libraries
2023-08-22 13:08:58,562:INFO:Copying training dataset
2023-08-22 13:08:58,564:INFO:Defining folds
2023-08-22 13:08:58,565:INFO:Declaring metric variables
2023-08-22 13:08:58,568:INFO:Importing untrained model
2023-08-22 13:08:58,570:INFO:Decision Tree Classifier Imported successfully
2023-08-22 13:08:58,575:INFO:Starting cross validation
2023-08-22 13:08:58,576:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:08:58,803:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,804:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,805:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:58,805:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,807:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,808:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,809:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:58,809:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,826:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,826:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,827:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:58,827:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,829:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,831:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,831:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:58,832:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,840:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,841:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,842:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:58,842:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,853:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,855:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,856:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:58,856:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,859:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,860:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,860:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:58,861:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,871:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,872:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,873:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:58,873:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,893:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,894:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,895:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:58,895:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,914:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,915:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:58,916:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:58,916:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:59,593:INFO:Calculating mean and std
2023-08-22 13:08:59,594:INFO:Creating metrics dataframe
2023-08-22 13:08:59,690:INFO:Uploading results into container
2023-08-22 13:08:59,690:INFO:Uploading model into container now
2023-08-22 13:08:59,690:INFO:_master_model_container: 4
2023-08-22 13:08:59,691:INFO:_display_container: 2
2023-08-22 13:08:59,691:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4918, splitter='best')
2023-08-22 13:08:59,691:INFO:create_model() successfully completed......................................
2023-08-22 13:08:59,753:INFO:SubProcess create_model() end ==================================
2023-08-22 13:08:59,753:INFO:Creating metrics dataframe
2023-08-22 13:08:59,761:INFO:Initializing SVM - Linear Kernel
2023-08-22 13:08:59,761:INFO:Total runtime is 0.08829552332560221 minutes
2023-08-22 13:08:59,764:INFO:SubProcess create_model() called ==================================
2023-08-22 13:08:59,764:INFO:Initializing create_model()
2023-08-22 13:08:59,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:08:59,764:INFO:Checking exceptions
2023-08-22 13:08:59,764:INFO:Importing libraries
2023-08-22 13:08:59,764:INFO:Copying training dataset
2023-08-22 13:08:59,767:INFO:Defining folds
2023-08-22 13:08:59,767:INFO:Declaring metric variables
2023-08-22 13:08:59,769:INFO:Importing untrained model
2023-08-22 13:08:59,772:INFO:SVM - Linear Kernel Imported successfully
2023-08-22 13:08:59,776:INFO:Starting cross validation
2023-08-22 13:08:59,777:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:08:59,992:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:08:59,992:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:59,993:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:08:59,994:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:08:59,994:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,015:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:09:00,015:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,017:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,020:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:00,021:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,021:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:09:00,022:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,024:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,025:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:00,026:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,030:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:09:00,030:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,032:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,033:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:00,034:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,045:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:09:00,046:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,048:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,048:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:09:00,049:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,049:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,050:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,050:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:00,051:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,058:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:09:00,058:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,059:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:09:00,059:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,060:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,060:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:00,060:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,061:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,061:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:00,061:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:09:00,062:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,062:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,063:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,064:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:00,064:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,066:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-08-22 13:09:00,066:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,068:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,068:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:00,069:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:00,781:INFO:Calculating mean and std
2023-08-22 13:09:00,782:INFO:Creating metrics dataframe
2023-08-22 13:09:00,890:INFO:Uploading results into container
2023-08-22 13:09:00,891:INFO:Uploading model into container now
2023-08-22 13:09:00,891:INFO:_master_model_container: 5
2023-08-22 13:09:00,891:INFO:_display_container: 2
2023-08-22 13:09:00,892:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4918, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-08-22 13:09:00,892:INFO:create_model() successfully completed......................................
2023-08-22 13:09:00,955:INFO:SubProcess create_model() end ==================================
2023-08-22 13:09:00,955:INFO:Creating metrics dataframe
2023-08-22 13:09:00,964:INFO:Initializing Ridge Classifier
2023-08-22 13:09:00,964:INFO:Total runtime is 0.10835350354512532 minutes
2023-08-22 13:09:00,967:INFO:SubProcess create_model() called ==================================
2023-08-22 13:09:00,967:INFO:Initializing create_model()
2023-08-22 13:09:00,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:09:00,967:INFO:Checking exceptions
2023-08-22 13:09:00,967:INFO:Importing libraries
2023-08-22 13:09:00,967:INFO:Copying training dataset
2023-08-22 13:09:00,970:INFO:Defining folds
2023-08-22 13:09:00,970:INFO:Declaring metric variables
2023-08-22 13:09:00,972:INFO:Importing untrained model
2023-08-22 13:09:00,974:INFO:Ridge Classifier Imported successfully
2023-08-22 13:09:00,979:INFO:Starting cross validation
2023-08-22 13:09:00,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:09:01,150:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:09:01,150:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,151:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,152:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,157:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:09:01,158:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,159:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:09:01,159:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,160:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:09:01,160:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,160:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,160:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,161:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:01,161:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,161:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,162:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,162:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,184:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:09:01,185:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,186:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,187:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,192:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:09:01,192:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,193:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,194:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,203:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:09:01,203:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,204:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,205:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,224:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:09:01,225:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,226:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,227:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,229:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:09:01,229:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-08-22 13:09:01,229:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,230:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,230:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,230:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,231:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,231:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:01,951:INFO:Calculating mean and std
2023-08-22 13:09:01,952:INFO:Creating metrics dataframe
2023-08-22 13:09:02,050:INFO:Uploading results into container
2023-08-22 13:09:02,050:INFO:Uploading model into container now
2023-08-22 13:09:02,051:INFO:_master_model_container: 6
2023-08-22 13:09:02,051:INFO:_display_container: 2
2023-08-22 13:09:02,051:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4918, solver='auto',
                tol=0.0001)
2023-08-22 13:09:02,051:INFO:create_model() successfully completed......................................
2023-08-22 13:09:02,114:INFO:SubProcess create_model() end ==================================
2023-08-22 13:09:02,114:INFO:Creating metrics dataframe
2023-08-22 13:09:02,121:INFO:Initializing Random Forest Classifier
2023-08-22 13:09:02,121:INFO:Total runtime is 0.12764244079589843 minutes
2023-08-22 13:09:02,123:INFO:SubProcess create_model() called ==================================
2023-08-22 13:09:02,124:INFO:Initializing create_model()
2023-08-22 13:09:02,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:09:02,124:INFO:Checking exceptions
2023-08-22 13:09:02,124:INFO:Importing libraries
2023-08-22 13:09:02,124:INFO:Copying training dataset
2023-08-22 13:09:02,128:INFO:Defining folds
2023-08-22 13:09:02,128:INFO:Declaring metric variables
2023-08-22 13:09:02,131:INFO:Importing untrained model
2023-08-22 13:09:02,134:INFO:Random Forest Classifier Imported successfully
2023-08-22 13:09:02,137:INFO:Starting cross validation
2023-08-22 13:09:02,138:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:09:02,859:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,860:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,860:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:02,861:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,874:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,874:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,874:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,875:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,875:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,875:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:02,875:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:02,875:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:02,875:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,875:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,875:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,877:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,877:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,879:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,879:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,880:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:02,880:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:02,881:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,881:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,920:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,921:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,921:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:02,922:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,968:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,969:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:02,969:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:02,970:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:03,016:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:03,017:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:03,018:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:03,018:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:03,047:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:03,048:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:03,049:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:03,049:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:03,618:INFO:Calculating mean and std
2023-08-22 13:09:03,618:INFO:Creating metrics dataframe
2023-08-22 13:09:03,726:INFO:Uploading results into container
2023-08-22 13:09:03,727:INFO:Uploading model into container now
2023-08-22 13:09:03,727:INFO:_master_model_container: 7
2023-08-22 13:09:03,729:INFO:_display_container: 2
2023-08-22 13:09:03,729:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4918, verbose=0, warm_start=False)
2023-08-22 13:09:03,729:INFO:create_model() successfully completed......................................
2023-08-22 13:09:03,815:INFO:SubProcess create_model() end ==================================
2023-08-22 13:09:03,815:INFO:Creating metrics dataframe
2023-08-22 13:09:03,826:INFO:Initializing Quadratic Discriminant Analysis
2023-08-22 13:09:03,826:INFO:Total runtime is 0.15604672431945799 minutes
2023-08-22 13:09:03,831:INFO:SubProcess create_model() called ==================================
2023-08-22 13:09:03,832:INFO:Initializing create_model()
2023-08-22 13:09:03,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:09:03,832:INFO:Checking exceptions
2023-08-22 13:09:03,832:INFO:Importing libraries
2023-08-22 13:09:03,832:INFO:Copying training dataset
2023-08-22 13:09:03,837:INFO:Defining folds
2023-08-22 13:09:03,838:INFO:Declaring metric variables
2023-08-22 13:09:03,842:INFO:Importing untrained model
2023-08-22 13:09:03,845:INFO:Quadratic Discriminant Analysis Imported successfully
2023-08-22 13:09:03,855:INFO:Starting cross validation
2023-08-22 13:09:03,856:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:09:04,061:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 13:09:04,088:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 13:09:04,092:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 13:09:04,111:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 13:09:04,121:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 13:09:04,127:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 13:09:04,161:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 13:09:04,163:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 13:09:04,165:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 13:09:04,250:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-08-22 13:09:04,276:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,278:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,279:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:04,279:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,290:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,292:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,293:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:04,293:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,334:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,335:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,336:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:04,337:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,346:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,349:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,350:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,351:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,352:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:04,352:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,352:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:04,354:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,362:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,366:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,367:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:04,367:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,369:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,371:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,371:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,371:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:04,372:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,373:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,373:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:04,374:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,398:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,399:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,400:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:04,401:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,459:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,461:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:04,461:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:04,463:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:05,741:INFO:Calculating mean and std
2023-08-22 13:09:05,744:INFO:Creating metrics dataframe
2023-08-22 13:09:05,925:INFO:Uploading results into container
2023-08-22 13:09:05,925:INFO:Uploading model into container now
2023-08-22 13:09:05,926:INFO:_master_model_container: 8
2023-08-22 13:09:05,926:INFO:_display_container: 2
2023-08-22 13:09:05,926:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-08-22 13:09:05,926:INFO:create_model() successfully completed......................................
2023-08-22 13:09:06,002:INFO:SubProcess create_model() end ==================================
2023-08-22 13:09:06,003:INFO:Creating metrics dataframe
2023-08-22 13:09:06,013:INFO:Initializing Ada Boost Classifier
2023-08-22 13:09:06,013:INFO:Total runtime is 0.1925076603889465 minutes
2023-08-22 13:09:06,016:INFO:SubProcess create_model() called ==================================
2023-08-22 13:09:06,017:INFO:Initializing create_model()
2023-08-22 13:09:06,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:09:06,017:INFO:Checking exceptions
2023-08-22 13:09:06,018:INFO:Importing libraries
2023-08-22 13:09:06,018:INFO:Copying training dataset
2023-08-22 13:09:06,022:INFO:Defining folds
2023-08-22 13:09:06,022:INFO:Declaring metric variables
2023-08-22 13:09:06,025:INFO:Importing untrained model
2023-08-22 13:09:06,028:INFO:Ada Boost Classifier Imported successfully
2023-08-22 13:09:06,039:INFO:Starting cross validation
2023-08-22 13:09:06,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:09:06,800:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,801:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,802:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:06,802:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,807:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,809:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,810:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:06,811:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,819:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,820:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,821:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:06,821:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,828:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,830:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,831:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:06,832:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,838:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,839:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,839:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,839:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:06,840:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,840:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,840:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:06,841:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,848:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,849:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,849:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:06,850:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,852:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,853:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,853:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,854:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,854:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:06,854:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:06,854:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,855:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,887:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,888:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:06,889:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:06,889:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:07,668:INFO:Calculating mean and std
2023-08-22 13:09:07,669:INFO:Creating metrics dataframe
2023-08-22 13:09:07,770:INFO:Uploading results into container
2023-08-22 13:09:07,771:INFO:Uploading model into container now
2023-08-22 13:09:07,771:INFO:_master_model_container: 9
2023-08-22 13:09:07,772:INFO:_display_container: 2
2023-08-22 13:09:07,772:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4918)
2023-08-22 13:09:07,772:INFO:create_model() successfully completed......................................
2023-08-22 13:09:07,828:INFO:SubProcess create_model() end ==================================
2023-08-22 13:09:07,828:INFO:Creating metrics dataframe
2023-08-22 13:09:07,836:INFO:Initializing Gradient Boosting Classifier
2023-08-22 13:09:07,836:INFO:Total runtime is 0.22289025783538816 minutes
2023-08-22 13:09:07,839:INFO:SubProcess create_model() called ==================================
2023-08-22 13:09:07,839:INFO:Initializing create_model()
2023-08-22 13:09:07,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:09:07,839:INFO:Checking exceptions
2023-08-22 13:09:07,840:INFO:Importing libraries
2023-08-22 13:09:07,840:INFO:Copying training dataset
2023-08-22 13:09:07,842:INFO:Defining folds
2023-08-22 13:09:07,842:INFO:Declaring metric variables
2023-08-22 13:09:07,845:INFO:Importing untrained model
2023-08-22 13:09:07,847:INFO:Gradient Boosting Classifier Imported successfully
2023-08-22 13:09:07,851:INFO:Starting cross validation
2023-08-22 13:09:07,853:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:09:10,764:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:10,766:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:10,766:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:10,767:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:10,923:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:10,924:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:10,925:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:10,925:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:10,962:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:10,964:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:10,965:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:10,965:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:10,982:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:10,984:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:10,985:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:10,985:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,043:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,047:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,049:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:11,051:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,170:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,172:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,172:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:11,173:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,192:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,193:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,194:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:11,194:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,196:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,197:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,198:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:11,199:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,240:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,242:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,242:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:11,243:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,337:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,338:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,339:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:11,339:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:11,977:INFO:Calculating mean and std
2023-08-22 13:09:11,978:INFO:Creating metrics dataframe
2023-08-22 13:09:12,176:INFO:Uploading results into container
2023-08-22 13:09:12,176:INFO:Uploading model into container now
2023-08-22 13:09:12,177:INFO:_master_model_container: 10
2023-08-22 13:09:12,177:INFO:_display_container: 2
2023-08-22 13:09:12,177:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4918, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-08-22 13:09:12,177:INFO:create_model() successfully completed......................................
2023-08-22 13:09:12,249:INFO:SubProcess create_model() end ==================================
2023-08-22 13:09:12,250:INFO:Creating metrics dataframe
2023-08-22 13:09:12,262:INFO:Initializing Linear Discriminant Analysis
2023-08-22 13:09:12,262:INFO:Total runtime is 0.2966605385144551 minutes
2023-08-22 13:09:12,267:INFO:SubProcess create_model() called ==================================
2023-08-22 13:09:12,267:INFO:Initializing create_model()
2023-08-22 13:09:12,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:09:12,268:INFO:Checking exceptions
2023-08-22 13:09:12,268:INFO:Importing libraries
2023-08-22 13:09:12,268:INFO:Copying training dataset
2023-08-22 13:09:12,273:INFO:Defining folds
2023-08-22 13:09:12,273:INFO:Declaring metric variables
2023-08-22 13:09:12,276:INFO:Importing untrained model
2023-08-22 13:09:12,282:INFO:Linear Discriminant Analysis Imported successfully
2023-08-22 13:09:12,295:INFO:Starting cross validation
2023-08-22 13:09:12,298:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:09:12,760:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,762:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,763:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:12,763:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,790:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,790:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,792:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,792:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,793:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:12,793:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,794:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:12,794:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,816:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,817:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,817:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,817:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:12,818:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,819:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,820:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:12,821:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,823:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,824:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,825:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:12,825:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,828:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,830:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,831:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:12,831:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,831:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,831:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,832:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,833:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:12,833:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,833:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,834:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:12,834:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,839:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,840:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:12,840:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:12,841:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:13,687:INFO:Calculating mean and std
2023-08-22 13:09:13,688:INFO:Creating metrics dataframe
2023-08-22 13:09:13,796:INFO:Uploading results into container
2023-08-22 13:09:13,797:INFO:Uploading model into container now
2023-08-22 13:09:13,797:INFO:_master_model_container: 11
2023-08-22 13:09:13,797:INFO:_display_container: 2
2023-08-22 13:09:13,797:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-08-22 13:09:13,797:INFO:create_model() successfully completed......................................
2023-08-22 13:09:13,861:INFO:SubProcess create_model() end ==================================
2023-08-22 13:09:13,861:INFO:Creating metrics dataframe
2023-08-22 13:09:13,871:INFO:Initializing Extra Trees Classifier
2023-08-22 13:09:13,871:INFO:Total runtime is 0.3234732190767924 minutes
2023-08-22 13:09:13,873:INFO:SubProcess create_model() called ==================================
2023-08-22 13:09:13,874:INFO:Initializing create_model()
2023-08-22 13:09:13,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:09:13,874:INFO:Checking exceptions
2023-08-22 13:09:13,874:INFO:Importing libraries
2023-08-22 13:09:13,874:INFO:Copying training dataset
2023-08-22 13:09:13,876:INFO:Defining folds
2023-08-22 13:09:13,876:INFO:Declaring metric variables
2023-08-22 13:09:13,879:INFO:Importing untrained model
2023-08-22 13:09:13,882:INFO:Extra Trees Classifier Imported successfully
2023-08-22 13:09:13,887:INFO:Starting cross validation
2023-08-22 13:09:13,887:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:09:14,619:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,620:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,620:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:14,621:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,635:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,637:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,639:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:14,640:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,648:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,649:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,649:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,650:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:14,650:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,650:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,650:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:14,651:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,679:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,681:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,682:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ifier, msg_start, len(result))

2023-08-22 13:09:14,682:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,683:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,683:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:14,684:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,710:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,710:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,711:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,712:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,712:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:14,712:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:14,712:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,713:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,757:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,758:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,759:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:14,759:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,788:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,789:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:14,789:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:14,790:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:15,486:INFO:Calculating mean and std
2023-08-22 13:09:15,486:INFO:Creating metrics dataframe
2023-08-22 13:09:15,600:INFO:Uploading results into container
2023-08-22 13:09:15,600:INFO:Uploading model into container now
2023-08-22 13:09:15,601:INFO:_master_model_container: 12
2023-08-22 13:09:15,601:INFO:_display_container: 2
2023-08-22 13:09:15,601:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4918, verbose=0, warm_start=False)
2023-08-22 13:09:15,601:INFO:create_model() successfully completed......................................
2023-08-22 13:09:15,658:INFO:SubProcess create_model() end ==================================
2023-08-22 13:09:15,658:INFO:Creating metrics dataframe
2023-08-22 13:09:15,666:INFO:Initializing Extreme Gradient Boosting
2023-08-22 13:09:15,666:INFO:Total runtime is 0.353387439250946 minutes
2023-08-22 13:09:15,669:INFO:SubProcess create_model() called ==================================
2023-08-22 13:09:15,669:INFO:Initializing create_model()
2023-08-22 13:09:15,669:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:09:15,670:INFO:Checking exceptions
2023-08-22 13:09:15,670:INFO:Importing libraries
2023-08-22 13:09:15,670:INFO:Copying training dataset
2023-08-22 13:09:15,672:INFO:Defining folds
2023-08-22 13:09:15,672:INFO:Declaring metric variables
2023-08-22 13:09:15,674:INFO:Importing untrained model
2023-08-22 13:09:15,676:INFO:Extreme Gradient Boosting Imported successfully
2023-08-22 13:09:15,680:INFO:Starting cross validation
2023-08-22 13:09:15,681:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:09:16,931:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:16,933:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:16,934:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:16,935:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:16,940:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:16,942:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:16,943:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:16,944:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,019:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,020:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,021:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:17,022:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,050:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,052:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,053:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:17,054:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,121:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,123:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,127:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:17,127:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,145:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,147:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,148:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:17,149:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,270:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,272:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,273:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:17,273:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,422:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,423:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,424:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:17,424:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,470:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,471:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,472:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:17,472:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,511:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,512:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,513:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:17,514:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:17,917:INFO:Calculating mean and std
2023-08-22 13:09:17,919:INFO:Creating metrics dataframe
2023-08-22 13:09:18,087:INFO:Uploading results into container
2023-08-22 13:09:18,088:INFO:Uploading model into container now
2023-08-22 13:09:18,088:INFO:_master_model_container: 13
2023-08-22 13:09:18,088:INFO:_display_container: 2
2023-08-22 13:09:18,089:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-08-22 13:09:18,089:INFO:create_model() successfully completed......................................
2023-08-22 13:09:18,161:INFO:SubProcess create_model() end ==================================
2023-08-22 13:09:18,161:INFO:Creating metrics dataframe
2023-08-22 13:09:18,173:INFO:Initializing Light Gradient Boosting Machine
2023-08-22 13:09:18,173:INFO:Total runtime is 0.3951756676038106 minutes
2023-08-22 13:09:18,178:INFO:SubProcess create_model() called ==================================
2023-08-22 13:09:18,178:INFO:Initializing create_model()
2023-08-22 13:09:18,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:09:18,179:INFO:Checking exceptions
2023-08-22 13:09:18,179:INFO:Importing libraries
2023-08-22 13:09:18,179:INFO:Copying training dataset
2023-08-22 13:09:18,182:INFO:Defining folds
2023-08-22 13:09:18,182:INFO:Declaring metric variables
2023-08-22 13:09:18,186:INFO:Importing untrained model
2023-08-22 13:09:18,191:INFO:Light Gradient Boosting Machine Imported successfully
2023-08-22 13:09:18,206:INFO:Starting cross validation
2023-08-22 13:09:18,208:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:09:24,875:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:24,877:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:24,878:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:24,878:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:25,239:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:25,241:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:25,243:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:25,244:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:25,430:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:25,432:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:25,433:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:25,434:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:25,652:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:25,654:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:25,655:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:25,656:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,147:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,149:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,151:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:26,152:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,310:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,312:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,313:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:26,314:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,414:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,417:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,418:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:26,419:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,697:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,699:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,700:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:26,701:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,815:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,818:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:26,820:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:26,820:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:27,556:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:27,558:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:27,559:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:27,560:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:27,580:INFO:Calculating mean and std
2023-08-22 13:09:27,582:INFO:Creating metrics dataframe
2023-08-22 13:09:27,779:INFO:Uploading results into container
2023-08-22 13:09:27,782:INFO:Uploading model into container now
2023-08-22 13:09:27,783:INFO:_master_model_container: 14
2023-08-22 13:09:27,783:INFO:_display_container: 2
2023-08-22 13:09:27,783:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4918, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-08-22 13:09:27,783:INFO:create_model() successfully completed......................................
2023-08-22 13:09:27,853:INFO:SubProcess create_model() end ==================================
2023-08-22 13:09:27,854:INFO:Creating metrics dataframe
2023-08-22 13:09:27,866:INFO:Initializing Dummy Classifier
2023-08-22 13:09:27,866:INFO:Total runtime is 0.5567136843999227 minutes
2023-08-22 13:09:27,870:INFO:SubProcess create_model() called ==================================
2023-08-22 13:09:27,871:INFO:Initializing create_model()
2023-08-22 13:09:27,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF543F760>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:09:27,871:INFO:Checking exceptions
2023-08-22 13:09:27,871:INFO:Importing libraries
2023-08-22 13:09:27,871:INFO:Copying training dataset
2023-08-22 13:09:27,874:INFO:Defining folds
2023-08-22 13:09:27,875:INFO:Declaring metric variables
2023-08-22 13:09:27,879:INFO:Importing untrained model
2023-08-22 13:09:27,883:INFO:Dummy Classifier Imported successfully
2023-08-22 13:09:27,894:INFO:Starting cross validation
2023-08-22 13:09:27,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:09:28,160:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,162:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,162:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:28,163:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,170:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,171:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,172:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:28,172:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,202:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,204:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,205:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:28,207:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,209:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,211:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,212:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:28,213:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,229:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,231:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,231:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:28,232:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,242:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,243:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,243:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:28,244:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,245:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,247:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,247:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:28,248:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,248:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,248:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,248:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,249:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,249:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,249:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,250:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:28,250:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:28,250:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,250:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-08-22 13:09:28,250:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:28,250:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-08-22 13:09:29,177:INFO:Calculating mean and std
2023-08-22 13:09:29,178:INFO:Creating metrics dataframe
2023-08-22 13:09:29,297:INFO:Uploading results into container
2023-08-22 13:09:29,298:INFO:Uploading model into container now
2023-08-22 13:09:29,298:INFO:_master_model_container: 15
2023-08-22 13:09:29,298:INFO:_display_container: 2
2023-08-22 13:09:29,298:INFO:DummyClassifier(constant=None, random_state=4918, strategy='prior')
2023-08-22 13:09:29,298:INFO:create_model() successfully completed......................................
2023-08-22 13:09:29,361:INFO:SubProcess create_model() end ==================================
2023-08-22 13:09:29,361:INFO:Creating metrics dataframe
2023-08-22 13:09:29,377:INFO:Initializing create_model()
2023-08-22 13:09:29,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AAF4EF56C0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4918, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:09:29,377:INFO:Checking exceptions
2023-08-22 13:09:29,378:INFO:Importing libraries
2023-08-22 13:09:29,379:INFO:Copying training dataset
2023-08-22 13:09:29,381:INFO:Defining folds
2023-08-22 13:09:29,381:INFO:Declaring metric variables
2023-08-22 13:09:29,381:INFO:Importing untrained model
2023-08-22 13:09:29,381:INFO:Declaring custom model
2023-08-22 13:09:29,381:INFO:Ridge Classifier Imported successfully
2023-08-22 13:09:29,382:INFO:Cross validation set to False
2023-08-22 13:09:29,382:INFO:Fitting Model
2023-08-22 13:09:29,549:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4918, solver='auto',
                tol=0.0001)
2023-08-22 13:09:29,550:INFO:create_model() successfully completed......................................
2023-08-22 13:09:29,639:INFO:_master_model_container: 15
2023-08-22 13:09:29,640:INFO:_display_container: 2
2023-08-22 13:09:29,640:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4918, solver='auto',
                tol=0.0001)
2023-08-22 13:09:29,640:INFO:compare_models() successfully completed......................................
2023-08-22 13:10:17,982:INFO:PyCaret RegressionExperiment
2023-08-22 13:10:17,982:INFO:Logging name: reg-default-name
2023-08-22 13:10:17,983:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-22 13:10:17,984:INFO:version 3.0.4
2023-08-22 13:10:17,984:INFO:Initializing setup()
2023-08-22 13:10:17,984:INFO:self.USI: 0099
2023-08-22 13:10:17,984:INFO:self._variable_keys: {'exp_name_log', 'log_plots_param', 'idx', 'logging_param', 'data', 'fold_shuffle_param', 'y_test', 'gpu_n_jobs_param', 'pipeline', 'fold_groups_param', 'transform_target_param', 'target_param', 'exp_id', 'gpu_param', '_available_plots', 'X_train', 'USI', 'fold_generator', 'html_param', '_ml_usecase', 'X_test', 'n_jobs_param', 'memory', 'y', 'y_train', 'X', 'seed'}
2023-08-22 13:10:17,984:INFO:Checking environment
2023-08-22 13:10:17,984:INFO:python_version: 3.10.11
2023-08-22 13:10:17,984:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2023-08-22 13:10:17,984:INFO:machine: AMD64
2023-08-22 13:10:17,984:INFO:platform: Windows-10-10.0.22621-SP0
2023-08-22 13:10:17,989:INFO:Memory: svmem(total=34014814208, available=10847424512, percent=68.1, used=23167389696, free=10847424512)
2023-08-22 13:10:17,989:INFO:Physical Core: 14
2023-08-22 13:10:17,989:INFO:Logical Core: 20
2023-08-22 13:10:17,989:INFO:Checking libraries
2023-08-22 13:10:17,989:INFO:System:
2023-08-22 13:10:17,989:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2023-08-22 13:10:17,989:INFO:executable: c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\python.exe
2023-08-22 13:10:17,989:INFO:   machine: Windows-10-10.0.22621-SP0
2023-08-22 13:10:17,989:INFO:PyCaret required dependencies:
2023-08-22 13:10:17,989:INFO:                 pip: 23.2.1
2023-08-22 13:10:17,989:INFO:          setuptools: 65.5.0
2023-08-22 13:10:17,989:INFO:             pycaret: 3.0.4
2023-08-22 13:10:17,989:INFO:             IPython: 8.14.0
2023-08-22 13:10:17,989:INFO:          ipywidgets: 8.1.0
2023-08-22 13:10:17,989:INFO:                tqdm: 4.66.1
2023-08-22 13:10:17,989:INFO:               numpy: 1.23.5
2023-08-22 13:10:17,990:INFO:              pandas: 1.5.3
2023-08-22 13:10:17,990:INFO:              jinja2: 3.1.2
2023-08-22 13:10:17,990:INFO:               scipy: 1.11.2
2023-08-22 13:10:17,990:INFO:              joblib: 1.3.2
2023-08-22 13:10:17,990:INFO:             sklearn: 1.2.2
2023-08-22 13:10:17,990:INFO:                pyod: 1.1.0
2023-08-22 13:10:17,990:INFO:            imblearn: 0.11.0
2023-08-22 13:10:17,990:INFO:   category_encoders: 2.6.2
2023-08-22 13:10:17,990:INFO:            lightgbm: 4.0.0
2023-08-22 13:10:17,990:INFO:               numba: 0.57.1
2023-08-22 13:10:17,990:INFO:            requests: 2.31.0
2023-08-22 13:10:17,990:INFO:          matplotlib: 3.7.2
2023-08-22 13:10:17,990:INFO:          scikitplot: 0.3.7
2023-08-22 13:10:17,990:INFO:         yellowbrick: 1.5
2023-08-22 13:10:17,990:INFO:              plotly: 5.16.1
2023-08-22 13:10:17,990:INFO:    plotly-resampler: Not installed
2023-08-22 13:10:17,990:INFO:             kaleido: 0.2.1
2023-08-22 13:10:17,990:INFO:           schemdraw: 0.15
2023-08-22 13:10:17,990:INFO:         statsmodels: 0.14.0
2023-08-22 13:10:17,990:INFO:              sktime: 0.22.0
2023-08-22 13:10:17,990:INFO:               tbats: 1.1.3
2023-08-22 13:10:17,990:INFO:            pmdarima: 2.0.3
2023-08-22 13:10:17,990:INFO:              psutil: 5.9.5
2023-08-22 13:10:17,990:INFO:          markupsafe: 2.1.3
2023-08-22 13:10:17,990:INFO:             pickle5: Not installed
2023-08-22 13:10:17,990:INFO:         cloudpickle: 2.2.1
2023-08-22 13:10:17,990:INFO:         deprecation: 2.1.0
2023-08-22 13:10:17,990:INFO:              xxhash: 3.3.0
2023-08-22 13:10:17,990:INFO:           wurlitzer: Not installed
2023-08-22 13:10:17,990:INFO:PyCaret optional dependencies:
2023-08-22 13:10:17,990:INFO:                shap: Not installed
2023-08-22 13:10:17,990:INFO:           interpret: Not installed
2023-08-22 13:10:17,990:INFO:                umap: Not installed
2023-08-22 13:10:17,990:INFO:    pandas_profiling: 4.5.1
2023-08-22 13:10:17,990:INFO:  explainerdashboard: Not installed
2023-08-22 13:10:17,990:INFO:             autoviz: Not installed
2023-08-22 13:10:17,990:INFO:           fairlearn: Not installed
2023-08-22 13:10:17,990:INFO:          deepchecks: Not installed
2023-08-22 13:10:17,990:INFO:             xgboost: 1.7.6
2023-08-22 13:10:17,990:INFO:            catboost: Not installed
2023-08-22 13:10:17,990:INFO:              kmodes: Not installed
2023-08-22 13:10:17,990:INFO:             mlxtend: Not installed
2023-08-22 13:10:17,990:INFO:       statsforecast: Not installed
2023-08-22 13:10:17,990:INFO:        tune_sklearn: Not installed
2023-08-22 13:10:17,990:INFO:                 ray: Not installed
2023-08-22 13:10:17,990:INFO:            hyperopt: Not installed
2023-08-22 13:10:17,990:INFO:              optuna: Not installed
2023-08-22 13:10:17,990:INFO:               skopt: Not installed
2023-08-22 13:10:17,990:INFO:              mlflow: Not installed
2023-08-22 13:10:17,990:INFO:              gradio: Not installed
2023-08-22 13:10:17,991:INFO:             fastapi: Not installed
2023-08-22 13:10:17,991:INFO:             uvicorn: Not installed
2023-08-22 13:10:17,991:INFO:              m2cgen: Not installed
2023-08-22 13:10:17,991:INFO:           evidently: Not installed
2023-08-22 13:10:17,991:INFO:               fugue: Not installed
2023-08-22 13:10:17,991:INFO:           streamlit: Not installed
2023-08-22 13:10:17,991:INFO:             prophet: Not installed
2023-08-22 13:10:17,991:INFO:None
2023-08-22 13:10:17,991:INFO:Set up data.
2023-08-22 13:10:17,997:INFO:Set up train/test split.
2023-08-22 13:10:18,000:INFO:Set up index.
2023-08-22 13:10:18,000:INFO:Set up folding strategy.
2023-08-22 13:10:18,000:INFO:Assigning column types.
2023-08-22 13:10:18,002:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-22 13:10:18,002:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,005:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,008:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,040:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,066:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:18,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:18,068:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,071:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,074:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,108:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,133:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,133:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:18,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:18,135:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-22 13:10:18,138:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,141:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,174:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,199:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,200:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:18,201:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:18,204:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,207:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,239:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,265:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,265:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:18,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:18,266:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-22 13:10:18,271:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,305:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,329:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,329:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:18,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:18,337:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,370:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,395:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,395:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:18,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:18,398:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-22 13:10:18,435:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,460:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,461:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:18,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:18,500:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,526:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:18,527:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:18,528:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-22 13:10:18,565:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,590:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:18,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:18,630:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-22 13:10:18,657:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:18,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:18,658:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-22 13:10:18,721:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:18,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:18,787:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:18,788:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:18,789:INFO:Preparing preprocessing pipeline...
2023-08-22 13:10:18,789:INFO:Set up simple imputation.
2023-08-22 13:10:18,791:INFO:Set up encoding of categorical features.
2023-08-22 13:10:18,791:INFO:Set up feature normalization.
2023-08-22 13:10:18,871:INFO:Finished creating preprocessing pipeline.
2023-08-22 13:10:18,876:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\VONHIN~1\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['wt', 'forty', 'bench', 'vertical',
                                             'broad_jump', 'cone', 'shuttle'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verb...
                                    include=['player_name', 'school'],
                                    transformer=TargetEncoder(cols=['player_name',
                                                                    'school'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-08-22 13:10:18,876:INFO:Creating final display dataframe.
2023-08-22 13:10:19,079:INFO:Setup _display_container:                     Description             Value
0                    Session id              3679
1                        Target         draft_ovr
2                   Target type        Regression
3           Original data shape        (2110, 12)
4        Transformed data shape        (2110, 47)
5   Transformed train set shape        (1477, 47)
6    Transformed test set shape         (633, 47)
7              Numeric features                 7
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              0099
2023-08-22 13:10:19,149:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:19,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:19,215:INFO:Soft dependency imported: xgboost: 1.7.6
2023-08-22 13:10:19,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-22 13:10:19,216:INFO:setup() successfully completed in 1.3s...............
2023-08-22 13:10:26,101:INFO:Initializing compare_models()
2023-08-22 13:10:26,101:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-08-22 13:10:26,101:INFO:Checking exceptions
2023-08-22 13:10:26,103:INFO:Preparing display monitor
2023-08-22 13:10:26,119:INFO:Initializing Linear Regression
2023-08-22 13:10:26,119:INFO:Total runtime is 0.0 minutes
2023-08-22 13:10:26,122:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:26,122:INFO:Initializing create_model()
2023-08-22 13:10:26,122:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:26,122:INFO:Checking exceptions
2023-08-22 13:10:26,122:INFO:Importing libraries
2023-08-22 13:10:26,122:INFO:Copying training dataset
2023-08-22 13:10:26,124:INFO:Defining folds
2023-08-22 13:10:26,124:INFO:Declaring metric variables
2023-08-22 13:10:26,127:INFO:Importing untrained model
2023-08-22 13:10:26,130:INFO:Linear Regression Imported successfully
2023-08-22 13:10:26,135:INFO:Starting cross validation
2023-08-22 13:10:26,136:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:27,328:INFO:Calculating mean and std
2023-08-22 13:10:27,330:INFO:Creating metrics dataframe
2023-08-22 13:10:27,443:INFO:Uploading results into container
2023-08-22 13:10:27,444:INFO:Uploading model into container now
2023-08-22 13:10:27,444:INFO:_master_model_container: 1
2023-08-22 13:10:27,444:INFO:_display_container: 2
2023-08-22 13:10:27,444:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-08-22 13:10:27,444:INFO:create_model() successfully completed......................................
2023-08-22 13:10:27,512:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:27,512:INFO:Creating metrics dataframe
2023-08-22 13:10:27,519:INFO:Initializing Lasso Regression
2023-08-22 13:10:27,519:INFO:Total runtime is 0.023322864373524984 minutes
2023-08-22 13:10:27,521:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:27,522:INFO:Initializing create_model()
2023-08-22 13:10:27,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:27,522:INFO:Checking exceptions
2023-08-22 13:10:27,522:INFO:Importing libraries
2023-08-22 13:10:27,522:INFO:Copying training dataset
2023-08-22 13:10:27,525:INFO:Defining folds
2023-08-22 13:10:27,525:INFO:Declaring metric variables
2023-08-22 13:10:27,526:INFO:Importing untrained model
2023-08-22 13:10:27,528:INFO:Lasso Regression Imported successfully
2023-08-22 13:10:27,534:INFO:Starting cross validation
2023-08-22 13:10:27,535:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:28,666:INFO:Calculating mean and std
2023-08-22 13:10:28,667:INFO:Creating metrics dataframe
2023-08-22 13:10:28,783:INFO:Uploading results into container
2023-08-22 13:10:28,784:INFO:Uploading model into container now
2023-08-22 13:10:28,784:INFO:_master_model_container: 2
2023-08-22 13:10:28,785:INFO:_display_container: 2
2023-08-22 13:10:28,785:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=3679, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-08-22 13:10:28,785:INFO:create_model() successfully completed......................................
2023-08-22 13:10:28,848:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:28,848:INFO:Creating metrics dataframe
2023-08-22 13:10:28,856:INFO:Initializing Ridge Regression
2023-08-22 13:10:28,856:INFO:Total runtime is 0.045615100860595705 minutes
2023-08-22 13:10:28,859:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:28,859:INFO:Initializing create_model()
2023-08-22 13:10:28,859:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:28,859:INFO:Checking exceptions
2023-08-22 13:10:28,859:INFO:Importing libraries
2023-08-22 13:10:28,859:INFO:Copying training dataset
2023-08-22 13:10:28,861:INFO:Defining folds
2023-08-22 13:10:28,862:INFO:Declaring metric variables
2023-08-22 13:10:28,864:INFO:Importing untrained model
2023-08-22 13:10:28,867:INFO:Ridge Regression Imported successfully
2023-08-22 13:10:28,871:INFO:Starting cross validation
2023-08-22 13:10:28,872:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:30,025:INFO:Calculating mean and std
2023-08-22 13:10:30,026:INFO:Creating metrics dataframe
2023-08-22 13:10:30,152:INFO:Uploading results into container
2023-08-22 13:10:30,153:INFO:Uploading model into container now
2023-08-22 13:10:30,153:INFO:_master_model_container: 3
2023-08-22 13:10:30,153:INFO:_display_container: 2
2023-08-22 13:10:30,153:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=3679, solver='auto', tol=0.0001)
2023-08-22 13:10:30,153:INFO:create_model() successfully completed......................................
2023-08-22 13:10:30,218:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:30,218:INFO:Creating metrics dataframe
2023-08-22 13:10:30,225:INFO:Initializing Elastic Net
2023-08-22 13:10:30,225:INFO:Total runtime is 0.06843288739522299 minutes
2023-08-22 13:10:30,228:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:30,229:INFO:Initializing create_model()
2023-08-22 13:10:30,229:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:30,229:INFO:Checking exceptions
2023-08-22 13:10:30,229:INFO:Importing libraries
2023-08-22 13:10:30,229:INFO:Copying training dataset
2023-08-22 13:10:30,231:INFO:Defining folds
2023-08-22 13:10:30,231:INFO:Declaring metric variables
2023-08-22 13:10:30,233:INFO:Importing untrained model
2023-08-22 13:10:30,236:INFO:Elastic Net Imported successfully
2023-08-22 13:10:30,240:INFO:Starting cross validation
2023-08-22 13:10:30,241:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:31,393:INFO:Calculating mean and std
2023-08-22 13:10:31,394:INFO:Creating metrics dataframe
2023-08-22 13:10:31,516:INFO:Uploading results into container
2023-08-22 13:10:31,518:INFO:Uploading model into container now
2023-08-22 13:10:31,518:INFO:_master_model_container: 4
2023-08-22 13:10:31,518:INFO:_display_container: 2
2023-08-22 13:10:31,519:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=3679,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-08-22 13:10:31,519:INFO:create_model() successfully completed......................................
2023-08-22 13:10:31,577:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:31,577:INFO:Creating metrics dataframe
2023-08-22 13:10:31,583:INFO:Initializing Least Angle Regression
2023-08-22 13:10:31,583:INFO:Total runtime is 0.09106943209966024 minutes
2023-08-22 13:10:31,586:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:31,586:INFO:Initializing create_model()
2023-08-22 13:10:31,586:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:31,586:INFO:Checking exceptions
2023-08-22 13:10:31,586:INFO:Importing libraries
2023-08-22 13:10:31,586:INFO:Copying training dataset
2023-08-22 13:10:31,588:INFO:Defining folds
2023-08-22 13:10:31,588:INFO:Declaring metric variables
2023-08-22 13:10:31,591:INFO:Importing untrained model
2023-08-22 13:10:31,593:INFO:Least Angle Regression Imported successfully
2023-08-22 13:10:31,598:INFO:Starting cross validation
2023-08-22 13:10:31,599:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:31,773:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:735: RuntimeWarning: overflow encountered in divide
  g2 = arrayfuncs.min_pos((C + Cov) / (AA + corr_eq_dir + tiny32))

2023-08-22 13:10:31,773:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:775: RuntimeWarning: overflow encountered in multiply
  Cov -= gamma_ * corr_eq_dir

2023-08-22 13:10:31,773:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:735: RuntimeWarning: invalid value encountered in add
  g2 = arrayfuncs.min_pos((C + Cov) / (AA + corr_eq_dir + tiny32))

2023-08-22 13:10:31,774:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:740: RuntimeWarning: overflow encountered in divide
  z = -coef[active] / (least_squares + tiny32)

2023-08-22 13:10:31,774:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:731: RuntimeWarning: invalid value encountered in subtract
  g1 = arrayfuncs.min_pos((C - Cov) / (AA - corr_eq_dir + tiny32))

2023-08-22 13:10:31,774:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py:775: RuntimeWarning: invalid value encountered in subtract
  Cov -= gamma_ * corr_eq_dir

2023-08-22 13:10:31,804:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py:446: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)

2023-08-22 13:10:31,805:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py:446: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)

2023-08-22 13:10:31,805:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\metrics\_regression.py:927: RuntimeWarning: overflow encountered in square
  numerator = (weight * (y_true - y_pred) ** 2).sum(axis=0, dtype=np.float64)

2023-08-22 13:10:32,748:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
1 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
1 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\joblib\memory.py", line 655, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py", line 1144, in fit
    self._fit(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py", line 1046, in _fit
    alphas, active, coef_path, n_iter_ = lars_path(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py", line 170, in lars_path
    return _lars_path_solver(
  File "c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_least_angle.py", line 603, in _lars_path_solver
    sign_active[n_active] = np.sign(C_)
ValueError: cannot convert float NaN to integer

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-08-22 13:10:32,748:INFO:Calculating mean and std
2023-08-22 13:10:32,767:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\numpy\core\_methods.py:236: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2023-08-22 13:10:32,767:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\numpy\core\_methods.py:233: RuntimeWarning: invalid value encountered in subtract
  x = asanyarray(arr - arrmean)

2023-08-22 13:10:32,768:INFO:Creating metrics dataframe
2023-08-22 13:10:32,873:INFO:Uploading results into container
2023-08-22 13:10:32,874:INFO:Uploading model into container now
2023-08-22 13:10:32,874:INFO:_master_model_container: 5
2023-08-22 13:10:32,874:INFO:_display_container: 2
2023-08-22 13:10:32,874:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=3679, verbose=False)
2023-08-22 13:10:32,874:INFO:create_model() successfully completed......................................
2023-08-22 13:10:32,938:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:32,938:INFO:Creating metrics dataframe
2023-08-22 13:10:32,947:INFO:Initializing Lasso Least Angle Regression
2023-08-22 13:10:32,947:INFO:Total runtime is 0.11379400491714478 minutes
2023-08-22 13:10:32,950:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:32,950:INFO:Initializing create_model()
2023-08-22 13:10:32,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:32,950:INFO:Checking exceptions
2023-08-22 13:10:32,950:INFO:Importing libraries
2023-08-22 13:10:32,950:INFO:Copying training dataset
2023-08-22 13:10:32,953:INFO:Defining folds
2023-08-22 13:10:32,953:INFO:Declaring metric variables
2023-08-22 13:10:32,955:INFO:Importing untrained model
2023-08-22 13:10:32,957:INFO:Lasso Least Angle Regression Imported successfully
2023-08-22 13:10:32,962:INFO:Starting cross validation
2023-08-22 13:10:32,963:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:34,138:INFO:Calculating mean and std
2023-08-22 13:10:34,139:INFO:Creating metrics dataframe
2023-08-22 13:10:34,257:INFO:Uploading results into container
2023-08-22 13:10:34,258:INFO:Uploading model into container now
2023-08-22 13:10:34,258:INFO:_master_model_container: 6
2023-08-22 13:10:34,258:INFO:_display_container: 2
2023-08-22 13:10:34,258:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=3679, verbose=False)
2023-08-22 13:10:34,259:INFO:create_model() successfully completed......................................
2023-08-22 13:10:34,323:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:34,323:INFO:Creating metrics dataframe
2023-08-22 13:10:34,331:INFO:Initializing Orthogonal Matching Pursuit
2023-08-22 13:10:34,331:INFO:Total runtime is 0.13685527245203655 minutes
2023-08-22 13:10:34,334:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:34,334:INFO:Initializing create_model()
2023-08-22 13:10:34,334:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:34,334:INFO:Checking exceptions
2023-08-22 13:10:34,334:INFO:Importing libraries
2023-08-22 13:10:34,334:INFO:Copying training dataset
2023-08-22 13:10:34,336:INFO:Defining folds
2023-08-22 13:10:34,336:INFO:Declaring metric variables
2023-08-22 13:10:34,338:INFO:Importing untrained model
2023-08-22 13:10:34,341:INFO:Orthogonal Matching Pursuit Imported successfully
2023-08-22 13:10:34,344:INFO:Starting cross validation
2023-08-22 13:10:34,346:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:35,499:INFO:Calculating mean and std
2023-08-22 13:10:35,500:INFO:Creating metrics dataframe
2023-08-22 13:10:35,618:INFO:Uploading results into container
2023-08-22 13:10:35,619:INFO:Uploading model into container now
2023-08-22 13:10:35,619:INFO:_master_model_container: 7
2023-08-22 13:10:35,619:INFO:_display_container: 2
2023-08-22 13:10:35,620:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-08-22 13:10:35,620:INFO:create_model() successfully completed......................................
2023-08-22 13:10:35,679:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:35,679:INFO:Creating metrics dataframe
2023-08-22 13:10:35,686:INFO:Initializing Bayesian Ridge
2023-08-22 13:10:35,686:INFO:Total runtime is 0.15944627523422242 minutes
2023-08-22 13:10:35,689:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:35,689:INFO:Initializing create_model()
2023-08-22 13:10:35,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:35,689:INFO:Checking exceptions
2023-08-22 13:10:35,689:INFO:Importing libraries
2023-08-22 13:10:35,689:INFO:Copying training dataset
2023-08-22 13:10:35,691:INFO:Defining folds
2023-08-22 13:10:35,692:INFO:Declaring metric variables
2023-08-22 13:10:35,694:INFO:Importing untrained model
2023-08-22 13:10:35,696:INFO:Bayesian Ridge Imported successfully
2023-08-22 13:10:35,701:INFO:Starting cross validation
2023-08-22 13:10:35,702:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:36,856:INFO:Calculating mean and std
2023-08-22 13:10:36,858:INFO:Creating metrics dataframe
2023-08-22 13:10:36,969:INFO:Uploading results into container
2023-08-22 13:10:36,970:INFO:Uploading model into container now
2023-08-22 13:10:36,970:INFO:_master_model_container: 8
2023-08-22 13:10:36,970:INFO:_display_container: 2
2023-08-22 13:10:36,971:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-08-22 13:10:36,971:INFO:create_model() successfully completed......................................
2023-08-22 13:10:37,027:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:37,027:INFO:Creating metrics dataframe
2023-08-22 13:10:37,034:INFO:Initializing Passive Aggressive Regressor
2023-08-22 13:10:37,034:INFO:Total runtime is 0.18191152413686118 minutes
2023-08-22 13:10:37,036:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:37,037:INFO:Initializing create_model()
2023-08-22 13:10:37,037:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:37,037:INFO:Checking exceptions
2023-08-22 13:10:37,037:INFO:Importing libraries
2023-08-22 13:10:37,037:INFO:Copying training dataset
2023-08-22 13:10:37,040:INFO:Defining folds
2023-08-22 13:10:37,040:INFO:Declaring metric variables
2023-08-22 13:10:37,042:INFO:Importing untrained model
2023-08-22 13:10:37,044:INFO:Passive Aggressive Regressor Imported successfully
2023-08-22 13:10:37,048:INFO:Starting cross validation
2023-08-22 13:10:37,049:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:38,186:INFO:Calculating mean and std
2023-08-22 13:10:38,187:INFO:Creating metrics dataframe
2023-08-22 13:10:38,312:INFO:Uploading results into container
2023-08-22 13:10:38,313:INFO:Uploading model into container now
2023-08-22 13:10:38,313:INFO:_master_model_container: 9
2023-08-22 13:10:38,314:INFO:_display_container: 2
2023-08-22 13:10:38,314:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=3679, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-08-22 13:10:38,314:INFO:create_model() successfully completed......................................
2023-08-22 13:10:38,378:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:38,378:INFO:Creating metrics dataframe
2023-08-22 13:10:38,386:INFO:Initializing Huber Regressor
2023-08-22 13:10:38,386:INFO:Total runtime is 0.2044483542442322 minutes
2023-08-22 13:10:38,389:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:38,389:INFO:Initializing create_model()
2023-08-22 13:10:38,389:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:38,389:INFO:Checking exceptions
2023-08-22 13:10:38,389:INFO:Importing libraries
2023-08-22 13:10:38,389:INFO:Copying training dataset
2023-08-22 13:10:38,392:INFO:Defining folds
2023-08-22 13:10:38,392:INFO:Declaring metric variables
2023-08-22 13:10:38,394:INFO:Importing untrained model
2023-08-22 13:10:38,398:INFO:Huber Regressor Imported successfully
2023-08-22 13:10:38,402:INFO:Starting cross validation
2023-08-22 13:10:38,403:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:38,542:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 13:10:38,544:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 13:10:38,566:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 13:10:38,584:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 13:10:38,586:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 13:10:38,587:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 13:10:38,588:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 13:10:38,608:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 13:10:38,611:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 13:10:38,612:WARNING:c:\Users\VonHinson\AppData\Local\Programs\Python\Python310\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-08-22 13:10:39,639:INFO:Calculating mean and std
2023-08-22 13:10:39,640:INFO:Creating metrics dataframe
2023-08-22 13:10:39,756:INFO:Uploading results into container
2023-08-22 13:10:39,757:INFO:Uploading model into container now
2023-08-22 13:10:39,758:INFO:_master_model_container: 10
2023-08-22 13:10:39,758:INFO:_display_container: 2
2023-08-22 13:10:39,758:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-08-22 13:10:39,758:INFO:create_model() successfully completed......................................
2023-08-22 13:10:39,821:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:39,821:INFO:Creating metrics dataframe
2023-08-22 13:10:39,829:INFO:Initializing K Neighbors Regressor
2023-08-22 13:10:39,829:INFO:Total runtime is 0.2285037398338318 minutes
2023-08-22 13:10:39,832:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:39,832:INFO:Initializing create_model()
2023-08-22 13:10:39,832:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:39,832:INFO:Checking exceptions
2023-08-22 13:10:39,832:INFO:Importing libraries
2023-08-22 13:10:39,832:INFO:Copying training dataset
2023-08-22 13:10:39,834:INFO:Defining folds
2023-08-22 13:10:39,834:INFO:Declaring metric variables
2023-08-22 13:10:39,837:INFO:Importing untrained model
2023-08-22 13:10:39,840:INFO:K Neighbors Regressor Imported successfully
2023-08-22 13:10:39,845:INFO:Starting cross validation
2023-08-22 13:10:39,846:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:40,887:INFO:Calculating mean and std
2023-08-22 13:10:40,888:INFO:Creating metrics dataframe
2023-08-22 13:10:41,011:INFO:Uploading results into container
2023-08-22 13:10:41,012:INFO:Uploading model into container now
2023-08-22 13:10:41,012:INFO:_master_model_container: 11
2023-08-22 13:10:41,012:INFO:_display_container: 2
2023-08-22 13:10:41,012:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-08-22 13:10:41,012:INFO:create_model() successfully completed......................................
2023-08-22 13:10:41,076:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:41,076:INFO:Creating metrics dataframe
2023-08-22 13:10:41,085:INFO:Initializing Decision Tree Regressor
2023-08-22 13:10:41,085:INFO:Total runtime is 0.24942245483398437 minutes
2023-08-22 13:10:41,087:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:41,088:INFO:Initializing create_model()
2023-08-22 13:10:41,088:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:41,088:INFO:Checking exceptions
2023-08-22 13:10:41,088:INFO:Importing libraries
2023-08-22 13:10:41,088:INFO:Copying training dataset
2023-08-22 13:10:41,090:INFO:Defining folds
2023-08-22 13:10:41,090:INFO:Declaring metric variables
2023-08-22 13:10:41,092:INFO:Importing untrained model
2023-08-22 13:10:41,095:INFO:Decision Tree Regressor Imported successfully
2023-08-22 13:10:41,101:INFO:Starting cross validation
2023-08-22 13:10:41,102:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:42,245:INFO:Calculating mean and std
2023-08-22 13:10:42,246:INFO:Creating metrics dataframe
2023-08-22 13:10:42,370:INFO:Uploading results into container
2023-08-22 13:10:42,370:INFO:Uploading model into container now
2023-08-22 13:10:42,371:INFO:_master_model_container: 12
2023-08-22 13:10:42,371:INFO:_display_container: 2
2023-08-22 13:10:42,371:INFO:DecisionTreeRegressor(ccp_alpha=0.0, criterion='squared_error', max_depth=None,
                      max_features=None, max_leaf_nodes=None,
                      min_impurity_decrease=0.0, min_samples_leaf=1,
                      min_samples_split=2, min_weight_fraction_leaf=0.0,
                      random_state=3679, splitter='best')
2023-08-22 13:10:42,371:INFO:create_model() successfully completed......................................
2023-08-22 13:10:42,434:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:42,434:INFO:Creating metrics dataframe
2023-08-22 13:10:42,443:INFO:Initializing Random Forest Regressor
2023-08-22 13:10:42,443:INFO:Total runtime is 0.27205783923467 minutes
2023-08-22 13:10:42,445:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:42,446:INFO:Initializing create_model()
2023-08-22 13:10:42,446:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:42,446:INFO:Checking exceptions
2023-08-22 13:10:42,446:INFO:Importing libraries
2023-08-22 13:10:42,446:INFO:Copying training dataset
2023-08-22 13:10:42,448:INFO:Defining folds
2023-08-22 13:10:42,448:INFO:Declaring metric variables
2023-08-22 13:10:42,451:INFO:Importing untrained model
2023-08-22 13:10:42,453:INFO:Random Forest Regressor Imported successfully
2023-08-22 13:10:42,459:INFO:Starting cross validation
2023-08-22 13:10:42,460:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:44,615:INFO:Calculating mean and std
2023-08-22 13:10:44,616:INFO:Creating metrics dataframe
2023-08-22 13:10:44,830:INFO:Uploading results into container
2023-08-22 13:10:44,831:INFO:Uploading model into container now
2023-08-22 13:10:44,831:INFO:_master_model_container: 13
2023-08-22 13:10:44,832:INFO:_display_container: 2
2023-08-22 13:10:44,832:INFO:RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='squared_error',
                      max_depth=None, max_features=1.0, max_leaf_nodes=None,
                      max_samples=None, min_impurity_decrease=0.0,
                      min_samples_leaf=1, min_samples_split=2,
                      min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                      oob_score=False, random_state=3679, verbose=0,
                      warm_start=False)
2023-08-22 13:10:44,832:INFO:create_model() successfully completed......................................
2023-08-22 13:10:44,917:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:44,917:INFO:Creating metrics dataframe
2023-08-22 13:10:44,932:INFO:Initializing Extra Trees Regressor
2023-08-22 13:10:44,932:INFO:Total runtime is 0.3135456363360087 minutes
2023-08-22 13:10:44,936:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:44,937:INFO:Initializing create_model()
2023-08-22 13:10:44,937:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:44,937:INFO:Checking exceptions
2023-08-22 13:10:44,937:INFO:Importing libraries
2023-08-22 13:10:44,938:INFO:Copying training dataset
2023-08-22 13:10:44,944:INFO:Defining folds
2023-08-22 13:10:44,944:INFO:Declaring metric variables
2023-08-22 13:10:44,948:INFO:Importing untrained model
2023-08-22 13:10:44,955:INFO:Extra Trees Regressor Imported successfully
2023-08-22 13:10:44,970:INFO:Starting cross validation
2023-08-22 13:10:44,973:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:47,435:INFO:Calculating mean and std
2023-08-22 13:10:47,436:INFO:Creating metrics dataframe
2023-08-22 13:10:47,562:INFO:Uploading results into container
2023-08-22 13:10:47,563:INFO:Uploading model into container now
2023-08-22 13:10:47,563:INFO:_master_model_container: 14
2023-08-22 13:10:47,563:INFO:_display_container: 2
2023-08-22 13:10:47,563:INFO:ExtraTreesRegressor(bootstrap=False, ccp_alpha=0.0, criterion='squared_error',
                    max_depth=None, max_features=1.0, max_leaf_nodes=None,
                    max_samples=None, min_impurity_decrease=0.0,
                    min_samples_leaf=1, min_samples_split=2,
                    min_weight_fraction_leaf=0.0, n_estimators=100, n_jobs=-1,
                    oob_score=False, random_state=3679, verbose=0,
                    warm_start=False)
2023-08-22 13:10:47,563:INFO:create_model() successfully completed......................................
2023-08-22 13:10:47,626:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:47,626:INFO:Creating metrics dataframe
2023-08-22 13:10:47,634:INFO:Initializing AdaBoost Regressor
2023-08-22 13:10:47,636:INFO:Total runtime is 0.35860973596572876 minutes
2023-08-22 13:10:47,638:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:47,638:INFO:Initializing create_model()
2023-08-22 13:10:47,638:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:47,638:INFO:Checking exceptions
2023-08-22 13:10:47,638:INFO:Importing libraries
2023-08-22 13:10:47,638:INFO:Copying training dataset
2023-08-22 13:10:47,641:INFO:Defining folds
2023-08-22 13:10:47,641:INFO:Declaring metric variables
2023-08-22 13:10:47,643:INFO:Importing untrained model
2023-08-22 13:10:47,646:INFO:AdaBoost Regressor Imported successfully
2023-08-22 13:10:47,650:INFO:Starting cross validation
2023-08-22 13:10:47,651:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:49,059:INFO:Calculating mean and std
2023-08-22 13:10:49,060:INFO:Creating metrics dataframe
2023-08-22 13:10:49,196:INFO:Uploading results into container
2023-08-22 13:10:49,197:INFO:Uploading model into container now
2023-08-22 13:10:49,198:INFO:_master_model_container: 15
2023-08-22 13:10:49,198:INFO:_display_container: 2
2023-08-22 13:10:49,198:INFO:AdaBoostRegressor(base_estimator='deprecated', estimator=None,
                  learning_rate=1.0, loss='linear', n_estimators=50,
                  random_state=3679)
2023-08-22 13:10:49,198:INFO:create_model() successfully completed......................................
2023-08-22 13:10:49,263:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:49,263:INFO:Creating metrics dataframe
2023-08-22 13:10:49,272:INFO:Initializing Gradient Boosting Regressor
2023-08-22 13:10:49,272:INFO:Total runtime is 0.3858839631080627 minutes
2023-08-22 13:10:49,274:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:49,274:INFO:Initializing create_model()
2023-08-22 13:10:49,274:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:49,274:INFO:Checking exceptions
2023-08-22 13:10:49,274:INFO:Importing libraries
2023-08-22 13:10:49,274:INFO:Copying training dataset
2023-08-22 13:10:49,278:INFO:Defining folds
2023-08-22 13:10:49,278:INFO:Declaring metric variables
2023-08-22 13:10:49,280:INFO:Importing untrained model
2023-08-22 13:10:49,283:INFO:Gradient Boosting Regressor Imported successfully
2023-08-22 13:10:49,287:INFO:Starting cross validation
2023-08-22 13:10:49,288:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:50,889:INFO:Calculating mean and std
2023-08-22 13:10:50,890:INFO:Creating metrics dataframe
2023-08-22 13:10:51,024:INFO:Uploading results into container
2023-08-22 13:10:51,026:INFO:Uploading model into container now
2023-08-22 13:10:51,027:INFO:_master_model_container: 16
2023-08-22 13:10:51,027:INFO:_display_container: 2
2023-08-22 13:10:51,027:INFO:GradientBoostingRegressor(alpha=0.9, ccp_alpha=0.0, criterion='friedman_mse',
                          init=None, learning_rate=0.1, loss='squared_error',
                          max_depth=3, max_features=None, max_leaf_nodes=None,
                          min_impurity_decrease=0.0, min_samples_leaf=1,
                          min_samples_split=2, min_weight_fraction_leaf=0.0,
                          n_estimators=100, n_iter_no_change=None,
                          random_state=3679, subsample=1.0, tol=0.0001,
                          validation_fraction=0.1, verbose=0, warm_start=False)
2023-08-22 13:10:51,027:INFO:create_model() successfully completed......................................
2023-08-22 13:10:51,091:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:51,091:INFO:Creating metrics dataframe
2023-08-22 13:10:51,100:INFO:Initializing Extreme Gradient Boosting
2023-08-22 13:10:51,100:INFO:Total runtime is 0.4163493235905965 minutes
2023-08-22 13:10:51,102:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:51,102:INFO:Initializing create_model()
2023-08-22 13:10:51,102:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:51,103:INFO:Checking exceptions
2023-08-22 13:10:51,103:INFO:Importing libraries
2023-08-22 13:10:51,103:INFO:Copying training dataset
2023-08-22 13:10:51,106:INFO:Defining folds
2023-08-22 13:10:51,106:INFO:Declaring metric variables
2023-08-22 13:10:51,108:INFO:Importing untrained model
2023-08-22 13:10:51,111:INFO:Extreme Gradient Boosting Imported successfully
2023-08-22 13:10:51,115:INFO:Starting cross validation
2023-08-22 13:10:51,116:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:53,164:INFO:Calculating mean and std
2023-08-22 13:10:53,165:INFO:Creating metrics dataframe
2023-08-22 13:10:53,405:INFO:Uploading results into container
2023-08-22 13:10:53,406:INFO:Uploading model into container now
2023-08-22 13:10:53,407:INFO:_master_model_container: 17
2023-08-22 13:10:53,407:INFO:_display_container: 2
2023-08-22 13:10:53,408:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             objective='reg:squarederror', predictor=None, ...)
2023-08-22 13:10:53,408:INFO:create_model() successfully completed......................................
2023-08-22 13:10:53,488:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:53,488:INFO:Creating metrics dataframe
2023-08-22 13:10:53,502:INFO:Initializing Light Gradient Boosting Machine
2023-08-22 13:10:53,502:INFO:Total runtime is 0.4563790440559387 minutes
2023-08-22 13:10:53,507:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:53,508:INFO:Initializing create_model()
2023-08-22 13:10:53,508:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:53,508:INFO:Checking exceptions
2023-08-22 13:10:53,508:INFO:Importing libraries
2023-08-22 13:10:53,509:INFO:Copying training dataset
2023-08-22 13:10:53,513:INFO:Defining folds
2023-08-22 13:10:53,514:INFO:Declaring metric variables
2023-08-22 13:10:53,520:INFO:Importing untrained model
2023-08-22 13:10:53,524:INFO:Light Gradient Boosting Machine Imported successfully
2023-08-22 13:10:53,531:INFO:Starting cross validation
2023-08-22 13:10:53,534:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:56,449:INFO:Calculating mean and std
2023-08-22 13:10:56,450:INFO:Creating metrics dataframe
2023-08-22 13:10:56,702:INFO:Uploading results into container
2023-08-22 13:10:56,703:INFO:Uploading model into container now
2023-08-22 13:10:56,703:INFO:_master_model_container: 18
2023-08-22 13:10:56,703:INFO:_display_container: 2
2023-08-22 13:10:56,704:INFO:LGBMRegressor(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
              importance_type='split', learning_rate=0.1, max_depth=-1,
              min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
              n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
              random_state=3679, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
              subsample_for_bin=200000, subsample_freq=0)
2023-08-22 13:10:56,704:INFO:create_model() successfully completed......................................
2023-08-22 13:10:56,780:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:56,781:INFO:Creating metrics dataframe
2023-08-22 13:10:56,796:INFO:Initializing Dummy Regressor
2023-08-22 13:10:56,796:INFO:Total runtime is 0.5112767457962036 minutes
2023-08-22 13:10:56,800:INFO:SubProcess create_model() called ==================================
2023-08-22 13:10:56,800:INFO:Initializing create_model()
2023-08-22 13:10:56,800:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AAF55EA860>, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:56,801:INFO:Checking exceptions
2023-08-22 13:10:56,801:INFO:Importing libraries
2023-08-22 13:10:56,801:INFO:Copying training dataset
2023-08-22 13:10:56,807:INFO:Defining folds
2023-08-22 13:10:56,808:INFO:Declaring metric variables
2023-08-22 13:10:56,814:INFO:Importing untrained model
2023-08-22 13:10:56,819:INFO:Dummy Regressor Imported successfully
2023-08-22 13:10:56,835:INFO:Starting cross validation
2023-08-22 13:10:56,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-22 13:10:58,314:INFO:Calculating mean and std
2023-08-22 13:10:58,314:INFO:Creating metrics dataframe
2023-08-22 13:10:58,452:INFO:Uploading results into container
2023-08-22 13:10:58,453:INFO:Uploading model into container now
2023-08-22 13:10:58,453:INFO:_master_model_container: 19
2023-08-22 13:10:58,453:INFO:_display_container: 2
2023-08-22 13:10:58,453:INFO:DummyRegressor(constant=None, quantile=None, strategy='mean')
2023-08-22 13:10:58,454:INFO:create_model() successfully completed......................................
2023-08-22 13:10:58,518:INFO:SubProcess create_model() end ==================================
2023-08-22 13:10:58,518:INFO:Creating metrics dataframe
2023-08-22 13:10:58,535:INFO:Initializing create_model()
2023-08-22 13:10:58,535:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002AAC6FC40A0>, estimator=ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=3679,
           selection='cyclic', tol=0.0001, warm_start=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-22 13:10:58,535:INFO:Checking exceptions
2023-08-22 13:10:58,536:INFO:Importing libraries
2023-08-22 13:10:58,536:INFO:Copying training dataset
2023-08-22 13:10:58,538:INFO:Defining folds
2023-08-22 13:10:58,538:INFO:Declaring metric variables
2023-08-22 13:10:58,538:INFO:Importing untrained model
2023-08-22 13:10:58,538:INFO:Declaring custom model
2023-08-22 13:10:58,538:INFO:Elastic Net Imported successfully
2023-08-22 13:10:58,539:INFO:Cross validation set to False
2023-08-22 13:10:58,539:INFO:Fitting Model
2023-08-22 13:10:58,713:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=3679,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-08-22 13:10:58,713:INFO:create_model() successfully completed......................................
2023-08-22 13:10:58,804:INFO:_master_model_container: 19
2023-08-22 13:10:58,804:INFO:_display_container: 2
2023-08-22 13:10:58,804:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=3679,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-08-22 13:10:58,804:INFO:compare_models() successfully completed......................................
